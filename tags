!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AS	Makefile	/^AS = $(TOOLPREFIX)gas$/;"	m
Align	user/umalloc.c	/^typedef long Align;$/;"	t	file:
BACK	user/sh.c	12;"	d	file:
BACKSPACE	kernel/console.c	25;"	d	file:
BBLOCK	kernel/fs.h	51;"	d
BPB	kernel/fs.h	48;"	d
BSIZE	kernel/fs.h	6;"	d
BUFSZ	user/usertests.c	20;"	d	file:
C	kernel/console.c	26;"	d	file:
CC	Makefile	/^CC = $(TOOLPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS = -Wall -Werror -O -fno-omit-frame-pointer -ggdb -gdwarf-2$/;"	m
CONSOLE	kernel/file.h	40;"	d
CPUS	Makefile	/^CPUS := 3$/;"	m
DIRSIZ	kernel/fs.h	54;"	d
Disassembly	kernel/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/cat.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/echo.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/grind.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/init.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/initcode.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/kill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ln.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/ls.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/matmul.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/mkdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/rm.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/sh.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/stressfs.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/usertests.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/wc.asm	/^Disassembly of section .text:$/;"	l
Disassembly	user/zombie.asm	/^Disassembly of section .text:$/;"	l
ELF_MAGIC	kernel/elf.h	3;"	d
ELF_PROG_FLAG_EXEC	kernel/elf.h	40;"	d
ELF_PROG_FLAG_READ	kernel/elf.h	42;"	d
ELF_PROG_FLAG_WRITE	kernel/elf.h	41;"	d
ELF_PROG_LOAD	kernel/elf.h	37;"	d
EXEC	user/sh.c	8;"	d	file:
FCR	kernel/uart.c	27;"	d	file:
FCR_FIFO_CLEAR	kernel/uart.c	29;"	d	file:
FCR_FIFO_ENABLE	kernel/uart.c	28;"	d	file:
FD_DEVICE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon6
FD_INODE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon6
FD_NONE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon6
FD_PIPE	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	e	enum:file::__anon6
FSMAGIC	kernel/fs.h	25;"	d
FSSIZE	kernel/param.h	12;"	d
GDBPORT	Makefile	/^GDBPORT = $(shell expr `id -u` % 5000 + 25000)$/;"	m
Header	user/umalloc.c	/^typedef union header Header;$/;"	t	typeref:union:header	file:
IBLOCK	kernel/fs.h	45;"	d
IER	kernel/uart.c	24;"	d	file:
IER_RX_ENABLE	kernel/uart.c	25;"	d	file:
IER_TX_ENABLE	kernel/uart.c	26;"	d	file:
INPUT_BUF_SIZE	kernel/console.c	48;"	d	file:
IPB	kernel/fs.h	42;"	d
ISR	kernel/uart.c	30;"	d	file:
K	Makefile	/^K=kernel$/;"	m
KERNBASE	kernel/memlayout.h	39;"	d
KSTACK	kernel/memlayout.h	48;"	d
LCR	kernel/uart.c	31;"	d	file:
LCR_BAUD_LATCH	kernel/uart.c	33;"	d	file:
LCR_EIGHT_BITS	kernel/uart.c	32;"	d	file:
LD	Makefile	/^LD = $(TOOLPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = -z max-page-size=4096$/;"	m
LIST	user/sh.c	11;"	d	file:
LOGSIZE	kernel/param.h	10;"	d
LSR	kernel/uart.c	34;"	d	file:
LSR_RX_READY	kernel/uart.c	35;"	d	file:
LSR_TX_IDLE	kernel/uart.c	36;"	d	file:
MAKE_SATP	kernel/riscv.h	227;"	d
MAXARG	kernel/param.h	8;"	d
MAXARGS	user/sh.c	14;"	d	file:
MAXFILE	kernel/fs.h	29;"	d
MAXOPBLOCKS	kernel/param.h	9;"	d
MAXPATH	kernel/param.h	13;"	d
MAXVA	kernel/riscv.h	382;"	d
MAXVAplus	user/usertests.c	/^MAXVAplus(char *s)$/;"	f
MIE_STIE	kernel/kernel.asm	/^#define MIE_STIE (1L << 5)  \/\/ supervisor timer$/;"	d
MIE_STIE	kernel/riscv.h	99;"	d
MSTATUS_MIE	kernel/riscv.h	18;"	d
MSTATUS_MPP_M	kernel/riscv.h	15;"	d
MSTATUS_MPP_MASK	kernel/riscv.h	14;"	d
MSTATUS_MPP_S	kernel/riscv.h	16;"	d
MSTATUS_MPP_U	kernel/riscv.h	17;"	d
N	user/forktest.asm	/^#define N  1000$/;"	d
N	user/forktest.c	8;"	d	file:
NBUF	kernel/param.h	11;"	d
NCPU	kernel/param.h	2;"	d
NDEV	kernel/param.h	6;"	d
NDIRECT	kernel/fs.h	27;"	d
NELEM	kernel/defs.h	189;"	d
NFILE	kernel/param.h	4;"	d
NINDIRECT	kernel/fs.h	28;"	d
NINODE	kernel/param.h	5;"	d
NINODES	mkfs/mkfs.c	18;"	d	file:
NOFILE	kernel/param.h	3;"	d
NPROC	kernel/param.h	1;"	d
NUM	kernel/virtio.h	50;"	d
OBJCOPY	Makefile	/^OBJCOPY = $(TOOLPREFIX)objcopy$/;"	m
OBJDUMP	Makefile	/^OBJDUMP = $(TOOLPREFIX)objdump$/;"	m
OBJS	Makefile	/^OBJS = \\$/;"	m
O_CREATE	kernel/fcntl.h	4;"	d
O_RDONLY	kernel/fcntl.h	1;"	d
O_RDWR	kernel/fcntl.h	3;"	d
O_TRUNC	kernel/fcntl.h	5;"	d
O_WRONLY	kernel/fcntl.h	2;"	d
PA2PTE	kernel/riscv.h	367;"	d
PGROUNDDOWN	kernel/riscv.h	358;"	d
PGROUNDUP	kernel/riscv.h	357;"	d
PGSHIFT	kernel/riscv.h	355;"	d
PGSIZE	kernel/riscv.h	354;"	d
PHYSTOP	kernel/memlayout.h	40;"	d
PIPE	user/sh.c	10;"	d	file:
PIPESIZE	kernel/pipe.c	11;"	d	file:
PLIC	kernel/memlayout.h	29;"	d
PLIC_PENDING	kernel/memlayout.h	31;"	d
PLIC_PRIORITY	kernel/memlayout.h	30;"	d
PLIC_SCLAIM	kernel/memlayout.h	34;"	d
PLIC_SENABLE	kernel/memlayout.h	32;"	d
PLIC_SPRIORITY	kernel/memlayout.h	33;"	d
PTE2PA	kernel/riscv.h	369;"	d
PTE_FLAGS	kernel/riscv.h	371;"	d
PTE_R	kernel/riscv.h	361;"	d
PTE_U	kernel/riscv.h	364;"	d
PTE_V	kernel/riscv.h	360;"	d
PTE_W	kernel/riscv.h	362;"	d
PTE_X	kernel/riscv.h	363;"	d
PX	kernel/riscv.h	376;"	d
PXMASK	kernel/riscv.h	374;"	d
PXSHIFT	kernel/riscv.h	375;"	d
QEMU	Makefile	/^QEMU = qemu-system-riscv64$/;"	m
QEMUGDB	Makefile	/^QEMUGDB = $(shell if $(QEMU) -help | grep -q '^-gdb'; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -machine virt -bios none -kernel $K\/kernel -m 128M -smp $(CPUS) -nographic$/;"	m
R	kernel/virtio_disk.c	20;"	d	file:
REDIR	user/sh.c	9;"	d	file:
RHR	kernel/uart.c	22;"	d	file:
ROOTDEV	kernel/param.h	7;"	d
ROOTINO	kernel/fs.h	5;"	d
RUNNABLE	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
RUNNING	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
ReadReg	kernel/uart.c	38;"	d	file:
Reg	kernel/uart.c	16;"	d	file:
SATP_SV39	kernel/riscv.h	225;"	d
SIE_SEIE	kernel/riscv.h	81;"	d
SIE_SSIE	kernel/riscv.h	83;"	d
SIE_STIE	kernel/riscv.h	82;"	d
SLEEPING	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
SSTATUS_SIE	kernel/riscv.h	48;"	d
SSTATUS_SPIE	kernel/riscv.h	46;"	d
SSTATUS_SPP	kernel/riscv.h	45;"	d
SSTATUS_UIE	kernel/riscv.h	49;"	d
SSTATUS_UPIE	kernel/riscv.h	47;"	d
SYS_chdir	kernel/syscall.h	10;"	d
SYS_close	kernel/syscall.h	22;"	d
SYS_dup	kernel/syscall.h	11;"	d
SYS_exec	kernel/syscall.h	8;"	d
SYS_exit	kernel/syscall.h	3;"	d
SYS_fork	kernel/syscall.h	2;"	d
SYS_fstat	kernel/syscall.h	9;"	d
SYS_getpid	kernel/syscall.h	12;"	d
SYS_kill	kernel/syscall.h	7;"	d
SYS_link	kernel/syscall.h	20;"	d
SYS_mkdir	kernel/syscall.h	21;"	d
SYS_mknod	kernel/syscall.h	18;"	d
SYS_open	kernel/syscall.h	16;"	d
SYS_pipe	kernel/syscall.h	5;"	d
SYS_read	kernel/syscall.h	6;"	d
SYS_sbrk	kernel/syscall.h	13;"	d
SYS_sleep	kernel/syscall.h	14;"	d
SYS_unlink	kernel/syscall.h	19;"	d
SYS_uptime	kernel/syscall.h	15;"	d
SYS_wait	kernel/syscall.h	4;"	d
SYS_write	kernel/syscall.h	17;"	d
THR	kernel/uart.c	23;"	d	file:
TOOLPREFIX	Makefile	/^TOOLPREFIX := $(shell if riscv64-unknown-elf-objdump -i 2>&1 | grep 'elf64-big' >\/dev\/null 2>&1; \\$/;"	m
TRAMPOLINE	kernel/memlayout.h	44;"	d
TRAPFRAME	kernel/memlayout.h	59;"	d
T_DEVICE	kernel/stat.h	3;"	d
T_DIR	kernel/stat.h	1;"	d
T_FILE	kernel/stat.h	2;"	d
U	Makefile	/^U=user$/;"	m
UART0	kernel/memlayout.h	21;"	d
UART0_IRQ	kernel/memlayout.h	22;"	d
UART_TX_BUF_SIZE	kernel/uart.c	43;"	d	file:
ULIB	Makefile	/^ULIB = $U\/ulib.o $U\/usys.o $U\/printf.o $U\/umalloc.o$/;"	m
UNUSED	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
UPROGS	Makefile	/^UPROGS=\\$/;"	m
USED	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
USERSTACK	kernel/param.h	14;"	d
VIRTIO0	kernel/memlayout.h	25;"	d
VIRTIO0_IRQ	kernel/memlayout.h	26;"	d
VIRTIO_BLK_F_CONFIG_WCE	kernel/virtio.h	42;"	d
VIRTIO_BLK_F_MQ	kernel/virtio.h	43;"	d
VIRTIO_BLK_F_RO	kernel/virtio.h	40;"	d
VIRTIO_BLK_F_SCSI	kernel/virtio.h	41;"	d
VIRTIO_BLK_T_IN	kernel/virtio.h	86;"	d
VIRTIO_BLK_T_OUT	kernel/virtio.h	87;"	d
VIRTIO_CONFIG_S_ACKNOWLEDGE	kernel/virtio.h	34;"	d
VIRTIO_CONFIG_S_DRIVER	kernel/virtio.h	35;"	d
VIRTIO_CONFIG_S_DRIVER_OK	kernel/virtio.h	36;"	d
VIRTIO_CONFIG_S_FEATURES_OK	kernel/virtio.h	37;"	d
VIRTIO_F_ANY_LAYOUT	kernel/virtio.h	44;"	d
VIRTIO_MMIO_DEVICE_DESC_HIGH	kernel/virtio.h	31;"	d
VIRTIO_MMIO_DEVICE_DESC_LOW	kernel/virtio.h	30;"	d
VIRTIO_MMIO_DEVICE_FEATURES	kernel/virtio.h	16;"	d
VIRTIO_MMIO_DEVICE_ID	kernel/virtio.h	14;"	d
VIRTIO_MMIO_DRIVER_DESC_HIGH	kernel/virtio.h	29;"	d
VIRTIO_MMIO_DRIVER_DESC_LOW	kernel/virtio.h	28;"	d
VIRTIO_MMIO_DRIVER_FEATURES	kernel/virtio.h	17;"	d
VIRTIO_MMIO_INTERRUPT_ACK	kernel/virtio.h	24;"	d
VIRTIO_MMIO_INTERRUPT_STATUS	kernel/virtio.h	23;"	d
VIRTIO_MMIO_MAGIC_VALUE	kernel/virtio.h	12;"	d
VIRTIO_MMIO_QUEUE_DESC_HIGH	kernel/virtio.h	27;"	d
VIRTIO_MMIO_QUEUE_DESC_LOW	kernel/virtio.h	26;"	d
VIRTIO_MMIO_QUEUE_NOTIFY	kernel/virtio.h	22;"	d
VIRTIO_MMIO_QUEUE_NUM	kernel/virtio.h	20;"	d
VIRTIO_MMIO_QUEUE_NUM_MAX	kernel/virtio.h	19;"	d
VIRTIO_MMIO_QUEUE_READY	kernel/virtio.h	21;"	d
VIRTIO_MMIO_QUEUE_SEL	kernel/virtio.h	18;"	d
VIRTIO_MMIO_STATUS	kernel/virtio.h	25;"	d
VIRTIO_MMIO_VENDOR_ID	kernel/virtio.h	15;"	d
VIRTIO_MMIO_VERSION	kernel/virtio.h	13;"	d
VIRTIO_RING_F_EVENT_IDX	kernel/virtio.h	46;"	d
VIRTIO_RING_F_INDIRECT_DESC	kernel/virtio.h	45;"	d
VRING_DESC_F_NEXT	kernel/virtio.h	59;"	d
VRING_DESC_F_WRITE	kernel/virtio.h	60;"	d
WriteReg	kernel/uart.c	39;"	d	file:
ZOMBIE	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	e	enum:procstate
_entry	kernel/entry.S	/^_entry:$/;"	l
a	kernel/kernel.asm	/^    a = (uint*)bp->data;$/;"	d
a	kernel/kernel.asm	/^  a = va;$/;"	d
a	user/usertests.asm	/^    a = b + 1;$/;"	d
a	user/usertests.asm	/^    a = sbrk(0);$/;"	d
a	user/usertests.asm	/^    a = sbrk(TOOMUCH);$/;"	d
a	user/usertests.asm	/^  a = sbrk(0);$/;"	d
a	user/usertests.asm	/^  a = sbrk(PGSIZE);$/;"	d
a0	kernel/proc.h	/^  \/* 112 *\/ uint64 a0;$/;"	m	struct:trapframe
a0	user/cat.asm	/^  a0:	48c000ef          	jal	ra,52c <exit>$/;"	l
a0	user/echo.asm	/^  a0:	ff010113          	addi	sp,sp,-16$/;"	l
a0	user/forktest.asm	/^  a0:	00905c63          	blez	s1,b8 <forktest+0x78>$/;"	l
a0	user/grep.asm	/^  a0:	02a00613          	li	a2,42$/;"	l
a0	user/grind.asm	/^      a0:	00008067          	ret$/;"	l
a0	user/init.asm	/^  a0:	48c000ef          	jal	ra,52c <open>$/;"	l
a0	user/kill.asm	/^  a0:	00178793          	addi	a5,a5,1$/;"	l
a0	user/ln.asm	/^  a0:	fff5c703          	lbu	a4,-1(a1)$/;"	l
a0	user/ls.asm	/^  a0:	00048513          	mv	a0,s1$/;"	l
a0	user/matmul.asm	/^  a0:	00030513          	mv	a0,t1$/;"	l
a0	user/mkdir.asm	/^  a0:	00000513          	li	a0,0$/;"	l
a0	user/rm.asm	/^  a0:	00000513          	li	a0,0$/;"	l
a0	user/sh.asm	/^      a0:	ff010113          	addi	sp,sp,-16$/;"	l
a0	user/stressfs.asm	/^  a0:	47c000ef          	jal	ra,51c <write>$/;"	l
a0	user/usertests.asm	/^      a0:	00100513          	li	a0,1$/;"	l
a0	user/wc.asm	/^  a0:	00100993          	li	s3,1$/;"	l
a0	user/zombie.asm	/^  a0:	fe0796e3          	bnez	a5,8c <strcmp+0x14>$/;"	l
a00	user/cat.asm	/^ a00:	07800593          	li	a1,120$/;"	l
a00	user/echo.asm	/^ a00:	04813a83          	ld	s5,72(sp)$/;"	l
a00	user/grep.asm	/^ a00:	e65ff0ef          	jal	ra,864 <putc>$/;"	l
a00	user/grind.asm	/^     a00:	e1450513          	addi	a0,a0,-492 # 1810 <malloc+0x24c>$/;"	l
a00	user/init.asm	/^ a00:	fe0598e3          	bnez	a1,9f0 <vprintf+0x318>$/;"	l
a00	user/kill.asm	/^ a00:	02010413          	addi	s0,sp,32$/;"	l
a00	user/ln.asm	/^ a00:	00c43023          	sd	a2,0(s0)$/;"	l
a00	user/ls.asm	/^ a00:	00000993          	li	s3,0$/;"	l
a00	user/matmul.asm	/^ a00:	008b8913          	addi	s2,s7,8$/;"	l
a00	user/mkdir.asm	/^ a00:	02013d03          	ld	s10,32(sp)$/;"	l
a00	user/rm.asm	/^ a00:	02013d03          	ld	s10,32(sp)$/;"	l
a00	user/sh.asm	/^     a00:	03010413          	addi	s0,sp,48$/;"	l
a00	user/stressfs.asm	/^ a00:	000bb903          	ld	s2,0(s7)$/;"	l
a00	user/usertests.asm	/^     a00:	02000613          	li	a2,32$/;"	l
a00	user/wc.asm	/^ a00:	e7dff06f          	j	87c <vprintf+0x8c>$/;"	l
a00	user/zombie.asm	/^ a00:	02010413          	addi	s0,sp,32$/;"	l
a04	user/cat.asm	/^ a04:	000b0513          	mv	a0,s6$/;"	l
a04	user/echo.asm	/^ a04:	04013b03          	ld	s6,64(sp)$/;"	l
a04	user/grep.asm	/^ a04:	0080006f          	j	a0c <vprintf+0x8c>$/;"	l
a04	user/grind.asm	/^     a04:	2b1000ef          	jal	ra,14b4 <printf>$/;"	l
a04	user/init.asm	/^ a04:	00098b93          	mv	s7,s3$/;"	l
a04	user/kill.asm	/^ a04:	00c43023          	sd	a2,0(s0)$/;"	l
a04	user/ln.asm	/^ a04:	00d43423          	sd	a3,8(s0)$/;"	l
a04	user/ls.asm	/^ a04:	f85ff06f          	j	988 <vprintf+0x8c>$/;"	l
a04	user/matmul.asm	/^ a04:	00000693          	li	a3,0$/;"	l
a04	user/mkdir.asm	/^ a04:	01813d83          	ld	s11,24(sp)$/;"	l
a04	user/rm.asm	/^ a04:	01813d83          	ld	s11,24(sp)$/;"	l
a04	user/sh.asm	/^     a04:	00050913          	mv	s2,a0$/;"	l
a04	user/stressfs.asm	/^ a04:	02090663          	beqz	s2,a30 <vprintf+0x338>$/;"	l
a04	user/usertests.asm	/^     a04:	fa040593          	addi	a1,s0,-96$/;"	l
a04	user/wc.asm	/^ a04:	008b8913          	addi	s2,s7,8$/;"	l
a04	user/zombie.asm	/^ a04:	00b43423          	sd	a1,8(s0)$/;"	l
a08	user/cat.asm	/^ a08:	c15ff0ef          	jal	ra,61c <putc>$/;"	l
a08	user/echo.asm	/^ a08:	03813b83          	ld	s7,56(sp)$/;"	l
a08	user/grep.asm	/^ a08:	03598663          	beq	s3,s5,a34 <vprintf+0xb4>$/;"	l
a08	user/grind.asm	/^     a08:	00100513          	li	a0,1$/;"	l
a08	user/init.asm	/^ a08:	00000993          	li	s3,0$/;"	l
a08	user/kill.asm	/^ a08:	00d43423          	sd	a3,8(s0)$/;"	l
a08	user/ln.asm	/^ a08:	00e43823          	sd	a4,16(s0)$/;"	l
a08	user/ls.asm	/^ a08:	008b8913          	addi	s2,s7,8$/;"	l
a08	user/matmul.asm	/^ a08:	01000613          	li	a2,16$/;"	l
a08	user/mkdir.asm	/^ a08:	08010113          	addi	sp,sp,128$/;"	l
a08	user/rm.asm	/^ a08:	08010113          	addi	sp,sp,128$/;"	l
a08	user/sh.asm	/^     a08:	00058993          	mv	s3,a1$/;"	l
a08	user/stressfs.asm	/^ a08:	00094583          	lbu	a1,0(s2)$/;"	l
a08	user/usertests.asm	/^     a08:	00090513          	mv	a0,s2$/;"	l
a08	user/wc.asm	/^ a08:	00000693          	li	a3,0$/;"	l
a08	user/zombie.asm	/^ a08:	00c43823          	sd	a2,16(s0)$/;"	l
a0c	user/cat.asm	/^ a0c:	01000913          	li	s2,16$/;"	l
a0c	user/echo.asm	/^ a0c:	03013c03          	ld	s8,48(sp)$/;"	l
a0c	user/grep.asm	/^ a0c:	0014849b          	addiw	s1,s1,1$/;"	l
a0c	user/grind.asm	/^     a0c:	4c8000ef          	jal	ra,ed4 <exit>$/;"	l
a0c	user/init.asm	/^ a0c:	d59ff06f          	j	764 <vprintf+0x8c>$/;"	l
a0c	user/kill.asm	/^ a0c:	00e43823          	sd	a4,16(s0)$/;"	l
a0c	user/ln.asm	/^ a0c:	00f43c23          	sd	a5,24(s0)$/;"	l
a0c	user/ls.asm	/^ a0c:	00100693          	li	a3,1$/;"	l
a0c	user/matmul.asm	/^ a0c:	000ba583          	lw	a1,0(s7)$/;"	l
a0c	user/mkdir.asm	/^ a0c:	00008067          	ret$/;"	l
a0c	user/rm.asm	/^ a0c:	00008067          	ret$/;"	l
a0c	user/sh.asm	/^     a0c:	f41ff0ef          	jal	ra,94c <parsepipe>$/;"	l
a0c	user/stressfs.asm	/^ a0c:	02058a63          	beqz	a1,a40 <vprintf+0x348>$/;"	l
a0c	user/usertests.asm	/^     a0c:	590050ef          	jal	ra,5f9c <read>$/;"	l
a0c	user/wc.asm	/^ a0c:	00a00613          	li	a2,10$/;"	l
a0c	user/zombie.asm	/^ a0c:	00d43c23          	sd	a3,24(s0)$/;"	l
a1	kernel/proc.h	/^  \/* 120 *\/ uint64 a1;$/;"	m	struct:trapframe
a10	user/cat.asm	/^ a10:	03c9d793          	srli	a5,s3,0x3c$/;"	l
a10	user/echo.asm	/^ a10:	02813c83          	ld	s9,40(sp)$/;"	l
a10	user/grep.asm	/^ a10:	00048713          	mv	a4,s1$/;"	l
a10	user/grind.asm	/^     a10:	4b8000ef          	jal	ra,ec8 <fork>$/;"	l
a10	user/init.asm	/^ a10:	00000917          	auipc	s2,0x0$/;"	l
a10	user/kill.asm	/^ a10:	00f43c23          	sd	a5,24(s0)$/;"	l
a10	user/ln.asm	/^ a10:	03043023          	sd	a6,32(s0)$/;"	l
a10	user/ls.asm	/^ a10:	00a00613          	li	a2,10$/;"	l
a10	user/matmul.asm	/^ a10:	000b0513          	mv	a0,s6$/;"	l
a10	user/mkdir.asm	/^ a10:	fb010113          	addi	sp,sp,-80$/;"	l
a10	user/rm.asm	/^ a10:	fb010113          	addi	sp,sp,-80$/;"	l
a10	user/sh.asm	/^     a10:	00050493          	mv	s1,a0$/;"	l
a10	user/stressfs.asm	/^ a10:	000b0513          	mv	a0,s6$/;"	l
a10	user/usertests.asm	/^     a10:	00600793          	li	a5,6$/;"	l
a10	user/wc.asm	/^ a10:	000ba583          	lw	a1,0(s7)$/;"	l
a10	user/zombie.asm	/^ a10:	02e43023          	sd	a4,32(s0)$/;"	l
a14	user/cat.asm	/^ a14:	00fc87b3          	add	a5,s9,a5$/;"	l
a14	user/echo.asm	/^ a14:	02013d03          	ld	s10,32(sp)$/;"	l
a14	user/grep.asm	/^ a14:	009a07b3          	add	a5,s4,s1$/;"	l
a14	user/grind.asm	/^     a14:	00050913          	mv	s2,a0$/;"	l
a14	user/init.asm	/^ a14:	36890913          	addi	s2,s2,872 # d78 <malloc+0x1bc>$/;"	l
a14	user/kill.asm	/^ a14:	03043023          	sd	a6,32(s0)$/;"	l
a14	user/ln.asm	/^ a14:	03143423          	sd	a7,40(s0)$/;"	l
a14	user/ls.asm	/^ a14:	000ba583          	lw	a1,0(s7)$/;"	l
a14	user/matmul.asm	/^ a14:	c9dff0ef          	jal	ra,6b0 <printint>$/;"	l
a14	user/mkdir.asm	/^ a14:	00113c23          	sd	ra,24(sp)$/;"	l
a14	user/rm.asm	/^ a14:	00113c23          	sd	ra,24(sp)$/;"	l
a14	user/sh.asm	/^     a14:	00001a17          	auipc	s4,0x1$/;"	l
a14	user/stressfs.asm	/^ a14:	bc9ff0ef          	jal	ra,5dc <putc>$/;"	l
a14	user/usertests.asm	/^     a14:	0cf51c63          	bne	a0,a5,aec <truncate1+0x1dc>$/;"	l
a14	user/wc.asm	/^ a14:	000b0513          	mv	a0,s6$/;"	l
a14	user/zombie.asm	/^ a14:	02f43423          	sd	a5,40(s0)$/;"	l
a18	user/cat.asm	/^ a18:	0007c583          	lbu	a1,0(a5)$/;"	l
a18	user/echo.asm	/^ a18:	01813d83          	ld	s11,24(sp)$/;"	l
a18	user/grep.asm	/^ a18:	0007c903          	lbu	s2,0(a5)$/;"	l
a18	user/grind.asm	/^     a18:	02054663          	bltz	a0,a44 <iter+0xa4>$/;"	l
a18	user/init.asm	/^ a18:	02800593          	li	a1,40$/;"	l
a18	user/kill.asm	/^ a18:	03143423          	sd	a7,40(s0)$/;"	l
a18	user/ln.asm	/^ a18:	fe843423          	sd	s0,-24(s0)$/;"	l
a18	user/ls.asm	/^ a18:	000b0513          	mv	a0,s6$/;"	l
a18	user/matmul.asm	/^ a18:	00090b93          	mv	s7,s2$/;"	l
a18	user/mkdir.asm	/^ a18:	00813823          	sd	s0,16(sp)$/;"	l
a18	user/rm.asm	/^ a18:	00813823          	sd	s0,16(sp)$/;"	l
a18	user/sh.asm	/^     a18:	09ca0a13          	addi	s4,s4,156 # 1ab0 <malloc+0x1ec>$/;"	l
a18	user/stressfs.asm	/^ a18:	00190913          	addi	s2,s2,1$/;"	l
a18	user/usertests.asm	/^     a18:	02000613          	li	a2,32$/;"	l
a18	user/wc.asm	/^ a18:	cedff0ef          	jal	ra,704 <printint>$/;"	l
a18	user/zombie.asm	/^ a18:	03043823          	sd	a6,48(s0)$/;"	l
a1c	user/cat.asm	/^ a1c:	000b0513          	mv	a0,s6$/;"	l
a1c	user/echo.asm	/^ a1c:	08010113          	addi	sp,sp,128$/;"	l
a1c	user/grep.asm	/^ a1c:	2a090c63          	beqz	s2,cd4 <vprintf+0x354>$/;"	l
a1c	user/grind.asm	/^     a1c:	02051e63          	bnez	a0,a58 <iter+0xb8>$/;"	l
a1c	user/init.asm	/^ a1c:	fd5ff06f          	j	9f0 <vprintf+0x318>$/;"	l
a1c	user/kill.asm	/^ a1c:	fe843423          	sd	s0,-24(s0)$/;"	l
a1c	user/ln.asm	/^ a1c:	00040613          	mv	a2,s0$/;"	l
a1c	user/ls.asm	/^ a1c:	df5ff0ef          	jal	ra,810 <printint>$/;"	l
a1c	user/matmul.asm	/^ a1c:	00000993          	li	s3,0$/;"	l
a1c	user/mkdir.asm	/^ a1c:	02010413          	addi	s0,sp,32$/;"	l
a1c	user/rm.asm	/^ a1c:	02010413          	addi	s0,sp,32$/;"	l
a1c	user/sh.asm	/^     a1c:	000a0613          	mv	a2,s4$/;"	l
a1c	user/stressfs.asm	/^ a1c:	00094583          	lbu	a1,0(s2)$/;"	l
a1c	user/usertests.asm	/^     a1c:	fa040593          	addi	a1,s0,-96$/;"	l
a1c	user/wc.asm	/^ a1c:	0014849b          	addiw	s1,s1,1$/;"	l
a1c	user/zombie.asm	/^ a1c:	03143c23          	sd	a7,56(s0)$/;"	l
a2	kernel/proc.h	/^  \/* 128 *\/ uint64 a2;$/;"	m	struct:trapframe
a20	user/cat.asm	/^ a20:	bfdff0ef          	jal	ra,61c <putc>$/;"	l
a20	user/echo.asm	/^ a20:	00008067          	ret$/;"	l
a20	user/grep.asm	/^ a20:	0009079b          	sext.w	a5,s2$/;"	l
a20	user/grind.asm	/^     a20:	00001697          	auipc	a3,0x1$/;"	l
a20	user/init.asm	/^ a20:	00098b93          	mv	s7,s3$/;"	l
a20	user/kill.asm	/^ a20:	00040613          	mv	a2,s0$/;"	l
a20	user/ln.asm	/^ a20:	c41ff0ef          	jal	ra,660 <vprintf>$/;"	l
a20	user/ls.asm	/^ a20:	00090b93          	mv	s7,s2$/;"	l
a20	user/matmul.asm	/^ a20:	e09ff06f          	j	828 <vprintf+0x8c>$/;"	l
a20	user/mkdir.asm	/^ a20:	00c43023          	sd	a2,0(s0)$/;"	l
a20	user/rm.asm	/^ a20:	00c43023          	sd	a2,0(s0)$/;"	l
a20	user/sh.asm	/^     a20:	00098593          	mv	a1,s3$/;"	l
a20	user/stressfs.asm	/^ a20:	fe0598e3          	bnez	a1,a10 <vprintf+0x318>$/;"	l
a20	user/usertests.asm	/^     a20:	00048513          	mv	a0,s1$/;"	l
a20	user/wc.asm	/^ a20:	00090b93          	mv	s7,s2$/;"	l
a20	user/zombie.asm	/^ a20:	00840613          	addi	a2,s0,8$/;"	l
a24	user/cat.asm	/^ a24:	00499993          	slli	s3,s3,0x4$/;"	l
a24	user/echo.asm	/^ a24:	fb010113          	addi	sp,sp,-80$/;"	l
a24	user/grep.asm	/^ a24:	fe0992e3          	bnez	s3,a08 <vprintf+0x88>$/;"	l
a24	user/grind.asm	/^     a24:	5e068693          	addi	a3,a3,1504 # 2000 <rand_next>$/;"	l
a24	user/init.asm	/^ a24:	00000993          	li	s3,0$/;"	l
a24	user/kill.asm	/^ a24:	c41ff0ef          	jal	ra,664 <vprintf>$/;"	l
a24	user/ln.asm	/^ a24:	01813083          	ld	ra,24(sp)$/;"	l
a24	user/ls.asm	/^ a24:	00000993          	li	s3,0$/;"	l
a24	user/matmul.asm	/^ a24:	008b8913          	addi	s2,s7,8$/;"	l
a24	user/mkdir.asm	/^ a24:	00d43423          	sd	a3,8(s0)$/;"	l
a24	user/rm.asm	/^ a24:	00d43423          	sd	a3,8(s0)$/;"	l
a24	user/sh.asm	/^     a24:	00090513          	mv	a0,s2$/;"	l
a24	user/stressfs.asm	/^ a24:	00098b93          	mv	s7,s3$/;"	l
a24	user/usertests.asm	/^     a24:	578050ef          	jal	ra,5f9c <read>$/;"	l
a24	user/wc.asm	/^ a24:	00000993          	li	s3,0$/;"	l
a24	user/zombie.asm	/^ a24:	fec43423          	sd	a2,-24(s0)$/;"	l
a28	user/cat.asm	/^ a28:	fff9091b          	addiw	s2,s2,-1$/;"	l
a28	user/echo.asm	/^ a28:	00113c23          	sd	ra,24(sp)$/;"	l
a28	user/grep.asm	/^ a28:	fd5798e3          	bne	a5,s5,9f8 <vprintf+0x78>$/;"	l
a28	user/grind.asm	/^     a28:	0006b783          	ld	a5,0(a3)$/;"	l
a28	user/init.asm	/^ a28:	d3dff06f          	j	764 <vprintf+0x8c>$/;"	l
a28	user/kill.asm	/^ a28:	01813083          	ld	ra,24(sp)$/;"	l
a28	user/ln.asm	/^ a28:	01013403          	ld	s0,16(sp)$/;"	l
a28	user/ls.asm	/^ a28:	f61ff06f          	j	988 <vprintf+0x8c>$/;"	l
a28	user/matmul.asm	/^ a28:	00000693          	li	a3,0$/;"	l
a28	user/mkdir.asm	/^ a28:	00e43823          	sd	a4,16(s0)$/;"	l
a28	user/rm.asm	/^ a28:	00e43823          	sd	a4,16(s0)$/;"	l
a28	user/sh.asm	/^     a28:	be9ff0ef          	jal	ra,610 <peek>$/;"	l
a28	user/stressfs.asm	/^ a28:	00000993          	li	s3,0$/;"	l
a28	user/usertests.asm	/^     a28:	00200793          	li	a5,2$/;"	l
a28	user/wc.asm	/^ a28:	e55ff06f          	j	87c <vprintf+0x8c>$/;"	l
a28	user/zombie.asm	/^ a28:	00050593          	mv	a1,a0$/;"	l
a2c	user/cat.asm	/^ a2c:	fe0912e3          	bnez	s2,a10 <vprintf+0x2d8>$/;"	l
a2c	user/echo.asm	/^ a2c:	00813823          	sd	s0,16(sp)$/;"	l
a2c	user/grep.asm	/^ a2c:	00078993          	mv	s3,a5$/;"	l
a2c	user/grind.asm	/^     a2c:	00002737          	lui	a4,0x2$/;"	l
a2c	user/init.asm	/^ a2c:	07813083          	ld	ra,120(sp)$/;"	l
a2c	user/kill.asm	/^ a2c:	01013403          	ld	s0,16(sp)$/;"	l
a2c	user/ln.asm	/^ a2c:	05010113          	addi	sp,sp,80$/;"	l
a2c	user/ls.asm	/^ a2c:	03868c63          	beq	a3,s8,a64 <vprintf+0x168>$/;"	l
a2c	user/matmul.asm	/^ a2c:	01000613          	li	a2,16$/;"	l
a2c	user/mkdir.asm	/^ a2c:	00f43c23          	sd	a5,24(s0)$/;"	l
a2c	user/rm.asm	/^ a2c:	00f43c23          	sd	a5,24(s0)$/;"	l
a2c	user/sh.asm	/^     a2c:	02050463          	beqz	a0,a54 <parseline+0x70>$/;"	l
a2c	user/stressfs.asm	/^ a2c:	d59ff06f          	j	784 <vprintf+0x8c>$/;"	l
a2c	user/usertests.asm	/^     a2c:	0cf51e63          	bne	a0,a5,b08 <truncate1+0x1f8>$/;"	l
a2c	user/wc.asm	/^ a2c:	008b8913          	addi	s2,s7,8$/;"	l
a2c	user/zombie.asm	/^ a2c:	00100513          	li	a0,1$/;"	l
a3	kernel/proc.h	/^  \/* 136 *\/ uint64 a3;$/;"	m	struct:trapframe
a30	user/cat.asm	/^ a30:	f8843b83          	ld	s7,-120(s0)$/;"	l
a30	user/echo.asm	/^ a30:	02010413          	addi	s0,sp,32$/;"	l
a30	user/grep.asm	/^ a30:	fddff06f          	j	a0c <vprintf+0x8c>$/;"	l
a30	user/grind.asm	/^     a30:	c0970713          	addi	a4,a4,-1015 # 1c09 <digits+0x209>$/;"	l
a30	user/init.asm	/^ a30:	07013403          	ld	s0,112(sp)$/;"	l
a30	user/kill.asm	/^ a30:	05010113          	addi	sp,sp,80$/;"	l
a30	user/ln.asm	/^ a30:	00008067          	ret$/;"	l
a30	user/ls.asm	/^ a30:	05a68e63          	beq	a3,s10,a8c <vprintf+0x190>$/;"	l
a30	user/matmul.asm	/^ a30:	000ba583          	lw	a1,0(s7)$/;"	l
a30	user/mkdir.asm	/^ a30:	03043023          	sd	a6,32(s0)$/;"	l
a30	user/rm.asm	/^ a30:	03043023          	sd	a6,32(s0)$/;"	l
a30	user/sh.asm	/^     a30:	00000693          	li	a3,0$/;"	l
a30	user/stressfs.asm	/^ a30:	00000917          	auipc	s2,0x0$/;"	l
a30	user/usertests.asm	/^     a30:	00006517          	auipc	a0,0x6$/;"	l
a30	user/wc.asm	/^ a30:	00000693          	li	a3,0$/;"	l
a30	user/zombie.asm	/^ a30:	bf1ff0ef          	jal	ra,620 <vprintf>$/;"	l
a34	user/cat.asm	/^ a34:	00000993          	li	s3,0$/;"	l
a34	user/echo.asm	/^ a34:	00c43023          	sd	a2,0(s0)$/;"	l
a34	user/grep.asm	/^ a34:	08078a63          	beqz	a5,ac8 <vprintf+0x148>$/;"	l
a34	user/grind.asm	/^     a34:	00e7c7b3          	xor	a5,a5,a4$/;"	l
a34	user/init.asm	/^ a34:	06813483          	ld	s1,104(sp)$/;"	l
a34	user/kill.asm	/^ a34:	00008067          	ret$/;"	l
a34	user/ln.asm	/^ a34:	fa010113          	addi	sp,sp,-96$/;"	l
a34	user/ls.asm	/^ a34:	0db68e63          	beq	a3,s11,b10 <vprintf+0x214>$/;"	l
a34	user/matmul.asm	/^ a34:	000b0513          	mv	a0,s6$/;"	l
a34	user/mkdir.asm	/^ a34:	03143423          	sd	a7,40(s0)$/;"	l
a34	user/rm.asm	/^ a34:	03143423          	sd	a7,40(s0)$/;"	l
a34	user/sh.asm	/^     a34:	00000613          	li	a2,0$/;"	l
a34	user/stressfs.asm	/^ a34:	33090913          	addi	s2,s2,816 # d60 <malloc+0x184>$/;"	l
a34	user/usertests.asm	/^     a34:	e3050513          	addi	a0,a0,-464 # 6860 <malloc+0x1f8>$/;"	l
a34	user/wc.asm	/^ a34:	00a00613          	li	a2,10$/;"	l
a34	user/zombie.asm	/^ a34:	01813083          	ld	ra,24(sp)$/;"	l
a38	user/cat.asm	/^ a38:	d8dff06f          	j	7c4 <vprintf+0x8c>$/;"	l
a38	user/echo.asm	/^ a38:	00d43423          	sd	a3,8(s0)$/;"	l
a38	user/grep.asm	/^ a38:	00ea06b3          	add	a3,s4,a4$/;"	l
a38	user/grind.asm	/^     a38:	00f6b023          	sd	a5,0(a3)$/;"	l
a38	user/init.asm	/^ a38:	06013903          	ld	s2,96(sp)$/;"	l
a38	user/kill.asm	/^ a38:	fa010113          	addi	sp,sp,-96$/;"	l
a38	user/ln.asm	/^ a38:	00113c23          	sd	ra,24(sp)$/;"	l
a38	user/ls.asm	/^ a38:	05a68c63          	beq	a3,s10,a90 <vprintf+0x194>$/;"	l
a38	user/matmul.asm	/^ a38:	c79ff0ef          	jal	ra,6b0 <printint>$/;"	l
a38	user/mkdir.asm	/^ a38:	fe843423          	sd	s0,-24(s0)$/;"	l
a38	user/rm.asm	/^ a38:	fe843423          	sd	s0,-24(s0)$/;"	l
a38	user/sh.asm	/^     a38:	00098593          	mv	a1,s3$/;"	l
a38	user/stressfs.asm	/^ a38:	02800593          	li	a1,40$/;"	l
a38	user/usertests.asm	/^     a38:	5b8050ef          	jal	ra,5ff0 <unlink>$/;"	l
a38	user/wc.asm	/^ a38:	000ba583          	lw	a1,0(s7)$/;"	l
a38	user/zombie.asm	/^ a38:	01013403          	ld	s0,16(sp)$/;"	l
a3c	user/cat.asm	/^ a3c:	008b8993          	addi	s3,s7,8$/;"	l
a3c	user/echo.asm	/^ a3c:	00e43823          	sd	a4,16(s0)$/;"	l
a3c	user/grep.asm	/^ a3c:	0016c683          	lbu	a3,1(a3)$/;"	l
a3c	user/grind.asm	/^     a3c:	00100513          	li	a0,1$/;"	l
a3c	user/init.asm	/^ a3c:	05813983          	ld	s3,88(sp)$/;"	l
a3c	user/kill.asm	/^ a3c:	00113c23          	sd	ra,24(sp)$/;"	l
a3c	user/ln.asm	/^ a3c:	00813823          	sd	s0,16(sp)$/;"	l
a3c	user/ls.asm	/^ a3c:	07800793          	li	a5,120$/;"	l
a3c	user/matmul.asm	/^ a3c:	0014849b          	addiw	s1,s1,1$/;"	l
a3c	user/mkdir.asm	/^ a3c:	00040613          	mv	a2,s0$/;"	l
a3c	user/rm.asm	/^ a3c:	00040613          	mv	a2,s0$/;"	l
a3c	user/sh.asm	/^     a3c:	00090513          	mv	a0,s2$/;"	l
a3c	user/stressfs.asm	/^ a3c:	fd5ff06f          	j	a10 <vprintf+0x318>$/;"	l
a3c	user/usertests.asm	/^     a3c:	00098513          	mv	a0,s3$/;"	l
a3c	user/wc.asm	/^ a3c:	000b0513          	mv	a0,s6$/;"	l
a3c	user/zombie.asm	/^ a3c:	06010113          	addi	sp,sp,96$/;"	l
a4	kernel/proc.h	/^  \/* 144 *\/ uint64 a4;$/;"	m	struct:trapframe
a4	user/cat.asm	/^  a4:	fd010113          	addi	sp,sp,-48$/;"	l
a4	user/echo.asm	/^  a4:	00113423          	sd	ra,8(sp)$/;"	l
a4	user/forktest.asm	/^  a4:	00000513          	li	a0,0$/;"	l
a4	user/grep.asm	/^  a4:	02c68c63          	beq	a3,a2,dc <matchhere+0x5c>$/;"	l
a4	user/grind.asm	/^      a4:	f8010113          	addi	sp,sp,-128$/;"	l
a4	user/init.asm	/^  a4:	f89ff06f          	j	2c <main+0x2c>$/;"	l
a4	user/kill.asm	/^  a4:	fff5c703          	lbu	a4,-1(a1)$/;"	l
a4	user/ln.asm	/^  a4:	fee78fa3          	sb	a4,-1(a5)$/;"	l
a4	user/ls.asm	/^  a4:	2f0000ef          	jal	ra,394 <strlen>$/;"	l
a4	user/matmul.asm	/^  a4:	000e0593          	mv	a1,t3$/;"	l
a4	user/mkdir.asm	/^  a4:	3d0000ef          	jal	ra,474 <exit>$/;"	l
a4	user/rm.asm	/^  a4:	3d0000ef          	jal	ra,474 <exit>$/;"	l
a4	user/sh.asm	/^      a4:	00113423          	sd	ra,8(sp)$/;"	l
a4	user/stressfs.asm	/^  a4:	fff4849b          	addiw	s1,s1,-1$/;"	l
a4	user/usertests.asm	/^      a4:	6d5050ef          	jal	ra,5f78 <exit>$/;"	l
a4	user/wc.asm	/^  a4:	fddff06f          	j	80 <wc+0x80>$/;"	l
a4	user/zombie.asm	/^  a4:	0005c503          	lbu	a0,0(a1)$/;"	l
a40	user/cat.asm	/^ a40:	000bb903          	ld	s2,0(s7)$/;"	l
a40	user/echo.asm	/^ a40:	00f43c23          	sd	a5,24(s0)$/;"	l
a40	user/grep.asm	/^ a40:	00068613          	mv	a2,a3$/;"	l
a40	user/grind.asm	/^     a40:	e64ff0ef          	jal	ra,a4 <go>$/;"	l
a40	user/init.asm	/^ a40:	05013a03          	ld	s4,80(sp)$/;"	l
a40	user/kill.asm	/^ a40:	00813823          	sd	s0,16(sp)$/;"	l
a40	user/ln.asm	/^ a40:	02010413          	addi	s0,sp,32$/;"	l
a40	user/ls.asm	/^ a40:	14f68263          	beq	a3,a5,b84 <vprintf+0x288>$/;"	l
a40	user/matmul.asm	/^ a40:	00090b93          	mv	s7,s2$/;"	l
a40	user/mkdir.asm	/^ a40:	c41ff0ef          	jal	ra,680 <vprintf>$/;"	l
a40	user/rm.asm	/^ a40:	c41ff0ef          	jal	ra,680 <vprintf>$/;"	l
a40	user/sh.asm	/^     a40:	a49ff0ef          	jal	ra,488 <gettoken>$/;"	l
a40	user/stressfs.asm	/^ a40:	00098b93          	mv	s7,s3$/;"	l
a40	user/usertests.asm	/^     a40:	574050ef          	jal	ra,5fb4 <close>$/;"	l
a40	user/wc.asm	/^ a40:	cc5ff0ef          	jal	ra,704 <printint>$/;"	l
a40	user/zombie.asm	/^ a40:	00008067          	ret$/;"	l
a44	user/cat.asm	/^ a44:	02090663          	beqz	s2,a70 <vprintf+0x338>$/;"	l
a44	user/echo.asm	/^ a44:	03043023          	sd	a6,32(s0)$/;"	l
a44	user/grep.asm	/^ a44:	00068663          	beqz	a3,a50 <vprintf+0xd0>$/;"	l
a44	user/grind.asm	/^     a44:	00001517          	auipc	a0,0x1$/;"	l
a44	user/init.asm	/^ a44:	04813a83          	ld	s5,72(sp)$/;"	l
a44	user/kill.asm	/^ a44:	02010413          	addi	s0,sp,32$/;"	l
a44	user/ln.asm	/^ a44:	00b43423          	sd	a1,8(s0)$/;"	l
a44	user/ls.asm	/^ a44:	000a8593          	mv	a1,s5$/;"	l
a44	user/matmul.asm	/^ a44:	00000993          	li	s3,0$/;"	l
a44	user/mkdir.asm	/^ a44:	01813083          	ld	ra,24(sp)$/;"	l
a44	user/rm.asm	/^ a44:	01813083          	ld	ra,24(sp)$/;"	l
a44	user/sh.asm	/^     a44:	00048513          	mv	a0,s1$/;"	l
a44	user/stressfs.asm	/^ a44:	00000993          	li	s3,0$/;"	l
a44	user/usertests.asm	/^     a44:	00048513          	mv	a0,s1$/;"	l
a44	user/wc.asm	/^ a44:	0024849b          	addiw	s1,s1,2$/;"	l
a44	user/zombie.asm	/^ a44:	ff010113          	addi	sp,sp,-16$/;"	l
a48	user/cat.asm	/^ a48:	00094583          	lbu	a1,0(s2)$/;"	l
a48	user/echo.asm	/^ a48:	03143423          	sd	a7,40(s0)$/;"	l
a48	user/grep.asm	/^ a48:	00ea0733          	add	a4,s4,a4$/;"	l
a48	user/grind.asm	/^     a48:	dcc50513          	addi	a0,a0,-564 # 1810 <malloc+0x24c>$/;"	l
a48	user/init.asm	/^ a48:	04013b03          	ld	s6,64(sp)$/;"	l
a48	user/kill.asm	/^ a48:	00b43423          	sd	a1,8(s0)$/;"	l
a48	user/ln.asm	/^ a48:	00c43823          	sd	a2,16(s0)$/;"	l
a48	user/ls.asm	/^ a48:	000b0513          	mv	a0,s6$/;"	l
a48	user/matmul.asm	/^ a48:	de1ff06f          	j	828 <vprintf+0x8c>$/;"	l
a48	user/mkdir.asm	/^ a48:	01013403          	ld	s0,16(sp)$/;"	l
a48	user/rm.asm	/^ a48:	01013403          	ld	s0,16(sp)$/;"	l
a48	user/sh.asm	/^     a48:	9e5ff0ef          	jal	ra,42c <backcmd>$/;"	l
a48	user/stressfs.asm	/^ a48:	d3dff06f          	j	784 <vprintf+0x8c>$/;"	l
a48	user/usertests.asm	/^     a48:	56c050ef          	jal	ra,5fb4 <close>$/;"	l
a48	user/wc.asm	/^ a48:	00090b93          	mv	s7,s2$/;"	l
a48	user/zombie.asm	/^ a48:	00813423          	sd	s0,8(sp)$/;"	l
a4c	user/cat.asm	/^ a4c:	02058a63          	beqz	a1,a80 <vprintf+0x348>$/;"	l
a4c	user/echo.asm	/^ a4c:	fe843423          	sd	s0,-24(s0)$/;"	l
a4c	user/grep.asm	/^ a4c:	00274603          	lbu	a2,2(a4)$/;"	l
a4c	user/grind.asm	/^     a4c:	269000ef          	jal	ra,14b4 <printf>$/;"	l
a4c	user/init.asm	/^ a4c:	03813b83          	ld	s7,56(sp)$/;"	l
a4c	user/kill.asm	/^ a4c:	00c43823          	sd	a2,16(s0)$/;"	l
a4c	user/ln.asm	/^ a4c:	00d43c23          	sd	a3,24(s0)$/;"	l
a4c	user/ls.asm	/^ a4c:	d95ff0ef          	jal	ra,7e0 <putc>$/;"	l
a4c	user/matmul.asm	/^ a4c:	008b8793          	addi	a5,s7,8$/;"	l
a4c	user/mkdir.asm	/^ a4c:	05010113          	addi	sp,sp,80$/;"	l
a4c	user/rm.asm	/^ a4c:	05010113          	addi	sp,sp,80$/;"	l
a4c	user/sh.asm	/^     a4c:	00050493          	mv	s1,a0$/;"	l
a4c	user/stressfs.asm	/^ a4c:	07813083          	ld	ra,120(sp)$/;"	l
a4c	user/usertests.asm	/^     a4c:	00090513          	mv	a0,s2$/;"	l
a4c	user/wc.asm	/^ a4c:	00000993          	li	s3,0$/;"	l
a4c	user/zombie.asm	/^ a4c:	01010413          	addi	s0,sp,16$/;"	l
a5	kernel/proc.h	/^  \/* 152 *\/ uint64 a5;$/;"	m	struct:trapframe
a50	user/cat.asm	/^ a50:	000b0513          	mv	a0,s6$/;"	l
a50	user/echo.asm	/^ a50:	00040613          	mv	a2,s0$/;"	l
a50	user/grep.asm	/^ a50:	03878e63          	beq	a5,s8,a8c <vprintf+0x10c>$/;"	l
a50	user/grind.asm	/^     a50:	00100513          	li	a0,1$/;"	l
a50	user/init.asm	/^ a50:	03013c03          	ld	s8,48(sp)$/;"	l
a50	user/kill.asm	/^ a50:	00d43c23          	sd	a3,24(s0)$/;"	l
a50	user/ln.asm	/^ a50:	02e43023          	sd	a4,32(s0)$/;"	l
a50	user/ls.asm	/^ a50:	00090593          	mv	a1,s2$/;"	l
a50	user/matmul.asm	/^ a50:	f8f43423          	sd	a5,-120(s0)$/;"	l
a50	user/mkdir.asm	/^ a50:	00008067          	ret$/;"	l
a50	user/rm.asm	/^ a50:	00008067          	ret$/;"	l
a50	user/sh.asm	/^     a50:	fcdff06f          	j	a1c <parseline+0x38>$/;"	l
a50	user/stressfs.asm	/^ a50:	07013403          	ld	s0,112(sp)$/;"	l
a50	user/usertests.asm	/^     a50:	564050ef          	jal	ra,5fb4 <close>$/;"	l
a50	user/wc.asm	/^ a50:	e2dff06f          	j	87c <vprintf+0x8c>$/;"	l
a50	user/zombie.asm	/^ a50:	ff050693          	addi	a3,a0,-16$/;"	l
a54	user/cat.asm	/^ a54:	bc9ff0ef          	jal	ra,61c <putc>$/;"	l
a54	user/echo.asm	/^ a54:	c41ff0ef          	jal	ra,694 <vprintf>$/;"	l
a54	user/grep.asm	/^ a54:	05a78e63          	beq	a5,s10,ab0 <vprintf+0x130>$/;"	l
a54	user/grind.asm	/^     a54:	480000ef          	jal	ra,ed4 <exit>$/;"	l
a54	user/init.asm	/^ a54:	02813c83          	ld	s9,40(sp)$/;"	l
a54	user/kill.asm	/^ a54:	02e43023          	sd	a4,32(s0)$/;"	l
a54	user/ln.asm	/^ a54:	02f43423          	sd	a5,40(s0)$/;"	l
a54	user/ls.asm	/^ a54:	000b0513          	mv	a0,s6$/;"	l
a54	user/matmul.asm	/^ a54:	000bb983          	ld	s3,0(s7)$/;"	l
a54	user/mkdir.asm	/^ a54:	fa010113          	addi	sp,sp,-96$/;"	l
a54	user/rm.asm	/^ a54:	fa010113          	addi	sp,sp,-96$/;"	l
a54	user/sh.asm	/^     a54:	00001617          	auipc	a2,0x1$/;"	l
a54	user/stressfs.asm	/^ a54:	06813483          	ld	s1,104(sp)$/;"	l
a54	user/usertests.asm	/^     a54:	05813083          	ld	ra,88(sp)$/;"	l
a54	user/wc.asm	/^ a54:	008b8913          	addi	s2,s7,8$/;"	l
a54	user/zombie.asm	/^ a54:	00000797          	auipc	a5,0x0$/;"	l
a58	user/cat.asm	/^ a58:	00190913          	addi	s2,s2,1$/;"	l
a58	user/echo.asm	/^ a58:	01813083          	ld	ra,24(sp)$/;"	l
a58	user/grep.asm	/^ a58:	11b78c63          	beq	a5,s11,b70 <vprintf+0x1f0>$/;"	l
a58	user/grind.asm	/^     a58:	fff00793          	li	a5,-1$/;"	l
a58	user/init.asm	/^ a58:	02013d03          	ld	s10,32(sp)$/;"	l
a58	user/kill.asm	/^ a58:	02f43423          	sd	a5,40(s0)$/;"	l
a58	user/ln.asm	/^ a58:	03043823          	sd	a6,48(s0)$/;"	l
a58	user/ls.asm	/^ a58:	d89ff0ef          	jal	ra,7e0 <putc>$/;"	l
a58	user/matmul.asm	/^ a58:	03000593          	li	a1,48$/;"	l
a58	user/mkdir.asm	/^ a58:	00113c23          	sd	ra,24(sp)$/;"	l
a58	user/rm.asm	/^ a58:	00113c23          	sd	ra,24(sp)$/;"	l
a58	user/sh.asm	/^     a58:	06460613          	addi	a2,a2,100 # 1ab8 <malloc+0x1f4>$/;"	l
a58	user/stressfs.asm	/^ a58:	06013903          	ld	s2,96(sp)$/;"	l
a58	user/usertests.asm	/^     a58:	05013403          	ld	s0,80(sp)$/;"	l
a58	user/wc.asm	/^ a58:	00000693          	li	a3,0$/;"	l
a58	user/zombie.asm	/^ a58:	5ac7b783          	ld	a5,1452(a5) # 1000 <freep>$/;"	l
a5c	user/cat.asm	/^ a5c:	00094583          	lbu	a1,0(s2)$/;"	l
a5c	user/echo.asm	/^ a5c:	01013403          	ld	s0,16(sp)$/;"	l
a5c	user/grep.asm	/^ a5c:	07800713          	li	a4,120$/;"	l
a5c	user/grind.asm	/^     a5c:	fcf42e23          	sw	a5,-36(s0)$/;"	l
a5c	user/init.asm	/^ a5c:	01813d83          	ld	s11,24(sp)$/;"	l
a5c	user/kill.asm	/^ a5c:	03043823          	sd	a6,48(s0)$/;"	l
a5c	user/ln.asm	/^ a5c:	03143c23          	sd	a7,56(s0)$/;"	l
a5c	user/ls.asm	/^ a5c:	00000993          	li	s3,0$/;"	l
a5c	user/matmul.asm	/^ a5c:	000b0513          	mv	a0,s6$/;"	l
a5c	user/mkdir.asm	/^ a5c:	00813823          	sd	s0,16(sp)$/;"	l
a5c	user/rm.asm	/^ a5c:	00813823          	sd	s0,16(sp)$/;"	l
a5c	user/sh.asm	/^     a5c:	00098593          	mv	a1,s3$/;"	l
a5c	user/stressfs.asm	/^ a5c:	05813983          	ld	s3,88(sp)$/;"	l
a5c	user/usertests.asm	/^     a5c:	04813483          	ld	s1,72(sp)$/;"	l
a5c	user/wc.asm	/^ a5c:	01000613          	li	a2,16$/;"	l
a5c	user/zombie.asm	/^ a5c:	0480006f          	j	aa4 <free+0x60>$/;"	l
a6	kernel/proc.h	/^  \/* 160 *\/ uint64 a6;$/;"	m	struct:trapframe
a60	user/cat.asm	/^ a60:	fe0598e3          	bnez	a1,a50 <vprintf+0x318>$/;"	l
a60	user/echo.asm	/^ a60:	05010113          	addi	sp,sp,80$/;"	l
a60	user/grep.asm	/^ a60:	18e78263          	beq	a5,a4,be4 <vprintf+0x264>$/;"	l
a60	user/grind.asm	/^     a60:	fdc40513          	addi	a0,s0,-36$/;"	l
a60	user/init.asm	/^ a60:	08010113          	addi	sp,sp,128$/;"	l
a60	user/kill.asm	/^ a60:	03143c23          	sd	a7,56(s0)$/;"	l
a60	user/ln.asm	/^ a60:	00840613          	addi	a2,s0,8$/;"	l
a60	user/ls.asm	/^ a60:	f29ff06f          	j	988 <vprintf+0x8c>$/;"	l
a60	user/matmul.asm	/^ a60:	c21ff0ef          	jal	ra,680 <putc>$/;"	l
a60	user/mkdir.asm	/^ a60:	02010413          	addi	s0,sp,32$/;"	l
a60	user/rm.asm	/^ a60:	02010413          	addi	s0,sp,32$/;"	l
a60	user/sh.asm	/^     a60:	00090513          	mv	a0,s2$/;"	l
a60	user/stressfs.asm	/^ a60:	05013a03          	ld	s4,80(sp)$/;"	l
a60	user/usertests.asm	/^     a60:	04013903          	ld	s2,64(sp)$/;"	l
a60	user/wc.asm	/^ a60:	000ba583          	lw	a1,0(s7)$/;"	l
a60	user/zombie.asm	/^ a60:	00862703          	lw	a4,8(a2)$/;"	l
a64	user/cat.asm	/^ a64:	00098b93          	mv	s7,s3$/;"	l
a64	user/echo.asm	/^ a64:	00008067          	ret$/;"	l
a64	user/grep.asm	/^ a64:	07000713          	li	a4,112$/;"	l
a64	user/grind.asm	/^     a64:	47c000ef          	jal	ra,ee0 <wait>$/;"	l
a64	user/init.asm	/^ a64:	00008067          	ret$/;"	l
a64	user/kill.asm	/^ a64:	00840613          	addi	a2,s0,8$/;"	l
a64	user/ln.asm	/^ a64:	fec43423          	sd	a2,-24(s0)$/;"	l
a64	user/ls.asm	/^ a64:	008b8913          	addi	s2,s7,8$/;"	l
a64	user/matmul.asm	/^ a64:	07800593          	li	a1,120$/;"	l
a64	user/mkdir.asm	/^ a64:	00b43423          	sd	a1,8(s0)$/;"	l
a64	user/rm.asm	/^ a64:	00b43423          	sd	a1,8(s0)$/;"	l
a64	user/sh.asm	/^     a64:	badff0ef          	jal	ra,610 <peek>$/;"	l
a64	user/stressfs.asm	/^ a64:	04813a83          	ld	s5,72(sp)$/;"	l
a64	user/usertests.asm	/^     a64:	03813983          	ld	s3,56(sp)$/;"	l
a64	user/wc.asm	/^ a64:	000b0513          	mv	a0,s6$/;"	l
a64	user/zombie.asm	/^ a64:	00b705bb          	addw	a1,a4,a1$/;"	l
a68	user/cat.asm	/^ a68:	00000993          	li	s3,0$/;"	l
a68	user/echo.asm	/^ a68:	fa010113          	addi	sp,sp,-96$/;"	l
a68	user/grep.asm	/^ a68:	1ce78463          	beq	a5,a4,c30 <vprintf+0x2b0>$/;"	l
a68	user/grind.asm	/^     a68:	fdc42783          	lw	a5,-36(s0)$/;"	l
a68	user/init.asm	/^ a68:	fb010113          	addi	sp,sp,-80$/;"	l
a68	user/kill.asm	/^ a68:	fec43423          	sd	a2,-24(s0)$/;"	l
a68	user/ln.asm	/^ a68:	00050593          	mv	a1,a0$/;"	l
a68	user/ls.asm	/^ a68:	00100693          	li	a3,1$/;"	l
a68	user/matmul.asm	/^ a68:	000b0513          	mv	a0,s6$/;"	l
a68	user/mkdir.asm	/^ a68:	00c43823          	sd	a2,16(s0)$/;"	l
a68	user/rm.asm	/^ a68:	00c43823          	sd	a2,16(s0)$/;"	l
a68	user/sh.asm	/^     a68:	02051463          	bnez	a0,a90 <parseline+0xac>$/;"	l
a68	user/stressfs.asm	/^ a68:	04013b03          	ld	s6,64(sp)$/;"	l
a68	user/usertests.asm	/^     a68:	03013a03          	ld	s4,48(sp)$/;"	l
a68	user/wc.asm	/^ a68:	c9dff0ef          	jal	ra,704 <printint>$/;"	l
a68	user/zombie.asm	/^ a68:	feb52c23          	sw	a1,-8(a0)$/;"	l
a6c	user/cat.asm	/^ a6c:	d59ff06f          	j	7c4 <vprintf+0x8c>$/;"	l
a6c	user/echo.asm	/^ a6c:	00113c23          	sd	ra,24(sp)$/;"	l
a6c	user/grep.asm	/^ a6c:	07300713          	li	a4,115$/;"	l
a6c	user/grind.asm	/^     a6c:	00079e63          	bnez	a5,a88 <iter+0xe8>$/;"	l
a6c	user/init.asm	/^ a6c:	00113c23          	sd	ra,24(sp)$/;"	l
a6c	user/kill.asm	/^ a6c:	00050593          	mv	a1,a0$/;"	l
a6c	user/ln.asm	/^ a6c:	00100513          	li	a0,1$/;"	l
a6c	user/ls.asm	/^ a6c:	00a00613          	li	a2,10$/;"	l
a6c	user/matmul.asm	/^ a6c:	c15ff0ef          	jal	ra,680 <putc>$/;"	l
a6c	user/mkdir.asm	/^ a6c:	00d43c23          	sd	a3,24(s0)$/;"	l
a6c	user/rm.asm	/^ a6c:	00d43c23          	sd	a3,24(s0)$/;"	l
a6c	user/sh.asm	/^     a6c:	00048513          	mv	a0,s1$/;"	l
a6c	user/stressfs.asm	/^ a6c:	03813b83          	ld	s7,56(sp)$/;"	l
a6c	user/usertests.asm	/^     a6c:	02813a83          	ld	s5,40(sp)$/;"	l
a6c	user/wc.asm	/^ a6c:	00090b93          	mv	s7,s2$/;"	l
a6c	user/zombie.asm	/^ a6c:	0007b703          	ld	a4,0(a5)$/;"	l
a7	kernel/proc.h	/^  \/* 168 *\/ uint64 a7;$/;"	m	struct:trapframe
a70	user/cat.asm	/^ a70:	00000917          	auipc	s2,0x0$/;"	l
a70	user/echo.asm	/^ a70:	00813823          	sd	s0,16(sp)$/;"	l
a70	user/grep.asm	/^ a70:	20e78a63          	beq	a5,a4,c84 <vprintf+0x304>$/;"	l
a70	user/grind.asm	/^     a70:	fff00793          	li	a5,-1$/;"	l
a70	user/init.asm	/^ a70:	00813823          	sd	s0,16(sp)$/;"	l
a70	user/kill.asm	/^ a70:	00100513          	li	a0,1$/;"	l
a70	user/ln.asm	/^ a70:	bf1ff0ef          	jal	ra,660 <vprintf>$/;"	l
a70	user/ls.asm	/^ a70:	000ba583          	lw	a1,0(s7)$/;"	l
a70	user/matmul.asm	/^ a70:	01000913          	li	s2,16$/;"	l
a70	user/mkdir.asm	/^ a70:	02e43023          	sd	a4,32(s0)$/;"	l
a70	user/rm.asm	/^ a70:	02e43023          	sd	a4,32(s0)$/;"	l
a70	user/sh.asm	/^     a70:	02813083          	ld	ra,40(sp)$/;"	l
a70	user/stressfs.asm	/^ a70:	03013c03          	ld	s8,48(sp)$/;"	l
a70	user/usertests.asm	/^     a70:	06010113          	addi	sp,sp,96$/;"	l
a70	user/wc.asm	/^ a70:	00000993          	li	s3,0$/;"	l
a70	user/zombie.asm	/^ a70:	00073703          	ld	a4,0(a4)$/;"	l
a74	user/cat.asm	/^ a74:	33890913          	addi	s2,s2,824 # da8 <malloc+0x18c>$/;"	l
a74	user/echo.asm	/^ a74:	02010413          	addi	s0,sp,32$/;"	l
a74	user/grep.asm	/^ a74:	05579a63          	bne	a5,s5,ac8 <vprintf+0x148>$/;"	l
a74	user/grind.asm	/^     a74:	fcf42c23          	sw	a5,-40(s0)$/;"	l
a74	user/init.asm	/^ a74:	02010413          	addi	s0,sp,32$/;"	l
a74	user/kill.asm	/^ a74:	bf1ff0ef          	jal	ra,664 <vprintf>$/;"	l
a74	user/ln.asm	/^ a74:	01813083          	ld	ra,24(sp)$/;"	l
a74	user/ls.asm	/^ a74:	000b0513          	mv	a0,s6$/;"	l
a74	user/matmul.asm	/^ a74:	03c9d793          	srli	a5,s3,0x3c$/;"	l
a74	user/mkdir.asm	/^ a74:	02f43423          	sd	a5,40(s0)$/;"	l
a74	user/rm.asm	/^ a74:	02f43423          	sd	a5,40(s0)$/;"	l
a74	user/sh.asm	/^     a74:	02013403          	ld	s0,32(sp)$/;"	l
a74	user/stressfs.asm	/^ a74:	02813c83          	ld	s9,40(sp)$/;"	l
a74	user/usertests.asm	/^     a74:	00008067          	ret$/;"	l
a74	user/wc.asm	/^ a74:	e09ff06f          	j	87c <vprintf+0x8c>$/;"	l
a74	user/zombie.asm	/^ a74:	fee53823          	sd	a4,-16(a0)$/;"	l
a78	user/cat.asm	/^ a78:	02800593          	li	a1,40$/;"	l
a78	user/echo.asm	/^ a78:	00b43423          	sd	a1,8(s0)$/;"	l
a78	user/grep.asm	/^ a78:	000a8593          	mv	a1,s5$/;"	l
a78	user/grind.asm	/^     a78:	fd840513          	addi	a0,s0,-40$/;"	l
a78	user/init.asm	/^ a78:	00c43023          	sd	a2,0(s0)$/;"	l
a78	user/kill.asm	/^ a78:	01813083          	ld	ra,24(sp)$/;"	l
a78	user/ln.asm	/^ a78:	01013403          	ld	s0,16(sp)$/;"	l
a78	user/ls.asm	/^ a78:	d99ff0ef          	jal	ra,810 <printint>$/;"	l
a78	user/matmul.asm	/^ a78:	00fc87b3          	add	a5,s9,a5$/;"	l
a78	user/mkdir.asm	/^ a78:	03043823          	sd	a6,48(s0)$/;"	l
a78	user/rm.asm	/^ a78:	03043823          	sd	a6,48(s0)$/;"	l
a78	user/sh.asm	/^     a78:	01813483          	ld	s1,24(sp)$/;"	l
a78	user/stressfs.asm	/^ a78:	02013d03          	ld	s10,32(sp)$/;"	l
a78	user/usertests.asm	/^     a78:	00050613          	mv	a2,a0$/;"	l
a78	user/wc.asm	/^ a78:	008b8913          	addi	s2,s7,8$/;"	l
a78	user/zombie.asm	/^ a78:	05c0006f          	j	ad4 <free+0x90>$/;"	l
a7c	user/cat.asm	/^ a7c:	fd5ff06f          	j	a50 <vprintf+0x318>$/;"	l
a7c	user/echo.asm	/^ a7c:	00c43823          	sd	a2,16(s0)$/;"	l
a7c	user/grep.asm	/^ a7c:	000b0513          	mv	a0,s6$/;"	l
a7c	user/grind.asm	/^     a7c:	464000ef          	jal	ra,ee0 <wait>$/;"	l
a7c	user/init.asm	/^ a7c:	00d43423          	sd	a3,8(s0)$/;"	l
a7c	user/kill.asm	/^ a7c:	01013403          	ld	s0,16(sp)$/;"	l
a7c	user/ln.asm	/^ a7c:	06010113          	addi	sp,sp,96$/;"	l
a7c	user/ls.asm	/^ a7c:	0014849b          	addiw	s1,s1,1$/;"	l
a7c	user/matmul.asm	/^ a7c:	0007c583          	lbu	a1,0(a5)$/;"	l
a7c	user/mkdir.asm	/^ a7c:	03143c23          	sd	a7,56(s0)$/;"	l
a7c	user/rm.asm	/^ a7c:	03143c23          	sd	a7,56(s0)$/;"	l
a7c	user/sh.asm	/^     a7c:	01013903          	ld	s2,16(sp)$/;"	l
a7c	user/stressfs.asm	/^ a7c:	01813d83          	ld	s11,24(sp)$/;"	l
a7c	user/usertests.asm	/^     a7c:	000a8593          	mv	a1,s5$/;"	l
a7c	user/wc.asm	/^ a7c:	00000693          	li	a3,0$/;"	l
a7c	user/zombie.asm	/^ a7c:	ff852703          	lw	a4,-8(a0)$/;"	l
a8	user/cat.asm	/^  a8:	02113423          	sd	ra,40(sp)$/;"	l
a8	user/echo.asm	/^  a8:	00813023          	sd	s0,0(sp)$/;"	l
a8	user/forktest.asm	/^  a8:	47c000ef          	jal	ra,524 <wait>$/;"	l
a8	user/grep.asm	/^  a8:	02400613          	li	a2,36$/;"	l
a8	user/grind.asm	/^      a8:	06113c23          	sd	ra,120(sp)$/;"	l
a8	user/init.asm	/^  a8:	00001517          	auipc	a0,0x1$/;"	l
a8	user/kill.asm	/^  a8:	fee78fa3          	sb	a4,-1(a5)$/;"	l
a8	user/ln.asm	/^  a8:	fe0718e3          	bnez	a4,98 <strcpy+0x10>$/;"	l
a8	user/ls.asm	/^  a8:	0005091b          	sext.w	s2,a0$/;"	l
a8	user/matmul.asm	/^  a8:	00078613          	mv	a2,a5$/;"	l
a8	user/mkdir.asm	/^  a8:	ff010113          	addi	sp,sp,-16$/;"	l
a8	user/rm.asm	/^  a8:	ff010113          	addi	sp,sp,-16$/;"	l
a8	user/sh.asm	/^      a8:	00813023          	sd	s0,0(sp)$/;"	l
a8	user/stressfs.asm	/^  a8:	fe0496e3          	bnez	s1,94 <main+0x94>$/;"	l
a8	user/usertests.asm	/^      a8:	0000a797          	auipc	a5,0xa$/;"	l
a8	user/wc.asm	/^  a8:	01ac8cbb          	addw	s9,s9,s10$/;"	l
a8	user/zombie.asm	/^  a8:	40a7853b          	subw	a0,a5,a0$/;"	l
a80	user/cat.asm	/^ a80:	00098b93          	mv	s7,s3$/;"	l
a80	user/echo.asm	/^ a80:	00d43c23          	sd	a3,24(s0)$/;"	l
a80	user/grep.asm	/^ a80:	de5ff0ef          	jal	ra,864 <putc>$/;"	l
a80	user/grind.asm	/^     a80:	00000513          	li	a0,0$/;"	l
a80	user/init.asm	/^ a80:	00e43823          	sd	a4,16(s0)$/;"	l
a80	user/kill.asm	/^ a80:	06010113          	addi	sp,sp,96$/;"	l
a80	user/ln.asm	/^ a80:	00008067          	ret$/;"	l
a80	user/ls.asm	/^ a80:	00090b93          	mv	s7,s2$/;"	l
a80	user/matmul.asm	/^ a80:	000b0513          	mv	a0,s6$/;"	l
a80	user/mkdir.asm	/^ a80:	00840613          	addi	a2,s0,8$/;"	l
a80	user/rm.asm	/^ a80:	00840613          	addi	a2,s0,8$/;"	l
a80	user/sh.asm	/^     a80:	00813983          	ld	s3,8(sp)$/;"	l
a80	user/stressfs.asm	/^ a80:	08010113          	addi	sp,sp,128$/;"	l
a80	user/usertests.asm	/^     a80:	00006517          	auipc	a0,0x6$/;"	l
a80	user/wc.asm	/^ a80:	01000613          	li	a2,16$/;"	l
a80	user/zombie.asm	/^ a80:	00c7063b          	addw	a2,a4,a2$/;"	l
a84	user/cat.asm	/^ a84:	00000993          	li	s3,0$/;"	l
a84	user/echo.asm	/^ a84:	02e43023          	sd	a4,32(s0)$/;"	l
a84	user/grep.asm	/^ a84:	00000993          	li	s3,0$/;"	l
a84	user/grind.asm	/^     a84:	450000ef          	jal	ra,ed4 <exit>$/;"	l
a84	user/init.asm	/^ a84:	00f43c23          	sd	a5,24(s0)$/;"	l
a84	user/kill.asm	/^ a84:	00008067          	ret$/;"	l
a84	user/ln.asm	/^ a84:	ff010113          	addi	sp,sp,-16$/;"	l
a84	user/ls.asm	/^ a84:	00000993          	li	s3,0$/;"	l
a84	user/matmul.asm	/^ a84:	bfdff0ef          	jal	ra,680 <putc>$/;"	l
a84	user/mkdir.asm	/^ a84:	fec43423          	sd	a2,-24(s0)$/;"	l
a84	user/rm.asm	/^ a84:	fec43423          	sd	a2,-24(s0)$/;"	l
a84	user/sh.asm	/^     a84:	00013a03          	ld	s4,0(sp)$/;"	l
a84	user/stressfs.asm	/^ a84:	00008067          	ret$/;"	l
a84	user/usertests.asm	/^     a84:	ff850513          	addi	a0,a0,-8 # 6a78 <malloc+0x410>$/;"	l
a84	user/wc.asm	/^ a84:	000ba583          	lw	a1,0(s7)$/;"	l
a84	user/zombie.asm	/^ a84:	00c7a423          	sw	a2,8(a5)$/;"	l
a88	user/cat.asm	/^ a88:	d3dff06f          	j	7c4 <vprintf+0x8c>$/;"	l
a88	user/echo.asm	/^ a88:	02f43423          	sd	a5,40(s0)$/;"	l
a88	user/grep.asm	/^ a88:	f85ff06f          	j	a0c <vprintf+0x8c>$/;"	l
a88	user/grind.asm	/^     a88:	00048513          	mv	a0,s1$/;"	l
a88	user/init.asm	/^ a88:	03043023          	sd	a6,32(s0)$/;"	l
a88	user/kill.asm	/^ a88:	ff010113          	addi	sp,sp,-16$/;"	l
a88	user/ln.asm	/^ a88:	00813423          	sd	s0,8(sp)$/;"	l
a88	user/ls.asm	/^ a88:	f01ff06f          	j	988 <vprintf+0x8c>$/;"	l
a88	user/matmul.asm	/^ a88:	00499993          	slli	s3,s3,0x4$/;"	l
a88	user/mkdir.asm	/^ a88:	00050593          	mv	a1,a0$/;"	l
a88	user/rm.asm	/^ a88:	00050593          	mv	a1,a0$/;"	l
a88	user/sh.asm	/^     a88:	03010113          	addi	sp,sp,48$/;"	l
a88	user/stressfs.asm	/^ a88:	fb010113          	addi	sp,sp,-80$/;"	l
a88	user/usertests.asm	/^     a88:	2d1050ef          	jal	ra,6558 <printf>$/;"	l
a88	user/wc.asm	/^ a88:	000b0513          	mv	a0,s6$/;"	l
a88	user/zombie.asm	/^ a88:	ff053703          	ld	a4,-16(a0)$/;"	l
a8c	user/cat.asm	/^ a8c:	07813083          	ld	ra,120(sp)$/;"	l
a8c	user/echo.asm	/^ a8c:	03043823          	sd	a6,48(s0)$/;"	l
a8c	user/grep.asm	/^ a8c:	008b8913          	addi	s2,s7,8$/;"	l
a8c	user/grind.asm	/^     a8c:	490000ef          	jal	ra,f1c <kill>$/;"	l
a8c	user/init.asm	/^ a8c:	03143423          	sd	a7,40(s0)$/;"	l
a8c	user/kill.asm	/^ a8c:	00813423          	sd	s0,8(sp)$/;"	l
a8c	user/ln.asm	/^ a8c:	01010413          	addi	s0,sp,16$/;"	l
a8c	user/ls.asm	/^ a8c:	03860c63          	beq	a2,s8,ac4 <vprintf+0x1c8>$/;"	l
a8c	user/matmul.asm	/^ a8c:	fff9091b          	addiw	s2,s2,-1$/;"	l
a8c	user/mkdir.asm	/^ a8c:	00100513          	li	a0,1$/;"	l
a8c	user/rm.asm	/^ a8c:	00100513          	li	a0,1$/;"	l
a8c	user/sh.asm	/^     a8c:	00008067          	ret$/;"	l
a8c	user/stressfs.asm	/^ a8c:	00113c23          	sd	ra,24(sp)$/;"	l
a8c	user/usertests.asm	/^     a8c:	00100513          	li	a0,1$/;"	l
a8c	user/wc.asm	/^ a8c:	c79ff0ef          	jal	ra,704 <printint>$/;"	l
a8c	user/zombie.asm	/^ a8c:	00e7b023          	sd	a4,0(a5)$/;"	l
a90	user/cat.asm	/^ a90:	07013403          	ld	s0,112(sp)$/;"	l
a90	user/echo.asm	/^ a90:	03143c23          	sd	a7,56(s0)$/;"	l
a90	user/grep.asm	/^ a90:	00100693          	li	a3,1$/;"	l
a90	user/grind.asm	/^     a90:	00090513          	mv	a0,s2$/;"	l
a90	user/init.asm	/^ a90:	fe843423          	sd	s0,-24(s0)$/;"	l
a90	user/kill.asm	/^ a90:	01010413          	addi	s0,sp,16$/;"	l
a90	user/ln.asm	/^ a90:	ff050693          	addi	a3,a0,-16$/;"	l
a90	user/ls.asm	/^ a90:	0bb60463          	beq	a2,s11,b38 <vprintf+0x23c>$/;"	l
a90	user/matmul.asm	/^ a90:	fe0912e3          	bnez	s2,a74 <vprintf+0x2d8>$/;"	l
a90	user/mkdir.asm	/^ a90:	bf1ff0ef          	jal	ra,680 <vprintf>$/;"	l
a90	user/rm.asm	/^ a90:	bf1ff0ef          	jal	ra,680 <vprintf>$/;"	l
a90	user/sh.asm	/^     a90:	00000693          	li	a3,0$/;"	l
a90	user/stressfs.asm	/^ a90:	00813823          	sd	s0,16(sp)$/;"	l
a90	user/usertests.asm	/^     a90:	4e8050ef          	jal	ra,5f78 <exit>$/;"	l
a90	user/wc.asm	/^ a90:	0014849b          	addiw	s1,s1,1$/;"	l
a90	user/zombie.asm	/^ a90:	0600006f          	j	af0 <free+0xac>$/;"	l
a94	user/cat.asm	/^ a94:	06813483          	ld	s1,104(sp)$/;"	l
a94	user/echo.asm	/^ a94:	00840613          	addi	a2,s0,8$/;"	l
a94	user/grep.asm	/^ a94:	00a00613          	li	a2,10$/;"	l
a94	user/grind.asm	/^     a94:	488000ef          	jal	ra,f1c <kill>$/;"	l
a94	user/init.asm	/^ a94:	00040613          	mv	a2,s0$/;"	l
a94	user/kill.asm	/^ a94:	ff050693          	addi	a3,a0,-16$/;"	l
a94	user/ln.asm	/^ a94:	00000797          	auipc	a5,0x0$/;"	l
a94	user/ls.asm	/^ a94:	07800793          	li	a5,120$/;"	l
a94	user/matmul.asm	/^ a94:	f8843b83          	ld	s7,-120(s0)$/;"	l
a94	user/mkdir.asm	/^ a94:	01813083          	ld	ra,24(sp)$/;"	l
a94	user/rm.asm	/^ a94:	01813083          	ld	ra,24(sp)$/;"	l
a94	user/sh.asm	/^     a94:	00000613          	li	a2,0$/;"	l
a94	user/stressfs.asm	/^ a94:	02010413          	addi	s0,sp,32$/;"	l
a94	user/usertests.asm	/^     a94:	00090593          	mv	a1,s2$/;"	l
a94	user/wc.asm	/^ a94:	00090b93          	mv	s7,s2$/;"	l
a94	user/zombie.asm	/^ a94:	0007b703          	ld	a4,0(a5)$/;"	l
a98	user/cat.asm	/^ a98:	06013903          	ld	s2,96(sp)$/;"	l
a98	user/echo.asm	/^ a98:	fec43423          	sd	a2,-24(s0)$/;"	l
a98	user/grep.asm	/^ a98:	000ba583          	lw	a1,0(s7)$/;"	l
a98	user/grind.asm	/^     a98:	fd9ff06f          	j	a70 <iter+0xd0>$/;"	l
a98	user/init.asm	/^ a98:	c41ff0ef          	jal	ra,6d8 <vprintf>$/;"	l
a98	user/kill.asm	/^ a98:	00000797          	auipc	a5,0x0$/;"	l
a98	user/ln.asm	/^ a98:	56c7b783          	ld	a5,1388(a5) # 1000 <freep>$/;"	l
a98	user/ls.asm	/^ a98:	faf616e3          	bne	a2,a5,a44 <vprintf+0x148>$/;"	l
a98	user/matmul.asm	/^ a98:	00000993          	li	s3,0$/;"	l
a98	user/mkdir.asm	/^ a98:	01013403          	ld	s0,16(sp)$/;"	l
a98	user/rm.asm	/^ a98:	01013403          	ld	s0,16(sp)$/;"	l
a98	user/sh.asm	/^     a98:	00098593          	mv	a1,s3$/;"	l
a98	user/stressfs.asm	/^ a98:	00c43023          	sd	a2,0(s0)$/;"	l
a98	user/usertests.asm	/^     a98:	00006517          	auipc	a0,0x6$/;"	l
a98	user/wc.asm	/^ a98:	00000993          	li	s3,0$/;"	l
a98	user/zombie.asm	/^ a98:	00e7e463          	bltu	a5,a4,aa0 <free+0x5c>$/;"	l
a9c	user/cat.asm	/^ a9c:	05813983          	ld	s3,88(sp)$/;"	l
a9c	user/echo.asm	/^ a9c:	00050593          	mv	a1,a0$/;"	l
a9c	user/grep.asm	/^ a9c:	000b0513          	mv	a0,s6$/;"	l
a9c	user/grind.asm	/^     a9c:	fe010113          	addi	sp,sp,-32$/;"	l
a9c	user/init.asm	/^ a9c:	01813083          	ld	ra,24(sp)$/;"	l
a9c	user/kill.asm	/^ a9c:	5687b783          	ld	a5,1384(a5) # 1000 <freep>$/;"	l
a9c	user/ln.asm	/^ a9c:	0480006f          	j	ae4 <free+0x60>$/;"	l
a9c	user/ls.asm	/^ a9c:	008b8913          	addi	s2,s7,8$/;"	l
a9c	user/matmul.asm	/^ a9c:	d8dff06f          	j	828 <vprintf+0x8c>$/;"	l
a9c	user/mkdir.asm	/^ a9c:	06010113          	addi	sp,sp,96$/;"	l
a9c	user/rm.asm	/^ a9c:	06010113          	addi	sp,sp,96$/;"	l
a9c	user/sh.asm	/^     a9c:	00090513          	mv	a0,s2$/;"	l
a9c	user/stressfs.asm	/^ a9c:	00d43423          	sd	a3,8(s0)$/;"	l
a9c	user/usertests.asm	/^     a9c:	00050513          	mv	a0,a0$/;"	l
a9c	user/wc.asm	/^ a9c:	de1ff06f          	j	87c <vprintf+0x8c>$/;"	l
a9c	user/zombie.asm	/^ a9c:	00e6ec63          	bltu	a3,a4,ab4 <free+0x70>$/;"	l
aa0	user/cat.asm	/^ aa0:	05013a03          	ld	s4,80(sp)$/;"	l
aa0	user/echo.asm	/^ aa0:	00100513          	li	a0,1$/;"	l
aa0	user/grep.asm	/^ aa0:	df5ff0ef          	jal	ra,894 <printint>$/;"	l
aa0	user/grind.asm	/^     aa0:	00113c23          	sd	ra,24(sp)$/;"	l
aa0	user/init.asm	/^ aa0:	01013403          	ld	s0,16(sp)$/;"	l
aa0	user/kill.asm	/^ aa0:	0480006f          	j	ae8 <free+0x60>$/;"	l
aa0	user/ln.asm	/^ aa0:	00862703          	lw	a4,8(a2)$/;"	l
aa0	user/ls.asm	/^ aa0:	00000693          	li	a3,0$/;"	l
aa0	user/matmul.asm	/^ aa0:	008b8993          	addi	s3,s7,8$/;"	l
aa0	user/mkdir.asm	/^ aa0:	00008067          	ret$/;"	l
aa0	user/rm.asm	/^ aa0:	00008067          	ret$/;"	l
aa0	user/sh.asm	/^     aa0:	9e9ff0ef          	jal	ra,488 <gettoken>$/;"	l
aa0	user/stressfs.asm	/^ aa0:	00e43823          	sd	a4,16(s0)$/;"	l
aa0	user/usertests.asm	/^     aa0:	2b9050ef          	jal	ra,6558 <printf>$/;"	l
aa0	user/wc.asm	/^ aa0:	008b8793          	addi	a5,s7,8$/;"	l
aa0	user/zombie.asm	/^ aa0:	00070793          	mv	a5,a4$/;"	l
aa4	user/cat.asm	/^ aa4:	04813a83          	ld	s5,72(sp)$/;"	l
aa4	user/echo.asm	/^ aa4:	bf1ff0ef          	jal	ra,694 <vprintf>$/;"	l
aa4	user/grep.asm	/^ aa4:	00090b93          	mv	s7,s2$/;"	l
aa4	user/grind.asm	/^     aa4:	00813823          	sd	s0,16(sp)$/;"	l
aa4	user/init.asm	/^ aa4:	05010113          	addi	sp,sp,80$/;"	l
aa4	user/kill.asm	/^ aa4:	00862703          	lw	a4,8(a2)$/;"	l
aa4	user/ln.asm	/^ aa4:	00b705bb          	addw	a1,a4,a1$/;"	l
aa4	user/ls.asm	/^ aa4:	01000613          	li	a2,16$/;"	l
aa4	user/matmul.asm	/^ aa4:	000bb903          	ld	s2,0(s7)$/;"	l
aa4	user/mkdir.asm	/^ aa4:	ff010113          	addi	sp,sp,-16$/;"	l
aa4	user/rm.asm	/^ aa4:	ff010113          	addi	sp,sp,-16$/;"	l
aa4	user/sh.asm	/^     aa4:	00098593          	mv	a1,s3$/;"	l
aa4	user/stressfs.asm	/^ aa4:	00f43c23          	sd	a5,24(s0)$/;"	l
aa4	user/usertests.asm	/^     aa4:	000a0613          	mv	a2,s4$/;"	l
aa4	user/wc.asm	/^ aa4:	f8f43423          	sd	a5,-120(s0)$/;"	l
aa4	user/zombie.asm	/^ aa4:	fed7f8e3          	bgeu	a5,a3,a94 <free+0x50>$/;"	l
aa8	user/cat.asm	/^ aa8:	04013b03          	ld	s6,64(sp)$/;"	l
aa8	user/echo.asm	/^ aa8:	01813083          	ld	ra,24(sp)$/;"	l
aa8	user/grep.asm	/^ aa8:	00000993          	li	s3,0$/;"	l
aa8	user/grind.asm	/^     aa8:	00913423          	sd	s1,8(sp)$/;"	l
aa8	user/init.asm	/^ aa8:	00008067          	ret$/;"	l
aa8	user/kill.asm	/^ aa8:	00b705bb          	addw	a1,a4,a1$/;"	l
aa8	user/ln.asm	/^ aa8:	feb52c23          	sw	a1,-8(a0)$/;"	l
aa8	user/ls.asm	/^ aa8:	000ba583          	lw	a1,0(s7)$/;"	l
aa8	user/matmul.asm	/^ aa8:	02090663          	beqz	s2,ad4 <vprintf+0x338>$/;"	l
aa8	user/mkdir.asm	/^ aa8:	00813423          	sd	s0,8(sp)$/;"	l
aa8	user/rm.asm	/^ aa8:	00813423          	sd	s0,8(sp)$/;"	l
aa8	user/sh.asm	/^     aa8:	00090513          	mv	a0,s2$/;"	l
aa8	user/stressfs.asm	/^ aa8:	03043023          	sd	a6,32(s0)$/;"	l
aa8	user/usertests.asm	/^     aa8:	000a8593          	mv	a1,s5$/;"	l
aa8	user/wc.asm	/^ aa8:	000bb983          	ld	s3,0(s7)$/;"	l
aa8	user/zombie.asm	/^ aa8:	0007b703          	ld	a4,0(a5)$/;"	l
aac	user/cat.asm	/^ aac:	03813b83          	ld	s7,56(sp)$/;"	l
aac	user/echo.asm	/^ aac:	01013403          	ld	s0,16(sp)$/;"	l
aac	user/grep.asm	/^ aac:	f61ff06f          	j	a0c <vprintf+0x8c>$/;"	l
aac	user/grind.asm	/^     aac:	02010413          	addi	s0,sp,32$/;"	l
aac	user/init.asm	/^ aac:	fa010113          	addi	sp,sp,-96$/;"	l
aac	user/kill.asm	/^ aac:	feb52c23          	sw	a1,-8(a0)$/;"	l
aac	user/ln.asm	/^ aac:	0007b703          	ld	a4,0(a5)$/;"	l
aac	user/ls.asm	/^ aac:	000b0513          	mv	a0,s6$/;"	l
aac	user/matmul.asm	/^ aac:	00094583          	lbu	a1,0(s2)$/;"	l
aac	user/mkdir.asm	/^ aac:	01010413          	addi	s0,sp,16$/;"	l
aac	user/rm.asm	/^ aac:	01010413          	addi	s0,sp,16$/;"	l
aac	user/sh.asm	/^     aac:	f39ff0ef          	jal	ra,9e4 <parseline>$/;"	l
aac	user/stressfs.asm	/^ aac:	03143423          	sd	a7,40(s0)$/;"	l
aac	user/usertests.asm	/^     aac:	00006517          	auipc	a0,0x6$/;"	l
aac	user/wc.asm	/^ aac:	03000593          	li	a1,48$/;"	l
aac	user/zombie.asm	/^ aac:	00e6e463          	bltu	a3,a4,ab4 <free+0x70>$/;"	l
ab0	user/cat.asm	/^ ab0:	03013c03          	ld	s8,48(sp)$/;"	l
ab0	user/echo.asm	/^ ab0:	06010113          	addi	sp,sp,96$/;"	l
ab0	user/grep.asm	/^ ab0:	03868c63          	beq	a3,s8,ae8 <vprintf+0x168>$/;"	l
ab0	user/grind.asm	/^     ab0:	00001497          	auipc	s1,0x1$/;"	l
ab0	user/init.asm	/^ ab0:	00113c23          	sd	ra,24(sp)$/;"	l
ab0	user/kill.asm	/^ ab0:	0007b703          	ld	a4,0(a5)$/;"	l
ab0	user/ln.asm	/^ ab0:	00073703          	ld	a4,0(a4)$/;"	l
ab0	user/ls.asm	/^ ab0:	d61ff0ef          	jal	ra,810 <printint>$/;"	l
ab0	user/matmul.asm	/^ ab0:	02058a63          	beqz	a1,ae4 <vprintf+0x348>$/;"	l
ab0	user/mkdir.asm	/^ ab0:	ff050693          	addi	a3,a0,-16$/;"	l
ab0	user/rm.asm	/^ ab0:	ff050693          	addi	a3,a0,-16$/;"	l
ab0	user/sh.asm	/^     ab0:	00050593          	mv	a1,a0$/;"	l
ab0	user/stressfs.asm	/^ ab0:	fe843423          	sd	s0,-24(s0)$/;"	l
ab0	user/usertests.asm	/^     ab0:	ffc50513          	addi	a0,a0,-4 # 6aa8 <malloc+0x440>$/;"	l
ab0	user/wc.asm	/^ ab0:	000b0513          	mv	a0,s6$/;"	l
ab0	user/zombie.asm	/^ ab0:	fee7e8e3          	bltu	a5,a4,aa0 <free+0x5c>$/;"	l
ab4	user/cat.asm	/^ ab4:	02813c83          	ld	s9,40(sp)$/;"	l
ab4	user/echo.asm	/^ ab4:	00008067          	ret$/;"	l
ab4	user/grep.asm	/^ ab4:	05a68e63          	beq	a3,s10,b10 <vprintf+0x190>$/;"	l
ab4	user/grind.asm	/^     ab4:	55048493          	addi	s1,s1,1360 # 2000 <rand_next>$/;"	l
ab4	user/init.asm	/^ ab4:	00813823          	sd	s0,16(sp)$/;"	l
ab4	user/kill.asm	/^ ab4:	00073703          	ld	a4,0(a4)$/;"	l
ab4	user/ln.asm	/^ ab4:	fee53823          	sd	a4,-16(a0)$/;"	l
ab4	user/ls.asm	/^ ab4:	0024849b          	addiw	s1,s1,2$/;"	l
ab4	user/matmul.asm	/^ ab4:	000b0513          	mv	a0,s6$/;"	l
ab4	user/mkdir.asm	/^ ab4:	00000797          	auipc	a5,0x0$/;"	l
ab4	user/rm.asm	/^ ab4:	00000797          	auipc	a5,0x0$/;"	l
ab4	user/sh.asm	/^     ab4:	00048513          	mv	a0,s1$/;"	l
ab4	user/stressfs.asm	/^ ab4:	00040613          	mv	a2,s0$/;"	l
ab4	user/usertests.asm	/^     ab4:	2a5050ef          	jal	ra,6558 <printf>$/;"	l
ab4	user/wc.asm	/^ ab4:	c21ff0ef          	jal	ra,6d4 <putc>$/;"	l
ab4	user/zombie.asm	/^ ab4:	ff852583          	lw	a1,-8(a0)$/;"	l
ab8	user/cat.asm	/^ ab8:	02013d03          	ld	s10,32(sp)$/;"	l
ab8	user/echo.asm	/^ ab8:	ff010113          	addi	sp,sp,-16$/;"	l
ab8	user/grep.asm	/^ ab8:	0db68e63          	beq	a3,s11,b94 <vprintf+0x214>$/;"	l
ab8	user/grind.asm	/^     ab8:	01c0006f          	j	ad4 <main+0x38>$/;"	l
ab8	user/init.asm	/^ ab8:	02010413          	addi	s0,sp,32$/;"	l
ab8	user/kill.asm	/^ ab8:	fee53823          	sd	a4,-16(a0)$/;"	l
ab8	user/ln.asm	/^ ab8:	05c0006f          	j	b14 <free+0x90>$/;"	l
ab8	user/ls.asm	/^ ab8:	00090b93          	mv	s7,s2$/;"	l
ab8	user/matmul.asm	/^ ab8:	bc9ff0ef          	jal	ra,680 <putc>$/;"	l
ab8	user/mkdir.asm	/^ ab8:	54c7b783          	ld	a5,1356(a5) # 1000 <freep>$/;"	l
ab8	user/rm.asm	/^ ab8:	54c7b783          	ld	a5,1356(a5) # 1000 <freep>$/;"	l
ab8	user/sh.asm	/^     ab8:	909ff0ef          	jal	ra,3c0 <listcmd>$/;"	l
ab8	user/stressfs.asm	/^ ab8:	c41ff0ef          	jal	ra,6f8 <vprintf>$/;"	l
ab8	user/usertests.asm	/^     ab8:	00100513          	li	a0,1$/;"	l
ab8	user/wc.asm	/^ ab8:	07800593          	li	a1,120$/;"	l
ab8	user/zombie.asm	/^ ab8:	0007b603          	ld	a2,0(a5)$/;"	l
abc	user/cat.asm	/^ abc:	01813d83          	ld	s11,24(sp)$/;"	l
abc	user/echo.asm	/^ abc:	00813423          	sd	s0,8(sp)$/;"	l
abc	user/grep.asm	/^ abc:	05a68c63          	beq	a3,s10,b14 <vprintf+0x194>$/;"	l
abc	user/grind.asm	/^     abc:	ee5ff0ef          	jal	ra,9a0 <iter>$/;"	l
abc	user/init.asm	/^ abc:	00b43423          	sd	a1,8(s0)$/;"	l
abc	user/kill.asm	/^ abc:	05c0006f          	j	b18 <free+0x90>$/;"	l
abc	user/ln.asm	/^ abc:	ff852703          	lw	a4,-8(a0)$/;"	l
abc	user/ls.asm	/^ abc:	00000993          	li	s3,0$/;"	l
abc	user/matmul.asm	/^ abc:	00190913          	addi	s2,s2,1$/;"	l
abc	user/mkdir.asm	/^ abc:	0480006f          	j	b04 <free+0x60>$/;"	l
abc	user/rm.asm	/^ abc:	0480006f          	j	b04 <free+0x60>$/;"	l
abc	user/sh.asm	/^     abc:	00050493          	mv	s1,a0$/;"	l
abc	user/stressfs.asm	/^ abc:	01813083          	ld	ra,24(sp)$/;"	l
abc	user/usertests.asm	/^     abc:	4bc050ef          	jal	ra,5f78 <exit>$/;"	l
abc	user/wc.asm	/^ abc:	000b0513          	mv	a0,s6$/;"	l
abc	user/zombie.asm	/^ abc:	02059713          	slli	a4,a1,0x20$/;"	l
ac	user/cat.asm	/^  ac:	02813023          	sd	s0,32(sp)$/;"	l
ac	user/echo.asm	/^  ac:	01010413          	addi	s0,sp,16$/;"	l
ac	user/forktest.asm	/^  ac:	04054063          	bltz	a0,ec <forktest+0xac>$/;"	l
ac	user/grep.asm	/^  ac:	04c70263          	beq	a4,a2,f0 <matchhere+0x70>$/;"	l
ac	user/grind.asm	/^      ac:	06813823          	sd	s0,112(sp)$/;"	l
ac	user/init.asm	/^  ac:	c7850513          	addi	a0,a0,-904 # d20 <malloc+0x164>$/;"	l
ac	user/kill.asm	/^  ac:	fe0718e3          	bnez	a4,9c <strcpy+0x10>$/;"	l
ac	user/ln.asm	/^  ac:	00813403          	ld	s0,8(sp)$/;"	l
ac	user/ls.asm	/^  ac:	00048513          	mv	a0,s1$/;"	l
ac	user/matmul.asm	/^  ac:	0316a50b          	0x316a50b$/;"	l
ac	user/mkdir.asm	/^  ac:	00813423          	sd	s0,8(sp)$/;"	l
ac	user/rm.asm	/^  ac:	00813423          	sd	s0,8(sp)$/;"	l
ac	user/sh.asm	/^      ac:	01010413          	addi	s0,sp,16$/;"	l
ac	user/stressfs.asm	/^  ac:	00090513          	mv	a0,s2$/;"	l
ac	user/usertests.asm	/^      ac:	4c078793          	addi	a5,a5,1216 # a568 <uninit>$/;"	l
ac	user/wc.asm	/^  ac:	20000613          	li	a2,512$/;"	l
ac	user/zombie.asm	/^  ac:	00813403          	ld	s0,8(sp)$/;"	l
ac0	user/cat.asm	/^ ac0:	08010113          	addi	sp,sp,128$/;"	l
ac0	user/echo.asm	/^ ac0:	01010413          	addi	s0,sp,16$/;"	l
ac0	user/grep.asm	/^ ac0:	07800793          	li	a5,120$/;"	l
ac0	user/grind.asm	/^     ac0:	01400513          	li	a0,20$/;"	l
ac0	user/init.asm	/^ ac0:	00c43823          	sd	a2,16(s0)$/;"	l
ac0	user/kill.asm	/^ ac0:	ff852703          	lw	a4,-8(a0)$/;"	l
ac0	user/ln.asm	/^ ac0:	00c7063b          	addw	a2,a4,a2$/;"	l
ac0	user/ls.asm	/^ ac0:	ec9ff06f          	j	988 <vprintf+0x8c>$/;"	l
ac0	user/matmul.asm	/^ ac0:	00094583          	lbu	a1,0(s2)$/;"	l
ac0	user/mkdir.asm	/^ ac0:	00862703          	lw	a4,8(a2)$/;"	l
ac0	user/rm.asm	/^ ac0:	00862703          	lw	a4,8(a2)$/;"	l
ac0	user/sh.asm	/^     ac0:	fadff06f          	j	a6c <parseline+0x88>$/;"	l
ac0	user/stressfs.asm	/^ ac0:	01013403          	ld	s0,16(sp)$/;"	l
ac0	user/usertests.asm	/^     ac0:	00048593          	mv	a1,s1$/;"	l
ac0	user/wc.asm	/^ ac0:	c15ff0ef          	jal	ra,6d4 <putc>$/;"	l
ac0	user/zombie.asm	/^ ac0:	02075713          	srli	a4,a4,0x20$/;"	l
ac4	user/cat.asm	/^ ac4:	00008067          	ret$/;"	l
ac4	user/echo.asm	/^ ac4:	ff050693          	addi	a3,a0,-16$/;"	l
ac4	user/grep.asm	/^ ac4:	14f68263          	beq	a3,a5,c08 <vprintf+0x288>$/;"	l
ac4	user/grind.asm	/^     ac4:	4e8000ef          	jal	ra,fac <sleep>$/;"	l
ac4	user/init.asm	/^ ac4:	00d43c23          	sd	a3,24(s0)$/;"	l
ac4	user/kill.asm	/^ ac4:	00c7063b          	addw	a2,a4,a2$/;"	l
ac4	user/ln.asm	/^ ac4:	00c7a423          	sw	a2,8(a5)$/;"	l
ac4	user/ls.asm	/^ ac4:	008b8913          	addi	s2,s7,8$/;"	l
ac4	user/matmul.asm	/^ ac4:	fe0598e3          	bnez	a1,ab4 <vprintf+0x318>$/;"	l
ac4	user/mkdir.asm	/^ ac4:	00b705bb          	addw	a1,a4,a1$/;"	l
ac4	user/rm.asm	/^ ac4:	00b705bb          	addw	a1,a4,a1$/;"	l
ac4	user/sh.asm	/^     ac4:	fd010113          	addi	sp,sp,-48$/;"	l
ac4	user/stressfs.asm	/^ ac4:	05010113          	addi	sp,sp,80$/;"	l
ac4	user/usertests.asm	/^     ac4:	00006517          	auipc	a0,0x6$/;"	l
ac4	user/wc.asm	/^ ac4:	01000913          	li	s2,16$/;"	l
ac4	user/zombie.asm	/^ ac4:	00471713          	slli	a4,a4,0x4$/;"	l
ac8	user/cat.asm	/^ ac8:	fb010113          	addi	sp,sp,-80$/;"	l
ac8	user/echo.asm	/^ ac8:	00000797          	auipc	a5,0x0$/;"	l
ac8	user/grep.asm	/^ ac8:	000a8593          	mv	a1,s5$/;"	l
ac8	user/grind.asm	/^     ac8:	0004b783          	ld	a5,0(s1)$/;"	l
ac8	user/init.asm	/^ ac8:	02e43023          	sd	a4,32(s0)$/;"	l
ac8	user/kill.asm	/^ ac8:	00c7a423          	sw	a2,8(a5)$/;"	l
ac8	user/ln.asm	/^ ac8:	ff053703          	ld	a4,-16(a0)$/;"	l
ac8	user/ls.asm	/^ ac8:	00100693          	li	a3,1$/;"	l
ac8	user/matmul.asm	/^ ac8:	00098b93          	mv	s7,s3$/;"	l
ac8	user/mkdir.asm	/^ ac8:	feb52c23          	sw	a1,-8(a0)$/;"	l
ac8	user/rm.asm	/^ ac8:	feb52c23          	sw	a1,-8(a0)$/;"	l
ac8	user/sh.asm	/^     ac8:	02113423          	sd	ra,40(sp)$/;"	l
ac8	user/stressfs.asm	/^ ac8:	00008067          	ret$/;"	l
ac8	user/usertests.asm	/^     ac8:	00450513          	addi	a0,a0,4 # 6ac8 <malloc+0x460>$/;"	l
ac8	user/wc.asm	/^ ac8:	03c9d793          	srli	a5,s3,0x3c$/;"	l
ac8	user/zombie.asm	/^ ac8:	00e68733          	add	a4,a3,a4$/;"	l
acc	user/cat.asm	/^ acc:	00113c23          	sd	ra,24(sp)$/;"	l
acc	user/echo.asm	/^ acc:	5387b783          	ld	a5,1336(a5) # 1000 <freep>$/;"	l
acc	user/grep.asm	/^ acc:	000b0513          	mv	a0,s6$/;"	l
acc	user/grind.asm	/^     acc:	00178793          	addi	a5,a5,1$/;"	l
acc	user/init.asm	/^ acc:	02f43423          	sd	a5,40(s0)$/;"	l
acc	user/kill.asm	/^ acc:	ff053703          	ld	a4,-16(a0)$/;"	l
acc	user/ln.asm	/^ acc:	00e7b023          	sd	a4,0(a5)$/;"	l
acc	user/ls.asm	/^ acc:	00a00613          	li	a2,10$/;"	l
acc	user/matmul.asm	/^ acc:	00000993          	li	s3,0$/;"	l
acc	user/mkdir.asm	/^ acc:	0007b703          	ld	a4,0(a5)$/;"	l
acc	user/rm.asm	/^ acc:	0007b703          	ld	a4,0(a5)$/;"	l
acc	user/sh.asm	/^     acc:	02813023          	sd	s0,32(sp)$/;"	l
acc	user/stressfs.asm	/^ acc:	fa010113          	addi	sp,sp,-96$/;"	l
acc	user/usertests.asm	/^     acc:	28d050ef          	jal	ra,6558 <printf>$/;"	l
acc	user/wc.asm	/^ acc:	00fc87b3          	add	a5,s9,a5$/;"	l
acc	user/zombie.asm	/^ acc:	f8e60ae3          	beq	a2,a4,a60 <free+0x1c>$/;"	l
acquire	kernel/spinlock.c	/^acquire(struct spinlock *lk)$/;"	f
acquiresleep	kernel/sleeplock.c	/^acquiresleep(struct sleeplock *lk)$/;"	f
ad0	user/cat.asm	/^ ad0:	00813823          	sd	s0,16(sp)$/;"	l
ad0	user/echo.asm	/^ ad0:	0480006f          	j	b18 <free+0x60>$/;"	l
ad0	user/grep.asm	/^ ad0:	d95ff0ef          	jal	ra,864 <putc>$/;"	l
ad0	user/grind.asm	/^     ad0:	00f4b023          	sd	a5,0(s1)$/;"	l
ad0	user/init.asm	/^ ad0:	03043823          	sd	a6,48(s0)$/;"	l
ad0	user/kill.asm	/^ ad0:	00e7b023          	sd	a4,0(a5)$/;"	l
ad0	user/ln.asm	/^ ad0:	0600006f          	j	b30 <free+0xac>$/;"	l
ad0	user/ls.asm	/^ ad0:	000ba583          	lw	a1,0(s7)$/;"	l
ad0	user/matmul.asm	/^ ad0:	d59ff06f          	j	828 <vprintf+0x8c>$/;"	l
ad0	user/mkdir.asm	/^ ad0:	00073703          	ld	a4,0(a4)$/;"	l
ad0	user/rm.asm	/^ ad0:	00073703          	ld	a4,0(a4)$/;"	l
ad0	user/sh.asm	/^     ad0:	00913c23          	sd	s1,24(sp)$/;"	l
ad0	user/stressfs.asm	/^ ad0:	00113c23          	sd	ra,24(sp)$/;"	l
ad0	user/usertests.asm	/^     ad0:	000a0613          	mv	a2,s4$/;"	l
ad0	user/wc.asm	/^ ad0:	0007c583          	lbu	a1,0(a5)$/;"	l
ad0	user/zombie.asm	/^ ad0:	fec53823          	sd	a2,-16(a0)$/;"	l
ad4	user/cat.asm	/^ ad4:	02010413          	addi	s0,sp,32$/;"	l
ad4	user/echo.asm	/^ ad4:	00862703          	lw	a4,8(a2)$/;"	l
ad4	user/grep.asm	/^ ad4:	00090593          	mv	a1,s2$/;"	l
ad4	user/grind.asm	/^     ad4:	3f4000ef          	jal	ra,ec8 <fork>$/;"	l
ad4	user/init.asm	/^ ad4:	03143c23          	sd	a7,56(s0)$/;"	l
ad4	user/kill.asm	/^ ad4:	0600006f          	j	b34 <free+0xac>$/;"	l
ad4	user/ln.asm	/^ ad4:	0007b703          	ld	a4,0(a5)$/;"	l
ad4	user/ls.asm	/^ ad4:	000b0513          	mv	a0,s6$/;"	l
ad4	user/matmul.asm	/^ ad4:	00000917          	auipc	s2,0x0$/;"	l
ad4	user/mkdir.asm	/^ ad4:	fee53823          	sd	a4,-16(a0)$/;"	l
ad4	user/rm.asm	/^ ad4:	fee53823          	sd	a4,-16(a0)$/;"	l
ad4	user/sh.asm	/^     ad4:	01213823          	sd	s2,16(sp)$/;"	l
ad4	user/stressfs.asm	/^ ad4:	00813823          	sd	s0,16(sp)$/;"	l
ad4	user/usertests.asm	/^     ad4:	000a8593          	mv	a1,s5$/;"	l
ad4	user/wc.asm	/^ ad4:	000b0513          	mv	a0,s6$/;"	l
ad4	user/zombie.asm	/^ ad4:	0087a603          	lw	a2,8(a5)$/;"	l
ad8	user/cat.asm	/^ ad8:	00c43023          	sd	a2,0(s0)$/;"	l
ad8	user/echo.asm	/^ ad8:	00b705bb          	addw	a1,a4,a1$/;"	l
ad8	user/grep.asm	/^ ad8:	000b0513          	mv	a0,s6$/;"	l
ad8	user/grind.asm	/^     ad8:	fe0502e3          	beqz	a0,abc <main+0x20>$/;"	l
ad8	user/init.asm	/^ ad8:	00840613          	addi	a2,s0,8$/;"	l
ad8	user/kill.asm	/^ ad8:	0007b703          	ld	a4,0(a5)$/;"	l
ad8	user/ln.asm	/^ ad8:	00e7e463          	bltu	a5,a4,ae0 <free+0x5c>$/;"	l
ad8	user/ls.asm	/^ ad8:	d39ff0ef          	jal	ra,810 <printint>$/;"	l
ad8	user/matmul.asm	/^ ad8:	31c90913          	addi	s2,s2,796 # df0 <malloc+0x170>$/;"	l
ad8	user/mkdir.asm	/^ ad8:	05c0006f          	j	b34 <free+0x90>$/;"	l
ad8	user/rm.asm	/^ ad8:	05c0006f          	j	b34 <free+0x90>$/;"	l
ad8	user/sh.asm	/^     ad8:	01313423          	sd	s3,8(sp)$/;"	l
ad8	user/stressfs.asm	/^ ad8:	02010413          	addi	s0,sp,32$/;"	l
ad8	user/usertests.asm	/^     ad8:	00006517          	auipc	a0,0x6$/;"	l
ad8	user/wc.asm	/^ ad8:	bfdff0ef          	jal	ra,6d4 <putc>$/;"	l
ad8	user/zombie.asm	/^ ad8:	02061713          	slli	a4,a2,0x20$/;"	l
adc	user/cat.asm	/^ adc:	00d43423          	sd	a3,8(s0)$/;"	l
adc	user/echo.asm	/^ adc:	feb52c23          	sw	a1,-8(a0)$/;"	l
adc	user/grep.asm	/^ adc:	d89ff0ef          	jal	ra,864 <putc>$/;"	l
adc	user/grind.asm	/^     adc:	fea052e3          	blez	a0,ac0 <main+0x24>$/;"	l
adc	user/init.asm	/^ adc:	fec43423          	sd	a2,-24(s0)$/;"	l
adc	user/kill.asm	/^ adc:	00e7e463          	bltu	a5,a4,ae4 <free+0x5c>$/;"	l
adc	user/ln.asm	/^ adc:	00e6ec63          	bltu	a3,a4,af4 <free+0x70>$/;"	l
adc	user/ls.asm	/^ adc:	0024849b          	addiw	s1,s1,2$/;"	l
adc	user/matmul.asm	/^ adc:	02800593          	li	a1,40$/;"	l
adc	user/mkdir.asm	/^ adc:	ff852703          	lw	a4,-8(a0)$/;"	l
adc	user/rm.asm	/^ adc:	ff852703          	lw	a4,-8(a0)$/;"	l
adc	user/sh.asm	/^     adc:	03010413          	addi	s0,sp,48$/;"	l
adc	user/stressfs.asm	/^ adc:	00b43423          	sd	a1,8(s0)$/;"	l
adc	user/usertests.asm	/^     adc:	fd050513          	addi	a0,a0,-48 # 6aa8 <malloc+0x440>$/;"	l
adc	user/wc.asm	/^ adc:	00499993          	slli	s3,s3,0x4$/;"	l
adc	user/zombie.asm	/^ adc:	02075713          	srli	a4,a4,0x20$/;"	l
addr	kernel/kernel.asm	/^      addr = balloc(ip->dev);$/;"	d
addr	kernel/kernel.asm	/^  addr = myproc()->sz;$/;"	d
addr	kernel/virtio.h	/^  uint64 addr;$/;"	m	struct:virtq_desc
addrs	kernel/file.h	/^  uint addrs[NDIRECT+1];$/;"	m	struct:inode
addrs	kernel/fs.h	/^  uint addrs[NDIRECT+1];   \/\/ Data block addresses$/;"	m	struct:dinode
ae0	user/cat.asm	/^ ae0:	00e43823          	sd	a4,16(s0)$/;"	l
ae0	user/echo.asm	/^ ae0:	0007b703          	ld	a4,0(a5)$/;"	l
ae0	user/grep.asm	/^ ae0:	00000993          	li	s3,0$/;"	l
ae0	user/grind.asm	/^     ae0:	00000513          	li	a0,0$/;"	l
ae0	user/init.asm	/^ ae0:	00050593          	mv	a1,a0$/;"	l
ae0	user/kill.asm	/^ ae0:	00e6ec63          	bltu	a3,a4,af8 <free+0x70>$/;"	l
ae0	user/ln.asm	/^ ae0:	00070793          	mv	a5,a4$/;"	l
ae0	user/ls.asm	/^ ae0:	00090b93          	mv	s7,s2$/;"	l
ae0	user/matmul.asm	/^ ae0:	fd5ff06f          	j	ab4 <vprintf+0x318>$/;"	l
ae0	user/mkdir.asm	/^ ae0:	00c7063b          	addw	a2,a4,a2$/;"	l
ae0	user/rm.asm	/^ ae0:	00c7063b          	addw	a2,a4,a2$/;"	l
ae0	user/sh.asm	/^     ae0:	00050493          	mv	s1,a0$/;"	l
ae0	user/stressfs.asm	/^ ae0:	00c43823          	sd	a2,16(s0)$/;"	l
ae0	user/usertests.asm	/^     ae0:	279050ef          	jal	ra,6558 <printf>$/;"	l
ae0	user/wc.asm	/^ ae0:	fff9091b          	addiw	s2,s2,-1$/;"	l
ae0	user/zombie.asm	/^ ae0:	00471713          	slli	a4,a4,0x4$/;"	l
ae4	user/cat.asm	/^ ae4:	00f43c23          	sd	a5,24(s0)$/;"	l
ae4	user/echo.asm	/^ ae4:	00073703          	ld	a4,0(a4)$/;"	l
ae4	user/grep.asm	/^ ae4:	f29ff06f          	j	a0c <vprintf+0x8c>$/;"	l
ae4	user/grind.asm	/^     ae4:	3fc000ef          	jal	ra,ee0 <wait>$/;"	l
ae4	user/init.asm	/^ ae4:	00100513          	li	a0,1$/;"	l
ae4	user/kill.asm	/^ ae4:	00070793          	mv	a5,a4$/;"	l
ae4	user/ln.asm	/^ ae4:	fed7f8e3          	bgeu	a5,a3,ad4 <free+0x50>$/;"	l
ae4	user/ls.asm	/^ ae4:	00000993          	li	s3,0$/;"	l
ae4	user/matmul.asm	/^ ae4:	00098b93          	mv	s7,s3$/;"	l
ae4	user/mkdir.asm	/^ ae4:	00c7a423          	sw	a2,8(a5)$/;"	l
ae4	user/rm.asm	/^ ae4:	00c7a423          	sw	a2,8(a5)$/;"	l
ae4	user/sh.asm	/^     ae4:	00058913          	mv	s2,a1$/;"	l
ae4	user/stressfs.asm	/^ ae4:	00d43c23          	sd	a3,24(s0)$/;"	l
ae4	user/usertests.asm	/^     ae4:	00100513          	li	a0,1$/;"	l
ae4	user/wc.asm	/^ ae4:	fe0912e3          	bnez	s2,ac8 <vprintf+0x2d8>$/;"	l
ae4	user/zombie.asm	/^ ae4:	00e78733          	add	a4,a5,a4$/;"	l
ae8	user/cat.asm	/^ ae8:	03043023          	sd	a6,32(s0)$/;"	l
ae8	user/echo.asm	/^ ae8:	fee53823          	sd	a4,-16(a0)$/;"	l
ae8	user/grep.asm	/^ ae8:	008b8913          	addi	s2,s7,8$/;"	l
ae8	user/grind.asm	/^     ae8:	fd9ff06f          	j	ac0 <main+0x24>$/;"	l
ae8	user/init.asm	/^ ae8:	bf1ff0ef          	jal	ra,6d8 <vprintf>$/;"	l
ae8	user/kill.asm	/^ ae8:	fed7f8e3          	bgeu	a5,a3,ad8 <free+0x50>$/;"	l
ae8	user/ln.asm	/^ ae8:	0007b703          	ld	a4,0(a5)$/;"	l
ae8	user/ls.asm	/^ ae8:	ea1ff06f          	j	988 <vprintf+0x8c>$/;"	l
ae8	user/matmul.asm	/^ ae8:	00000993          	li	s3,0$/;"	l
ae8	user/mkdir.asm	/^ ae8:	ff053703          	ld	a4,-16(a0)$/;"	l
ae8	user/rm.asm	/^ ae8:	ff053703          	ld	a4,-16(a0)$/;"	l
ae8	user/sh.asm	/^     ae8:	00001617          	auipc	a2,0x1$/;"	l
ae8	user/stressfs.asm	/^ ae8:	02e43023          	sd	a4,32(s0)$/;"	l
ae8	user/usertests.asm	/^     ae8:	490050ef          	jal	ra,5f78 <exit>$/;"	l
ae8	user/wc.asm	/^ ae8:	f8843b83          	ld	s7,-120(s0)$/;"	l
ae8	user/zombie.asm	/^ ae8:	f8e68ae3          	beq	a3,a4,a7c <free+0x38>$/;"	l
aec	user/cat.asm	/^ aec:	03143423          	sd	a7,40(s0)$/;"	l
aec	user/echo.asm	/^ aec:	05c0006f          	j	b48 <free+0x90>$/;"	l
aec	user/grep.asm	/^ aec:	00100693          	li	a3,1$/;"	l
aec	user/grind.asm	/^     aec:	ff010113          	addi	sp,sp,-16$/;"	l
aec	user/init.asm	/^ aec:	01813083          	ld	ra,24(sp)$/;"	l
aec	user/kill.asm	/^ aec:	0007b703          	ld	a4,0(a5)$/;"	l
aec	user/ln.asm	/^ aec:	00e6e463          	bltu	a3,a4,af4 <free+0x70>$/;"	l
aec	user/ls.asm	/^ aec:	008b8913          	addi	s2,s7,8$/;"	l
aec	user/matmul.asm	/^ aec:	d3dff06f          	j	828 <vprintf+0x8c>$/;"	l
aec	user/mkdir.asm	/^ aec:	00e7b023          	sd	a4,0(a5)$/;"	l
aec	user/rm.asm	/^ aec:	00e7b023          	sd	a4,0(a5)$/;"	l
aec	user/sh.asm	/^     aec:	f9860613          	addi	a2,a2,-104 # 1a80 <malloc+0x1bc>$/;"	l
aec	user/stressfs.asm	/^ aec:	02f43423          	sd	a5,40(s0)$/;"	l
aec	user/usertests.asm	/^     aec:	00050613          	mv	a2,a0$/;"	l
aec	user/wc.asm	/^ aec:	00000993          	li	s3,0$/;"	l
aec	user/zombie.asm	/^ aec:	00d7b023          	sd	a3,0(a5)$/;"	l
af0	user/cat.asm	/^ af0:	fe843423          	sd	s0,-24(s0)$/;"	l
af0	user/echo.asm	/^ af0:	ff852703          	lw	a4,-8(a0)$/;"	l
af0	user/grep.asm	/^ af0:	00a00613          	li	a2,10$/;"	l
af0	user/grind.asm	/^     af0:	00113423          	sd	ra,8(sp)$/;"	l
af0	user/init.asm	/^ af0:	01013403          	ld	s0,16(sp)$/;"	l
af0	user/kill.asm	/^ af0:	00e6e463          	bltu	a3,a4,af8 <free+0x70>$/;"	l
af0	user/ln.asm	/^ af0:	fee7e8e3          	bltu	a5,a4,ae0 <free+0x5c>$/;"	l
af0	user/ls.asm	/^ af0:	00000693          	li	a3,0$/;"	l
af0	user/matmul.asm	/^ af0:	07813083          	ld	ra,120(sp)$/;"	l
af0	user/mkdir.asm	/^ af0:	0600006f          	j	b50 <free+0xac>$/;"	l
af0	user/rm.asm	/^ af0:	0600006f          	j	b50 <free+0xac>$/;"	l
af0	user/sh.asm	/^     af0:	b21ff0ef          	jal	ra,610 <peek>$/;"	l
af0	user/stressfs.asm	/^ af0:	03043823          	sd	a6,48(s0)$/;"	l
af0	user/usertests.asm	/^     af0:	000a8593          	mv	a1,s5$/;"	l
af0	user/wc.asm	/^ af0:	d8dff06f          	j	87c <vprintf+0x8c>$/;"	l
af0	user/zombie.asm	/^ af0:	00000717          	auipc	a4,0x0$/;"	l
af4	user/cat.asm	/^ af4:	00040613          	mv	a2,s0$/;"	l
af4	user/echo.asm	/^ af4:	00c7063b          	addw	a2,a4,a2$/;"	l
af4	user/grep.asm	/^ af4:	000ba583          	lw	a1,0(s7)$/;"	l
af4	user/grind.asm	/^     af4:	00813023          	sd	s0,0(sp)$/;"	l
af4	user/init.asm	/^ af4:	06010113          	addi	sp,sp,96$/;"	l
af4	user/kill.asm	/^ af4:	fee7e8e3          	bltu	a5,a4,ae4 <free+0x5c>$/;"	l
af4	user/ln.asm	/^ af4:	ff852583          	lw	a1,-8(a0)$/;"	l
af4	user/ls.asm	/^ af4:	00a00613          	li	a2,10$/;"	l
af4	user/matmul.asm	/^ af4:	07013403          	ld	s0,112(sp)$/;"	l
af4	user/mkdir.asm	/^ af4:	0007b703          	ld	a4,0(a5)$/;"	l
af4	user/rm.asm	/^ af4:	0007b703          	ld	a4,0(a5)$/;"	l
af4	user/sh.asm	/^     af4:	08050063          	beqz	a0,b74 <parseblock+0xb0>$/;"	l
af4	user/stressfs.asm	/^ af4:	03143c23          	sd	a7,56(s0)$/;"	l
af4	user/usertests.asm	/^     af4:	00006517          	auipc	a0,0x6$/;"	l
af4	user/wc.asm	/^ af4:	008b8993          	addi	s3,s7,8$/;"	l
af4	user/zombie.asm	/^ af4:	50f73823          	sd	a5,1296(a4) # 1000 <freep>$/;"	l
af8	user/cat.asm	/^ af8:	c41ff0ef          	jal	ra,738 <vprintf>$/;"	l
af8	user/echo.asm	/^ af8:	00c7a423          	sw	a2,8(a5)$/;"	l
af8	user/grep.asm	/^ af8:	000b0513          	mv	a0,s6$/;"	l
af8	user/grind.asm	/^     af8:	01010413          	addi	s0,sp,16$/;"	l
af8	user/init.asm	/^ af8:	00008067          	ret$/;"	l
af8	user/kill.asm	/^ af8:	ff852583          	lw	a1,-8(a0)$/;"	l
af8	user/ln.asm	/^ af8:	0007b603          	ld	a2,0(a5)$/;"	l
af8	user/ls.asm	/^ af8:	000ba583          	lw	a1,0(s7)$/;"	l
af8	user/matmul.asm	/^ af8:	06813483          	ld	s1,104(sp)$/;"	l
af8	user/mkdir.asm	/^ af8:	00e7e463          	bltu	a5,a4,b00 <free+0x5c>$/;"	l
af8	user/rm.asm	/^ af8:	00e7e463          	bltu	a5,a4,b00 <free+0x5c>$/;"	l
af8	user/sh.asm	/^     af8:	00000693          	li	a3,0$/;"	l
af8	user/stressfs.asm	/^ af8:	00840613          	addi	a2,s0,8$/;"	l
af8	user/usertests.asm	/^     af8:	fec50513          	addi	a0,a0,-20 # 6ae0 <malloc+0x478>$/;"	l
af8	user/wc.asm	/^ af8:	000bb903          	ld	s2,0(s7)$/;"	l
af8	user/zombie.asm	/^ af8:	00813403          	ld	s0,8(sp)$/;"	l
afc	user/cat.asm	/^ afc:	01813083          	ld	ra,24(sp)$/;"	l
afc	user/echo.asm	/^ afc:	ff053703          	ld	a4,-16(a0)$/;"	l
afc	user/grep.asm	/^ afc:	d99ff0ef          	jal	ra,894 <printint>$/;"	l
afc	user/grind.asm	/^     afc:	fa1ff0ef          	jal	ra,a9c <main>$/;"	l
afc	user/init.asm	/^ afc:	ff010113          	addi	sp,sp,-16$/;"	l
afc	user/kill.asm	/^ afc:	0007b603          	ld	a2,0(a5)$/;"	l
afc	user/ln.asm	/^ afc:	02059713          	slli	a4,a1,0x20$/;"	l
afc	user/ls.asm	/^ afc:	000b0513          	mv	a0,s6$/;"	l
afc	user/matmul.asm	/^ afc:	06013903          	ld	s2,96(sp)$/;"	l
afc	user/mkdir.asm	/^ afc:	00e6ec63          	bltu	a3,a4,b14 <free+0x70>$/;"	l
afc	user/rm.asm	/^ afc:	00e6ec63          	bltu	a3,a4,b14 <free+0x70>$/;"	l
afc	user/sh.asm	/^     afc:	00000613          	li	a2,0$/;"	l
afc	user/stressfs.asm	/^ afc:	fec43423          	sd	a2,-24(s0)$/;"	l
afc	user/usertests.asm	/^     afc:	25d050ef          	jal	ra,6558 <printf>$/;"	l
afc	user/wc.asm	/^ afc:	02090663          	beqz	s2,b28 <vprintf+0x338>$/;"	l
afc	user/zombie.asm	/^ afc:	01010113          	addi	sp,sp,16$/;"	l
align	kernel/elf.h	/^  uint64 align;$/;"	m	struct:proghdr
alloc3_desc	kernel/virtio_disk.c	/^alloc3_desc(int *idx)$/;"	f	file:
alloc_desc	kernel/virtio_disk.c	/^alloc_desc()$/;"	f	file:
allocpid	kernel/proc.c	/^allocpid()$/;"	f
allocproc	kernel/proc.c	/^allocproc(void)$/;"	f	file:
argaddr	kernel/syscall.c	/^argaddr(int n, uint64 *ip)$/;"	f
argc	user/sh.asm	/^  argc = 0;$/;"	d
argfd	kernel/sysfile.c	/^argfd(int n, int *pfd, struct file **pf)$/;"	f	file:
argint	kernel/syscall.c	/^argint(int n, int *ip)$/;"	f
argptest	user/usertests.c	/^void argptest(char *s)$/;"	f
argraw	kernel/syscall.c	/^argraw(int n)$/;"	f	file:
argstr	kernel/syscall.c	/^argstr(int n, char *buf, int max)$/;"	f
argv	user/init.c	/^char *argv[] = { "sh", 0 };$/;"	v
argv	user/initcode.S	/^argv:$/;"	l
argv	user/sh.c	/^  char *argv[MAXARGS];$/;"	m	struct:execcmd	file:
atoi	user/ulib.c	/^atoi(const char *s)$/;"	f
avail	kernel/virtio_disk.c	/^  struct virtq_avail *avail;$/;"	m	struct:disk	typeref:struct:disk::virtq_avail	file:
b	kernel/kernel.asm	/^  b = bget(dev, blockno);$/;"	d
b	kernel/virtio_disk.c	/^    struct buf *b;$/;"	m	struct:disk::__anon2	typeref:struct:disk::__anon2::buf	file:
b	user/usertests.asm	/^    b = sbrk(1);$/;"	d
b0	user/cat.asm	/^  b0:	00913c23          	sd	s1,24(sp)$/;"	l
b0	user/echo.asm	/^  b0:	f51ff0ef          	jal	ra,0 <main>$/;"	l
b0	user/forktest.asm	/^  b0:	fff4849b          	addiw	s1,s1,-1$/;"	l
b0	user/grep.asm	/^  b0:	0005c683          	lbu	a3,0(a1)$/;"	l
b0	user/grind.asm	/^      b0:	06913423          	sd	s1,104(sp)$/;"	l
b0	user/init.asm	/^  b0:	1fd000ef          	jal	ra,aac <printf>$/;"	l
b0	user/kill.asm	/^  b0:	00813403          	ld	s0,8(sp)$/;"	l
b0	user/ln.asm	/^  b0:	01010113          	addi	sp,sp,16$/;"	l
b0	user/ls.asm	/^  b0:	2e4000ef          	jal	ra,394 <strlen>$/;"	l
b0	user/matmul.asm	/^  b0:	00050793          	mv	a5,a0$/;"	l
b0	user/mkdir.asm	/^  b0:	01010413          	addi	s0,sp,16$/;"	l
b0	user/rm.asm	/^  b0:	01010413          	addi	s0,sp,16$/;"	l
b0	user/sh.asm	/^      b0:	118010ef          	jal	ra,11c8 <fork>$/;"	l
b0	user/stressfs.asm	/^  b0:	478000ef          	jal	ra,528 <close>$/;"	l
b0	user/usertests.asm	/^      b0:	0000d697          	auipc	a3,0xd$/;"	l
b0	user/wc.asm	/^  b0:	00001597          	auipc	a1,0x1$/;"	l
b0	user/zombie.asm	/^  b0:	01010113          	addi	sp,sp,16$/;"	l
b00	user/cat.asm	/^ b00:	01013403          	ld	s0,16(sp)$/;"	l
b00	user/echo.asm	/^ b00:	00e7b023          	sd	a4,0(a5)$/;"	l
b00	user/grep.asm	/^ b00:	0014849b          	addiw	s1,s1,1$/;"	l
b00	user/grind.asm	/^     b00:	00000513          	li	a0,0$/;"	l
b00	user/init.asm	/^ b00:	00813423          	sd	s0,8(sp)$/;"	l
b00	user/kill.asm	/^ b00:	02059713          	slli	a4,a1,0x20$/;"	l
b00	user/ln.asm	/^ b00:	02075713          	srli	a4,a4,0x20$/;"	l
b00	user/ls.asm	/^ b00:	d11ff0ef          	jal	ra,810 <printint>$/;"	l
b00	user/matmul.asm	/^ b00:	05813983          	ld	s3,88(sp)$/;"	l
b00	user/mkdir.asm	/^ b00:	00070793          	mv	a5,a4$/;"	l
b00	user/rm.asm	/^ b00:	00070793          	mv	a5,a4$/;"	l
b00	user/sh.asm	/^     b00:	00090593          	mv	a1,s2$/;"	l
b00	user/stressfs.asm	/^ b00:	00050593          	mv	a1,a0$/;"	l
b00	user/usertests.asm	/^     b00:	00100513          	li	a0,1$/;"	l
b00	user/wc.asm	/^ b00:	00094583          	lbu	a1,0(s2)$/;"	l
b00	user/zombie.asm	/^ b00:	00008067          	ret$/;"	l
b04	user/cat.asm	/^ b04:	05010113          	addi	sp,sp,80$/;"	l
b04	user/echo.asm	/^ b04:	0600006f          	j	b64 <free+0xac>$/;"	l
b04	user/grep.asm	/^ b04:	00090b93          	mv	s7,s2$/;"	l
b04	user/grind.asm	/^     b04:	3d0000ef          	jal	ra,ed4 <exit>$/;"	l
b04	user/init.asm	/^ b04:	01010413          	addi	s0,sp,16$/;"	l
b04	user/kill.asm	/^ b04:	02075713          	srli	a4,a4,0x20$/;"	l
b04	user/ln.asm	/^ b04:	00471713          	slli	a4,a4,0x4$/;"	l
b04	user/ls.asm	/^ b04:	00090b93          	mv	s7,s2$/;"	l
b04	user/matmul.asm	/^ b04:	05013a03          	ld	s4,80(sp)$/;"	l
b04	user/mkdir.asm	/^ b04:	fed7f8e3          	bgeu	a5,a3,af4 <free+0x50>$/;"	l
b04	user/rm.asm	/^ b04:	fed7f8e3          	bgeu	a5,a3,af4 <free+0x50>$/;"	l
b04	user/sh.asm	/^     b04:	00048513          	mv	a0,s1$/;"	l
b04	user/stressfs.asm	/^ b04:	00100513          	li	a0,1$/;"	l
b04	user/usertests.asm	/^     b04:	474050ef          	jal	ra,5f78 <exit>$/;"	l
b04	user/wc.asm	/^ b04:	02058a63          	beqz	a1,b38 <vprintf+0x348>$/;"	l
b04	user/zombie.asm	/^ b04:	fc010113          	addi	sp,sp,-64$/;"	l
b08	user/cat.asm	/^ b08:	00008067          	ret$/;"	l
b08	user/echo.asm	/^ b08:	0007b703          	ld	a4,0(a5)$/;"	l
b08	user/grep.asm	/^ b08:	00000993          	li	s3,0$/;"	l
b08	user/grind.asm	/^     b08:	ff010113          	addi	sp,sp,-16$/;"	l
b08	user/init.asm	/^ b08:	ff050693          	addi	a3,a0,-16$/;"	l
b08	user/kill.asm	/^ b08:	00471713          	slli	a4,a4,0x4$/;"	l
b08	user/ln.asm	/^ b08:	00e68733          	add	a4,a3,a4$/;"	l
b08	user/ls.asm	/^ b08:	00000993          	li	s3,0$/;"	l
b08	user/matmul.asm	/^ b08:	04813a83          	ld	s5,72(sp)$/;"	l
b08	user/mkdir.asm	/^ b08:	0007b703          	ld	a4,0(a5)$/;"	l
b08	user/rm.asm	/^ b08:	0007b703          	ld	a4,0(a5)$/;"	l
b08	user/sh.asm	/^     b08:	981ff0ef          	jal	ra,488 <gettoken>$/;"	l
b08	user/stressfs.asm	/^ b08:	bf1ff0ef          	jal	ra,6f8 <vprintf>$/;"	l
b08	user/usertests.asm	/^     b08:	00050613          	mv	a2,a0$/;"	l
b08	user/wc.asm	/^ b08:	000b0513          	mv	a0,s6$/;"	l
b08	user/zombie.asm	/^ b08:	02113c23          	sd	ra,56(sp)$/;"	l
b0c	user/cat.asm	/^ b0c:	fa010113          	addi	sp,sp,-96$/;"	l
b0c	user/echo.asm	/^ b0c:	00e7e463          	bltu	a5,a4,b14 <free+0x5c>$/;"	l
b0c	user/grep.asm	/^ b0c:	f01ff06f          	j	a0c <vprintf+0x8c>$/;"	l
b0c	user/grind.asm	/^     b0c:	00813423          	sd	s0,8(sp)$/;"	l
b0c	user/init.asm	/^ b0c:	00000797          	auipc	a5,0x0$/;"	l
b0c	user/kill.asm	/^ b0c:	00e68733          	add	a4,a3,a4$/;"	l
b0c	user/ln.asm	/^ b0c:	f8e60ae3          	beq	a2,a4,aa0 <free+0x1c>$/;"	l
b0c	user/ls.asm	/^ b0c:	e7dff06f          	j	988 <vprintf+0x8c>$/;"	l
b0c	user/matmul.asm	/^ b0c:	04013b03          	ld	s6,64(sp)$/;"	l
b0c	user/mkdir.asm	/^ b0c:	00e6e463          	bltu	a3,a4,b14 <free+0x70>$/;"	l
b0c	user/rm.asm	/^ b0c:	00e6e463          	bltu	a3,a4,b14 <free+0x70>$/;"	l
b0c	user/sh.asm	/^     b0c:	00090593          	mv	a1,s2$/;"	l
b0c	user/stressfs.asm	/^ b0c:	01813083          	ld	ra,24(sp)$/;"	l
b0c	user/usertests.asm	/^     b0c:	000a8593          	mv	a1,s5$/;"	l
b0c	user/wc.asm	/^ b0c:	bc9ff0ef          	jal	ra,6d4 <putc>$/;"	l
b0c	user/zombie.asm	/^ b0c:	02813823          	sd	s0,48(sp)$/;"	l
b10	user/cat.asm	/^ b10:	00113c23          	sd	ra,24(sp)$/;"	l
b10	user/echo.asm	/^ b10:	00e6ec63          	bltu	a3,a4,b28 <free+0x70>$/;"	l
b10	user/grep.asm	/^ b10:	03860c63          	beq	a2,s8,b48 <vprintf+0x1c8>$/;"	l
b10	user/grind.asm	/^     b10:	01010413          	addi	s0,sp,16$/;"	l
b10	user/init.asm	/^ b10:	5047b783          	ld	a5,1284(a5) # 1010 <freep>$/;"	l
b10	user/kill.asm	/^ b10:	f8e60ae3          	beq	a2,a4,aa4 <free+0x1c>$/;"	l
b10	user/ln.asm	/^ b10:	fec53823          	sd	a2,-16(a0)$/;"	l
b10	user/ls.asm	/^ b10:	008b8913          	addi	s2,s7,8$/;"	l
b10	user/matmul.asm	/^ b10:	03813b83          	ld	s7,56(sp)$/;"	l
b10	user/mkdir.asm	/^ b10:	fee7e8e3          	bltu	a5,a4,b00 <free+0x5c>$/;"	l
b10	user/rm.asm	/^ b10:	fee7e8e3          	bltu	a5,a4,b00 <free+0x5c>$/;"	l
b10	user/sh.asm	/^     b10:	00048513          	mv	a0,s1$/;"	l
b10	user/stressfs.asm	/^ b10:	01013403          	ld	s0,16(sp)$/;"	l
b10	user/usertests.asm	/^     b10:	00006517          	auipc	a0,0x6$/;"	l
b10	user/wc.asm	/^ b10:	00190913          	addi	s2,s2,1$/;"	l
b10	user/zombie.asm	/^ b10:	02913423          	sd	s1,40(sp)$/;"	l
b14	user/cat.asm	/^ b14:	00813823          	sd	s0,16(sp)$/;"	l
b14	user/echo.asm	/^ b14:	00070793          	mv	a5,a4$/;"	l
b14	user/grep.asm	/^ b14:	0bb60463          	beq	a2,s11,bbc <vprintf+0x23c>$/;"	l
b14	user/grind.asm	/^     b14:	00050793          	mv	a5,a0$/;"	l
b14	user/init.asm	/^ b14:	0480006f          	j	b5c <free+0x60>$/;"	l
b14	user/kill.asm	/^ b14:	fec53823          	sd	a2,-16(a0)$/;"	l
b14	user/ln.asm	/^ b14:	0087a603          	lw	a2,8(a5)$/;"	l
b14	user/ls.asm	/^ b14:	00000693          	li	a3,0$/;"	l
b14	user/matmul.asm	/^ b14:	03013c03          	ld	s8,48(sp)$/;"	l
b14	user/mkdir.asm	/^ b14:	ff852583          	lw	a1,-8(a0)$/;"	l
b14	user/rm.asm	/^ b14:	ff852583          	lw	a1,-8(a0)$/;"	l
b14	user/sh.asm	/^     b14:	ed1ff0ef          	jal	ra,9e4 <parseline>$/;"	l
b14	user/stressfs.asm	/^ b14:	06010113          	addi	sp,sp,96$/;"	l
b14	user/usertests.asm	/^     b14:	ff050513          	addi	a0,a0,-16 # 6b00 <malloc+0x498>$/;"	l
b14	user/wc.asm	/^ b14:	00094583          	lbu	a1,0(s2)$/;"	l
b14	user/zombie.asm	/^ b14:	03213023          	sd	s2,32(sp)$/;"	l
b18	user/cat.asm	/^ b18:	02010413          	addi	s0,sp,32$/;"	l
b18	user/echo.asm	/^ b18:	fed7f8e3          	bgeu	a5,a3,b08 <free+0x50>$/;"	l
b18	user/grep.asm	/^ b18:	07800793          	li	a5,120$/;"	l
b18	user/grind.asm	/^     b18:	00158593          	addi	a1,a1,1$/;"	l
b18	user/init.asm	/^ b18:	00862703          	lw	a4,8(a2)$/;"	l
b18	user/kill.asm	/^ b18:	0087a603          	lw	a2,8(a5)$/;"	l
b18	user/ln.asm	/^ b18:	02061713          	slli	a4,a2,0x20$/;"	l
b18	user/ls.asm	/^ b18:	00a00613          	li	a2,10$/;"	l
b18	user/matmul.asm	/^ b18:	02813c83          	ld	s9,40(sp)$/;"	l
b18	user/mkdir.asm	/^ b18:	0007b603          	ld	a2,0(a5)$/;"	l
b18	user/rm.asm	/^ b18:	0007b603          	ld	a2,0(a5)$/;"	l
b18	user/sh.asm	/^     b18:	00050993          	mv	s3,a0$/;"	l
b18	user/stressfs.asm	/^ b18:	00008067          	ret$/;"	l
b18	user/usertests.asm	/^     b18:	241050ef          	jal	ra,6558 <printf>$/;"	l
b18	user/wc.asm	/^ b18:	fe0598e3          	bnez	a1,b08 <vprintf+0x318>$/;"	l
b18	user/zombie.asm	/^ b18:	01313c23          	sd	s3,24(sp)$/;"	l
b1c	user/cat.asm	/^ b1c:	00b43423          	sd	a1,8(s0)$/;"	l
b1c	user/echo.asm	/^ b1c:	0007b703          	ld	a4,0(a5)$/;"	l
b1c	user/grep.asm	/^ b1c:	faf616e3          	bne	a2,a5,ac8 <vprintf+0x148>$/;"	l
b1c	user/grind.asm	/^     b1c:	00178793          	addi	a5,a5,1$/;"	l
b1c	user/init.asm	/^ b1c:	00b705bb          	addw	a1,a4,a1$/;"	l
b1c	user/kill.asm	/^ b1c:	02061713          	slli	a4,a2,0x20$/;"	l
b1c	user/ln.asm	/^ b1c:	02075713          	srli	a4,a4,0x20$/;"	l
b1c	user/ls.asm	/^ b1c:	000ba583          	lw	a1,0(s7)$/;"	l
b1c	user/matmul.asm	/^ b1c:	02013d03          	ld	s10,32(sp)$/;"	l
b1c	user/mkdir.asm	/^ b1c:	02059713          	slli	a4,a1,0x20$/;"	l
b1c	user/rm.asm	/^ b1c:	02059713          	slli	a4,a1,0x20$/;"	l
b1c	user/sh.asm	/^     b1c:	00001617          	auipc	a2,0x1$/;"	l
b1c	user/stressfs.asm	/^ b1c:	ff010113          	addi	sp,sp,-16$/;"	l
b1c	user/usertests.asm	/^     b1c:	00100513          	li	a0,1$/;"	l
b1c	user/wc.asm	/^ b1c:	00098b93          	mv	s7,s3$/;"	l
b1c	user/zombie.asm	/^ b1c:	01413823          	sd	s4,16(sp)$/;"	l
b20	user/cat.asm	/^ b20:	00c43823          	sd	a2,16(s0)$/;"	l
b20	user/echo.asm	/^ b20:	00e6e463          	bltu	a3,a4,b28 <free+0x70>$/;"	l
b20	user/grep.asm	/^ b20:	008b8913          	addi	s2,s7,8$/;"	l
b20	user/grind.asm	/^     b20:	fff5c703          	lbu	a4,-1(a1)$/;"	l
b20	user/init.asm	/^ b20:	feb52c23          	sw	a1,-8(a0)$/;"	l
b20	user/kill.asm	/^ b20:	02075713          	srli	a4,a4,0x20$/;"	l
b20	user/ln.asm	/^ b20:	00471713          	slli	a4,a4,0x4$/;"	l
b20	user/ls.asm	/^ b20:	000b0513          	mv	a0,s6$/;"	l
b20	user/matmul.asm	/^ b20:	01813d83          	ld	s11,24(sp)$/;"	l
b20	user/mkdir.asm	/^ b20:	02075713          	srli	a4,a4,0x20$/;"	l
b20	user/rm.asm	/^ b20:	02075713          	srli	a4,a4,0x20$/;"	l
b20	user/sh.asm	/^     b20:	fb460613          	addi	a2,a2,-76 # 1ad0 <malloc+0x20c>$/;"	l
b20	user/stressfs.asm	/^ b20:	00813423          	sd	s0,8(sp)$/;"	l
b20	user/usertests.asm	/^     b20:	458050ef          	jal	ra,5f78 <exit>$/;"	l
b20	user/wc.asm	/^ b20:	00000993          	li	s3,0$/;"	l
b20	user/zombie.asm	/^ b20:	01513423          	sd	s5,8(sp)$/;"	l
b24	user/cat.asm	/^ b24:	00d43c23          	sd	a3,24(s0)$/;"	l
b24	user/echo.asm	/^ b24:	fee7e8e3          	bltu	a5,a4,b14 <free+0x5c>$/;"	l
b24	user/grep.asm	/^ b24:	00000693          	li	a3,0$/;"	l
b24	user/grind.asm	/^     b24:	fee78fa3          	sb	a4,-1(a5)$/;"	l
b24	user/init.asm	/^ b24:	0007b703          	ld	a4,0(a5)$/;"	l
b24	user/kill.asm	/^ b24:	00471713          	slli	a4,a4,0x4$/;"	l
b24	user/ln.asm	/^ b24:	00e78733          	add	a4,a5,a4$/;"	l
b24	user/ls.asm	/^ b24:	cedff0ef          	jal	ra,810 <printint>$/;"	l
b24	user/matmul.asm	/^ b24:	08010113          	addi	sp,sp,128$/;"	l
b24	user/mkdir.asm	/^ b24:	00471713          	slli	a4,a4,0x4$/;"	l
b24	user/rm.asm	/^ b24:	00471713          	slli	a4,a4,0x4$/;"	l
b24	user/sh.asm	/^     b24:	00090593          	mv	a1,s2$/;"	l
b24	user/stressfs.asm	/^ b24:	01010413          	addi	s0,sp,16$/;"	l
b24	user/usertests.asm	/^     b24:	fc010113          	addi	sp,sp,-64$/;"	l
b24	user/wc.asm	/^ b24:	d59ff06f          	j	87c <vprintf+0x8c>$/;"	l
b24	user/zombie.asm	/^ b24:	01613023          	sd	s6,0(sp)$/;"	l
b28	user/cat.asm	/^ b28:	02e43023          	sd	a4,32(s0)$/;"	l
b28	user/echo.asm	/^ b28:	ff852583          	lw	a1,-8(a0)$/;"	l
b28	user/grep.asm	/^ b28:	01000613          	li	a2,16$/;"	l
b28	user/grind.asm	/^     b28:	fe0718e3          	bnez	a4,b18 <strcpy+0x10>$/;"	l
b28	user/init.asm	/^ b28:	00073703          	ld	a4,0(a4)$/;"	l
b28	user/kill.asm	/^ b28:	00e78733          	add	a4,a5,a4$/;"	l
b28	user/ln.asm	/^ b28:	f8e68ae3          	beq	a3,a4,abc <free+0x38>$/;"	l
b28	user/ls.asm	/^ b28:	0014849b          	addiw	s1,s1,1$/;"	l
b28	user/matmul.asm	/^ b28:	00008067          	ret$/;"	l
b28	user/mkdir.asm	/^ b28:	00e68733          	add	a4,a3,a4$/;"	l
b28	user/rm.asm	/^ b28:	00e68733          	add	a4,a3,a4$/;"	l
b28	user/sh.asm	/^     b28:	00048513          	mv	a0,s1$/;"	l
b28	user/stressfs.asm	/^ b28:	ff050693          	addi	a3,a0,-16$/;"	l
b28	user/usertests.asm	/^     b28:	02113c23          	sd	ra,56(sp)$/;"	l
b28	user/wc.asm	/^ b28:	00000917          	auipc	s2,0x0$/;"	l
b28	user/zombie.asm	/^ b28:	04010413          	addi	s0,sp,64$/;"	l
b2c	user/cat.asm	/^ b2c:	02f43423          	sd	a5,40(s0)$/;"	l
b2c	user/echo.asm	/^ b2c:	0007b603          	ld	a2,0(a5)$/;"	l
b2c	user/grep.asm	/^ b2c:	000ba583          	lw	a1,0(s7)$/;"	l
b2c	user/grind.asm	/^     b2c:	00813403          	ld	s0,8(sp)$/;"	l
b2c	user/init.asm	/^ b2c:	fee53823          	sd	a4,-16(a0)$/;"	l
b2c	user/kill.asm	/^ b2c:	f8e68ae3          	beq	a3,a4,ac0 <free+0x38>$/;"	l
b2c	user/ln.asm	/^ b2c:	00d7b023          	sd	a3,0(a5)$/;"	l
b2c	user/ls.asm	/^ b2c:	00090b93          	mv	s7,s2$/;"	l
b2c	user/matmul.asm	/^ b2c:	fb010113          	addi	sp,sp,-80$/;"	l
b2c	user/mkdir.asm	/^ b2c:	f8e60ae3          	beq	a2,a4,ac0 <free+0x1c>$/;"	l
b2c	user/rm.asm	/^ b2c:	f8e60ae3          	beq	a2,a4,ac0 <free+0x1c>$/;"	l
b2c	user/sh.asm	/^     b2c:	ae5ff0ef          	jal	ra,610 <peek>$/;"	l
b2c	user/stressfs.asm	/^ b2c:	00000797          	auipc	a5,0x0$/;"	l
b2c	user/usertests.asm	/^     b2c:	02813823          	sd	s0,48(sp)$/;"	l
b2c	user/wc.asm	/^ b2c:	34090913          	addi	s2,s2,832 # e68 <malloc+0x194>$/;"	l
b2c	user/zombie.asm	/^ b2c:	02051493          	slli	s1,a0,0x20$/;"	l
b30	user/cat.asm	/^ b30:	03043823          	sd	a6,48(s0)$/;"	l
b30	user/echo.asm	/^ b30:	02059713          	slli	a4,a1,0x20$/;"	l
b30	user/grep.asm	/^ b30:	000b0513          	mv	a0,s6$/;"	l
b30	user/grind.asm	/^     b30:	01010113          	addi	sp,sp,16$/;"	l
b30	user/init.asm	/^ b30:	05c0006f          	j	b8c <free+0x90>$/;"	l
b30	user/kill.asm	/^ b30:	00d7b023          	sd	a3,0(a5)$/;"	l
b30	user/ln.asm	/^ b30:	00000717          	auipc	a4,0x0$/;"	l
b30	user/ls.asm	/^ b30:	00000993          	li	s3,0$/;"	l
b30	user/matmul.asm	/^ b30:	00113c23          	sd	ra,24(sp)$/;"	l
b30	user/mkdir.asm	/^ b30:	fec53823          	sd	a2,-16(a0)$/;"	l
b30	user/rm.asm	/^ b30:	fec53823          	sd	a2,-16(a0)$/;"	l
b30	user/sh.asm	/^     b30:	04050863          	beqz	a0,b80 <parseblock+0xbc>$/;"	l
b30	user/stressfs.asm	/^ b30:	4d47b783          	ld	a5,1236(a5) # 1000 <freep>$/;"	l
b30	user/usertests.asm	/^     b30:	02913423          	sd	s1,40(sp)$/;"	l
b30	user/wc.asm	/^ b30:	02800593          	li	a1,40$/;"	l
b30	user/zombie.asm	/^ b30:	0204d493          	srli	s1,s1,0x20$/;"	l
b34	user/cat.asm	/^ b34:	03143c23          	sd	a7,56(s0)$/;"	l
b34	user/echo.asm	/^ b34:	02075713          	srli	a4,a4,0x20$/;"	l
b34	user/grep.asm	/^ b34:	d61ff0ef          	jal	ra,894 <printint>$/;"	l
b34	user/grind.asm	/^     b34:	00008067          	ret$/;"	l
b34	user/init.asm	/^ b34:	ff852703          	lw	a4,-8(a0)$/;"	l
b34	user/kill.asm	/^ b34:	00000717          	auipc	a4,0x0$/;"	l
b34	user/ln.asm	/^ b34:	4cf73823          	sd	a5,1232(a4) # 1000 <freep>$/;"	l
b34	user/ls.asm	/^ b34:	e55ff06f          	j	988 <vprintf+0x8c>$/;"	l
b34	user/matmul.asm	/^ b34:	00813823          	sd	s0,16(sp)$/;"	l
b34	user/mkdir.asm	/^ b34:	0087a603          	lw	a2,8(a5)$/;"	l
b34	user/rm.asm	/^ b34:	0087a603          	lw	a2,8(a5)$/;"	l
b34	user/sh.asm	/^     b34:	00000693          	li	a3,0$/;"	l
b34	user/stressfs.asm	/^ b34:	0480006f          	j	b7c <free+0x60>$/;"	l
b34	user/usertests.asm	/^     b34:	03213023          	sd	s2,32(sp)$/;"	l
b34	user/wc.asm	/^ b34:	fd5ff06f          	j	b08 <vprintf+0x318>$/;"	l
b34	user/zombie.asm	/^ b34:	00f48493          	addi	s1,s1,15$/;"	l
b38	user/cat.asm	/^ b38:	00840613          	addi	a2,s0,8$/;"	l
b38	user/echo.asm	/^ b38:	00471713          	slli	a4,a4,0x4$/;"	l
b38	user/grep.asm	/^ b38:	0024849b          	addiw	s1,s1,2$/;"	l
b38	user/grind.asm	/^     b38:	ff010113          	addi	sp,sp,-16$/;"	l
b38	user/init.asm	/^ b38:	00c7063b          	addw	a2,a4,a2$/;"	l
b38	user/kill.asm	/^ b38:	4cf73623          	sd	a5,1228(a4) # 1000 <freep>$/;"	l
b38	user/ln.asm	/^ b38:	00813403          	ld	s0,8(sp)$/;"	l
b38	user/ls.asm	/^ b38:	008b8913          	addi	s2,s7,8$/;"	l
b38	user/matmul.asm	/^ b38:	02010413          	addi	s0,sp,32$/;"	l
b38	user/mkdir.asm	/^ b38:	02061713          	slli	a4,a2,0x20$/;"	l
b38	user/rm.asm	/^ b38:	02061713          	slli	a4,a2,0x20$/;"	l
b38	user/sh.asm	/^     b38:	00000613          	li	a2,0$/;"	l
b38	user/stressfs.asm	/^ b38:	00862703          	lw	a4,8(a2)$/;"	l
b38	user/usertests.asm	/^     b38:	01313c23          	sd	s3,24(sp)$/;"	l
b38	user/wc.asm	/^ b38:	00098b93          	mv	s7,s3$/;"	l
b38	user/zombie.asm	/^ b38:	0044d493          	srli	s1,s1,0x4$/;"	l
b3c	user/cat.asm	/^ b3c:	fec43423          	sd	a2,-24(s0)$/;"	l
b3c	user/echo.asm	/^ b3c:	00e68733          	add	a4,a3,a4$/;"	l
b3c	user/grep.asm	/^ b3c:	00090b93          	mv	s7,s2$/;"	l
b3c	user/grind.asm	/^     b3c:	00813423          	sd	s0,8(sp)$/;"	l
b3c	user/init.asm	/^ b3c:	00c7a423          	sw	a2,8(a5)$/;"	l
b3c	user/kill.asm	/^ b3c:	00813403          	ld	s0,8(sp)$/;"	l
b3c	user/ln.asm	/^ b3c:	01010113          	addi	sp,sp,16$/;"	l
b3c	user/ls.asm	/^ b3c:	00000693          	li	a3,0$/;"	l
b3c	user/matmul.asm	/^ b3c:	00c43023          	sd	a2,0(s0)$/;"	l
b3c	user/mkdir.asm	/^ b3c:	02075713          	srli	a4,a4,0x20$/;"	l
b3c	user/rm.asm	/^ b3c:	02075713          	srli	a4,a4,0x20$/;"	l
b3c	user/sh.asm	/^     b3c:	00090593          	mv	a1,s2$/;"	l
b3c	user/stressfs.asm	/^ b3c:	00b705bb          	addw	a1,a4,a1$/;"	l
b3c	user/usertests.asm	/^     b3c:	01413823          	sd	s4,16(sp)$/;"	l
b3c	user/wc.asm	/^ b3c:	00000993          	li	s3,0$/;"	l
b3c	user/zombie.asm	/^ b3c:	0014899b          	addiw	s3,s1,1$/;"	l
b4	user/cat.asm	/^  b4:	01213823          	sd	s2,16(sp)$/;"	l
b4	user/echo.asm	/^  b4:	00000513          	li	a0,0$/;"	l
b4	user/forktest.asm	/^  b4:	fe0498e3          	bnez	s1,a4 <forktest+0x64>$/;"	l
b4	user/grep.asm	/^  b4:	00000513          	li	a0,0$/;"	l
b4	user/grind.asm	/^      b4:	07213023          	sd	s2,96(sp)$/;"	l
b4	user/init.asm	/^  b4:	00100513          	li	a0,1$/;"	l
b4	user/kill.asm	/^  b4:	01010113          	addi	sp,sp,16$/;"	l
b4	user/ln.asm	/^  b4:	00008067          	ret$/;"	l
b4	user/ls.asm	/^  b4:	02091913          	slli	s2,s2,0x20$/;"	l
b4	user/matmul.asm	/^  b4:	0007879b          	sext.w	a5,a5$/;"	l
b4	user/mkdir.asm	/^  b4:	00050793          	mv	a5,a0$/;"	l
b4	user/rm.asm	/^  b4:	00050793          	mv	a5,a0$/;"	l
b4	user/sh.asm	/^      b4:	fff00793          	li	a5,-1$/;"	l
b4	user/stressfs.asm	/^  b4:	00001517          	auipc	a0,0x1$/;"	l
b4	user/usertests.asm	/^      b4:	bc868693          	addi	a3,a3,-1080 # cc78 <buf>$/;"	l
b4	user/wc.asm	/^  b4:	f6058593          	addi	a1,a1,-160 # 1010 <buf>$/;"	l
b4	user/zombie.asm	/^  b4:	00008067          	ret$/;"	l
b40	user/cat.asm	/^ b40:	00050593          	mv	a1,a0$/;"	l
b40	user/echo.asm	/^ b40:	f8e60ae3          	beq	a2,a4,ad4 <free+0x1c>$/;"	l
b40	user/grep.asm	/^ b40:	00000993          	li	s3,0$/;"	l
b40	user/grind.asm	/^     b40:	01010413          	addi	s0,sp,16$/;"	l
b40	user/init.asm	/^ b40:	ff053703          	ld	a4,-16(a0)$/;"	l
b40	user/kill.asm	/^ b40:	01010113          	addi	sp,sp,16$/;"	l
b40	user/ln.asm	/^ b40:	00008067          	ret$/;"	l
b40	user/ls.asm	/^ b40:	00a00613          	li	a2,10$/;"	l
b40	user/matmul.asm	/^ b40:	00d43423          	sd	a3,8(s0)$/;"	l
b40	user/mkdir.asm	/^ b40:	00471713          	slli	a4,a4,0x4$/;"	l
b40	user/rm.asm	/^ b40:	00471713          	slli	a4,a4,0x4$/;"	l
b40	user/sh.asm	/^     b40:	00048513          	mv	a0,s1$/;"	l
b40	user/stressfs.asm	/^ b40:	feb52c23          	sw	a1,-8(a0)$/;"	l
b40	user/usertests.asm	/^     b40:	01513423          	sd	s5,8(sp)$/;"	l
b40	user/wc.asm	/^ b40:	d3dff06f          	j	87c <vprintf+0x8c>$/;"	l
b40	user/zombie.asm	/^ b40:	00148493          	addi	s1,s1,1$/;"	l
b44	user/cat.asm	/^ b44:	00100513          	li	a0,1$/;"	l
b44	user/echo.asm	/^ b44:	fec53823          	sd	a2,-16(a0)$/;"	l
b44	user/grep.asm	/^ b44:	ec9ff06f          	j	a0c <vprintf+0x8c>$/;"	l
b44	user/grind.asm	/^     b44:	00054783          	lbu	a5,0(a0)$/;"	l
b44	user/init.asm	/^ b44:	00e7b023          	sd	a4,0(a5)$/;"	l
b44	user/kill.asm	/^ b44:	00008067          	ret$/;"	l
b44	user/ln.asm	/^ b44:	fc010113          	addi	sp,sp,-64$/;"	l
b44	user/ls.asm	/^ b44:	000ba583          	lw	a1,0(s7)$/;"	l
b44	user/matmul.asm	/^ b44:	00e43823          	sd	a4,16(s0)$/;"	l
b44	user/mkdir.asm	/^ b44:	00e78733          	add	a4,a5,a4$/;"	l
b44	user/rm.asm	/^ b44:	00e78733          	add	a4,a5,a4$/;"	l
b44	user/sh.asm	/^     b44:	945ff0ef          	jal	ra,488 <gettoken>$/;"	l
b44	user/stressfs.asm	/^ b44:	0007b703          	ld	a4,0(a5)$/;"	l
b44	user/usertests.asm	/^     b44:	01613023          	sd	s6,0(sp)$/;"	l
b44	user/wc.asm	/^ b44:	07813083          	ld	ra,120(sp)$/;"	l
b44	user/zombie.asm	/^ b44:	00000517          	auipc	a0,0x0$/;"	l
b48	user/cat.asm	/^ b48:	bf1ff0ef          	jal	ra,738 <vprintf>$/;"	l
b48	user/echo.asm	/^ b48:	0087a603          	lw	a2,8(a5)$/;"	l
b48	user/grep.asm	/^ b48:	008b8913          	addi	s2,s7,8$/;"	l
b48	user/grind.asm	/^     b48:	00078e63          	beqz	a5,b64 <strcmp+0x2c>$/;"	l
b48	user/init.asm	/^ b48:	0600006f          	j	ba8 <free+0xac>$/;"	l
b48	user/kill.asm	/^ b48:	fc010113          	addi	sp,sp,-64$/;"	l
b48	user/ln.asm	/^ b48:	02113c23          	sd	ra,56(sp)$/;"	l
b48	user/ls.asm	/^ b48:	000b0513          	mv	a0,s6$/;"	l
b48	user/matmul.asm	/^ b48:	00f43c23          	sd	a5,24(s0)$/;"	l
b48	user/mkdir.asm	/^ b48:	f8e68ae3          	beq	a3,a4,adc <free+0x38>$/;"	l
b48	user/rm.asm	/^ b48:	f8e68ae3          	beq	a3,a4,adc <free+0x38>$/;"	l
b48	user/sh.asm	/^     b48:	00090613          	mv	a2,s2$/;"	l
b48	user/stressfs.asm	/^ b48:	00073703          	ld	a4,0(a4)$/;"	l
b48	user/usertests.asm	/^     b48:	04010413          	addi	s0,sp,64$/;"	l
b48	user/wc.asm	/^ b48:	07013403          	ld	s0,112(sp)$/;"	l
b48	user/zombie.asm	/^ b48:	4bc53503          	ld	a0,1212(a0) # 1000 <freep>$/;"	l
b4c	user/cat.asm	/^ b4c:	01813083          	ld	ra,24(sp)$/;"	l
b4c	user/echo.asm	/^ b4c:	02061713          	slli	a4,a2,0x20$/;"	l
b4c	user/grep.asm	/^ b4c:	00100693          	li	a3,1$/;"	l
b4c	user/grind.asm	/^     b4c:	0005c703          	lbu	a4,0(a1)$/;"	l
b4c	user/init.asm	/^ b4c:	0007b703          	ld	a4,0(a5)$/;"	l
b4c	user/kill.asm	/^ b4c:	02113c23          	sd	ra,56(sp)$/;"	l
b4c	user/ln.asm	/^ b4c:	02813823          	sd	s0,48(sp)$/;"	l
b4c	user/ls.asm	/^ b4c:	cc5ff0ef          	jal	ra,810 <printint>$/;"	l
b4c	user/matmul.asm	/^ b4c:	03043023          	sd	a6,32(s0)$/;"	l
b4c	user/mkdir.asm	/^ b4c:	00d7b023          	sd	a3,0(a5)$/;"	l
b4c	user/rm.asm	/^ b4c:	00d7b023          	sd	a3,0(a5)$/;"	l
b4c	user/sh.asm	/^     b4c:	00048593          	mv	a1,s1$/;"	l
b4c	user/stressfs.asm	/^ b4c:	fee53823          	sd	a4,-16(a0)$/;"	l
b4c	user/usertests.asm	/^     b4c:	00050b13          	mv	s6,a0$/;"	l
b4c	user/wc.asm	/^ b4c:	06813483          	ld	s1,104(sp)$/;"	l
b4c	user/zombie.asm	/^ b4c:	02050e63          	beqz	a0,b88 <malloc+0x84>$/;"	l
b50	user/cat.asm	/^ b50:	01013403          	ld	s0,16(sp)$/;"	l
b50	user/echo.asm	/^ b50:	02075713          	srli	a4,a4,0x20$/;"	l
b50	user/grep.asm	/^ b50:	00a00613          	li	a2,10$/;"	l
b50	user/grind.asm	/^     b50:	00f71a63          	bne	a4,a5,b64 <strcmp+0x2c>$/;"	l
b50	user/init.asm	/^ b50:	00e7e463          	bltu	a5,a4,b58 <free+0x5c>$/;"	l
b50	user/kill.asm	/^ b50:	02813823          	sd	s0,48(sp)$/;"	l
b50	user/ln.asm	/^ b50:	02913423          	sd	s1,40(sp)$/;"	l
b50	user/ls.asm	/^ b50:	0024849b          	addiw	s1,s1,2$/;"	l
b50	user/matmul.asm	/^ b50:	03143423          	sd	a7,40(s0)$/;"	l
b50	user/mkdir.asm	/^ b50:	00000717          	auipc	a4,0x0$/;"	l
b50	user/rm.asm	/^ b50:	00000717          	auipc	a4,0x0$/;"	l
b50	user/sh.asm	/^     b50:	00098513          	mv	a0,s3$/;"	l
b50	user/stressfs.asm	/^ b50:	05c0006f          	j	bac <free+0x90>$/;"	l
b50	user/usertests.asm	/^     b50:	20200593          	li	a1,514$/;"	l
b50	user/wc.asm	/^ b50:	06013903          	ld	s2,96(sp)$/;"	l
b50	user/zombie.asm	/^ b50:	00053783          	ld	a5,0(a0)$/;"	l
b54	user/cat.asm	/^ b54:	06010113          	addi	sp,sp,96$/;"	l
b54	user/echo.asm	/^ b54:	00471713          	slli	a4,a4,0x4$/;"	l
b54	user/grep.asm	/^ b54:	000ba583          	lw	a1,0(s7)$/;"	l
b54	user/grind.asm	/^     b54:	00150513          	addi	a0,a0,1$/;"	l
b54	user/init.asm	/^ b54:	00e6ec63          	bltu	a3,a4,b6c <free+0x70>$/;"	l
b54	user/kill.asm	/^ b54:	02913423          	sd	s1,40(sp)$/;"	l
b54	user/ln.asm	/^ b54:	03213023          	sd	s2,32(sp)$/;"	l
b54	user/ls.asm	/^ b54:	00090b93          	mv	s7,s2$/;"	l
b54	user/matmul.asm	/^ b54:	fe843423          	sd	s0,-24(s0)$/;"	l
b54	user/mkdir.asm	/^ b54:	4af73823          	sd	a5,1200(a4) # 1000 <freep>$/;"	l
b54	user/rm.asm	/^ b54:	4af73823          	sd	a5,1200(a4) # 1000 <freep>$/;"	l
b54	user/sh.asm	/^     b54:	b59ff0ef          	jal	ra,6ac <parseredirs>$/;"	l
b54	user/stressfs.asm	/^ b54:	ff852703          	lw	a4,-8(a0)$/;"	l
b54	user/usertests.asm	/^     b54:	00006517          	auipc	a0,0x6$/;"	l
b54	user/wc.asm	/^ b54:	05813983          	ld	s3,88(sp)$/;"	l
b54	user/zombie.asm	/^ b54:	0087a703          	lw	a4,8(a5)$/;"	l
b58	user/cat.asm	/^ b58:	00008067          	ret$/;"	l
b58	user/echo.asm	/^ b58:	00e78733          	add	a4,a5,a4$/;"	l
b58	user/grep.asm	/^ b58:	000b0513          	mv	a0,s6$/;"	l
b58	user/grind.asm	/^     b58:	00158593          	addi	a1,a1,1$/;"	l
b58	user/init.asm	/^ b58:	00070793          	mv	a5,a4$/;"	l
b58	user/kill.asm	/^ b58:	03213023          	sd	s2,32(sp)$/;"	l
b58	user/ln.asm	/^ b58:	01313c23          	sd	s3,24(sp)$/;"	l
b58	user/ls.asm	/^ b58:	00000993          	li	s3,0$/;"	l
b58	user/matmul.asm	/^ b58:	00040613          	mv	a2,s0$/;"	l
b58	user/mkdir.asm	/^ b58:	00813403          	ld	s0,8(sp)$/;"	l
b58	user/rm.asm	/^ b58:	00813403          	ld	s0,8(sp)$/;"	l
b58	user/sh.asm	/^     b58:	02813083          	ld	ra,40(sp)$/;"	l
b58	user/stressfs.asm	/^ b58:	00c7063b          	addw	a2,a4,a2$/;"	l
b58	user/usertests.asm	/^     b58:	fcc50513          	addi	a0,a0,-52 # 6b20 <malloc+0x4b8>$/;"	l
b58	user/wc.asm	/^ b58:	05013a03          	ld	s4,80(sp)$/;"	l
b58	user/zombie.asm	/^ b58:	04977663          	bgeu	a4,s1,ba4 <malloc+0xa0>$/;"	l
b5c	user/cat.asm	/^ b5c:	ff010113          	addi	sp,sp,-16$/;"	l
b5c	user/echo.asm	/^ b5c:	f8e68ae3          	beq	a3,a4,af0 <free+0x38>$/;"	l
b5c	user/grep.asm	/^ b5c:	d39ff0ef          	jal	ra,894 <printint>$/;"	l
b5c	user/grind.asm	/^     b5c:	00054783          	lbu	a5,0(a0)$/;"	l
b5c	user/init.asm	/^ b5c:	fed7f8e3          	bgeu	a5,a3,b4c <free+0x50>$/;"	l
b5c	user/kill.asm	/^ b5c:	01313c23          	sd	s3,24(sp)$/;"	l
b5c	user/ln.asm	/^ b5c:	01413823          	sd	s4,16(sp)$/;"	l
b5c	user/ls.asm	/^ b5c:	e2dff06f          	j	988 <vprintf+0x8c>$/;"	l
b5c	user/matmul.asm	/^ b5c:	c41ff0ef          	jal	ra,79c <vprintf>$/;"	l
b5c	user/mkdir.asm	/^ b5c:	01010113          	addi	sp,sp,16$/;"	l
b5c	user/rm.asm	/^ b5c:	01010113          	addi	sp,sp,16$/;"	l
b5c	user/sh.asm	/^     b5c:	02013403          	ld	s0,32(sp)$/;"	l
b5c	user/stressfs.asm	/^ b5c:	00c7a423          	sw	a2,8(a5)$/;"	l
b5c	user/usertests.asm	/^     b5c:	47c050ef          	jal	ra,5fd8 <open>$/;"	l
b5c	user/wc.asm	/^ b5c:	04813a83          	ld	s5,72(sp)$/;"	l
b5c	user/zombie.asm	/^ b5c:	00098a13          	mv	s4,s3$/;"	l
b60	user/cat.asm	/^ b60:	00813423          	sd	s0,8(sp)$/;"	l
b60	user/echo.asm	/^ b60:	00d7b023          	sd	a3,0(a5)$/;"	l
b60	user/grep.asm	/^ b60:	0024849b          	addiw	s1,s1,2$/;"	l
b60	user/grind.asm	/^     b60:	fe0796e3          	bnez	a5,b4c <strcmp+0x14>$/;"	l
b60	user/init.asm	/^ b60:	0007b703          	ld	a4,0(a5)$/;"	l
b60	user/kill.asm	/^ b60:	01413823          	sd	s4,16(sp)$/;"	l
b60	user/ln.asm	/^ b60:	01513423          	sd	s5,8(sp)$/;"	l
b60	user/ls.asm	/^ b60:	008b8913          	addi	s2,s7,8$/;"	l
b60	user/matmul.asm	/^ b60:	01813083          	ld	ra,24(sp)$/;"	l
b60	user/mkdir.asm	/^ b60:	00008067          	ret$/;"	l
b60	user/rm.asm	/^ b60:	00008067          	ret$/;"	l
b60	user/sh.asm	/^     b60:	01813483          	ld	s1,24(sp)$/;"	l
b60	user/stressfs.asm	/^ b60:	ff053703          	ld	a4,-16(a0)$/;"	l
b60	user/usertests.asm	/^     b60:	0c054863          	bltz	a0,c30 <writetest+0x10c>$/;"	l
b60	user/wc.asm	/^ b60:	04013b03          	ld	s6,64(sp)$/;"	l
b60	user/zombie.asm	/^ b60:	0009871b          	sext.w	a4,s3$/;"	l
b64	user/cat.asm	/^ b64:	01010413          	addi	s0,sp,16$/;"	l
b64	user/echo.asm	/^ b64:	00000717          	auipc	a4,0x0$/;"	l
b64	user/grep.asm	/^ b64:	00090b93          	mv	s7,s2$/;"	l
b64	user/grind.asm	/^     b64:	0005c503          	lbu	a0,0(a1)$/;"	l
b64	user/init.asm	/^ b64:	00e6e463          	bltu	a3,a4,b6c <free+0x70>$/;"	l
b64	user/kill.asm	/^ b64:	01513423          	sd	s5,8(sp)$/;"	l
b64	user/ln.asm	/^ b64:	01613023          	sd	s6,0(sp)$/;"	l
b64	user/ls.asm	/^ b64:	00000693          	li	a3,0$/;"	l
b64	user/matmul.asm	/^ b64:	01013403          	ld	s0,16(sp)$/;"	l
b64	user/mkdir.asm	/^ b64:	fc010113          	addi	sp,sp,-64$/;"	l
b64	user/rm.asm	/^ b64:	fc010113          	addi	sp,sp,-64$/;"	l
b64	user/sh.asm	/^     b64:	01013903          	ld	s2,16(sp)$/;"	l
b64	user/stressfs.asm	/^ b64:	00e7b023          	sd	a4,0(a5)$/;"	l
b64	user/usertests.asm	/^     b64:	00050913          	mv	s2,a0$/;"	l
b64	user/wc.asm	/^ b64:	03813b83          	ld	s7,56(sp)$/;"	l
b64	user/zombie.asm	/^ b64:	000016b7          	lui	a3,0x1$/;"	l
b68	user/cat.asm	/^ b68:	ff050693          	addi	a3,a0,-16$/;"	l
b68	user/echo.asm	/^ b68:	48f73e23          	sd	a5,1180(a4) # 1000 <freep>$/;"	l
b68	user/grep.asm	/^ b68:	00000993          	li	s3,0$/;"	l
b68	user/grind.asm	/^     b68:	40a7853b          	subw	a0,a5,a0$/;"	l
b68	user/init.asm	/^ b68:	fee7e8e3          	bltu	a5,a4,b58 <free+0x5c>$/;"	l
b68	user/kill.asm	/^ b68:	01613023          	sd	s6,0(sp)$/;"	l
b68	user/ln.asm	/^ b68:	04010413          	addi	s0,sp,64$/;"	l
b68	user/ls.asm	/^ b68:	01000613          	li	a2,16$/;"	l
b68	user/matmul.asm	/^ b68:	05010113          	addi	sp,sp,80$/;"	l
b68	user/mkdir.asm	/^ b68:	02113c23          	sd	ra,56(sp)$/;"	l
b68	user/rm.asm	/^ b68:	02113c23          	sd	ra,56(sp)$/;"	l
b68	user/sh.asm	/^     b68:	00813983          	ld	s3,8(sp)$/;"	l
b68	user/stressfs.asm	/^ b68:	0600006f          	j	bc8 <free+0xac>$/;"	l
b68	user/usertests.asm	/^     b68:	00000493          	li	s1,0$/;"	l
b68	user/wc.asm	/^ b68:	03013c03          	ld	s8,48(sp)$/;"	l
b68	user/zombie.asm	/^ b68:	00d77463          	bgeu	a4,a3,b70 <malloc+0x6c>$/;"	l
b6c	user/cat.asm	/^ b6c:	00000797          	auipc	a5,0x0$/;"	l
b6c	user/echo.asm	/^ b6c:	00813403          	ld	s0,8(sp)$/;"	l
b6c	user/grep.asm	/^ b6c:	ea1ff06f          	j	a0c <vprintf+0x8c>$/;"	l
b6c	user/grind.asm	/^     b6c:	00813403          	ld	s0,8(sp)$/;"	l
b6c	user/init.asm	/^ b6c:	ff852583          	lw	a1,-8(a0)$/;"	l
b6c	user/kill.asm	/^ b6c:	04010413          	addi	s0,sp,64$/;"	l
b6c	user/ln.asm	/^ b6c:	02051493          	slli	s1,a0,0x20$/;"	l
b6c	user/ls.asm	/^ b6c:	000ba583          	lw	a1,0(s7)$/;"	l
b6c	user/matmul.asm	/^ b6c:	00008067          	ret$/;"	l
b6c	user/mkdir.asm	/^ b6c:	02813823          	sd	s0,48(sp)$/;"	l
b6c	user/rm.asm	/^ b6c:	02813823          	sd	s0,48(sp)$/;"	l
b6c	user/sh.asm	/^     b6c:	03010113          	addi	sp,sp,48$/;"	l
b6c	user/stressfs.asm	/^ b6c:	0007b703          	ld	a4,0(a5)$/;"	l
b6c	user/usertests.asm	/^     b6c:	00006997          	auipc	s3,0x6$/;"	l
b6c	user/wc.asm	/^ b6c:	02813c83          	ld	s9,40(sp)$/;"	l
b6c	user/zombie.asm	/^ b6c:	00001a37          	lui	s4,0x1$/;"	l
b70	user/cat.asm	/^ b70:	4947b783          	ld	a5,1172(a5) # 1000 <freep>$/;"	l
b70	user/echo.asm	/^ b70:	01010113          	addi	sp,sp,16$/;"	l
b70	user/grep.asm	/^ b70:	008b8913          	addi	s2,s7,8$/;"	l
b70	user/grind.asm	/^     b70:	01010113          	addi	sp,sp,16$/;"	l
b70	user/init.asm	/^ b70:	0007b603          	ld	a2,0(a5)$/;"	l
b70	user/kill.asm	/^ b70:	02051493          	slli	s1,a0,0x20$/;"	l
b70	user/ln.asm	/^ b70:	0204d493          	srli	s1,s1,0x20$/;"	l
b70	user/ls.asm	/^ b70:	000b0513          	mv	a0,s6$/;"	l
b70	user/matmul.asm	/^ b70:	fa010113          	addi	sp,sp,-96$/;"	l
b70	user/mkdir.asm	/^ b70:	02913423          	sd	s1,40(sp)$/;"	l
b70	user/rm.asm	/^ b70:	02913423          	sd	s1,40(sp)$/;"	l
b70	user/sh.asm	/^     b70:	00008067          	ret$/;"	l
b70	user/stressfs.asm	/^ b70:	00e7e463          	bltu	a5,a4,b78 <free+0x5c>$/;"	l
b70	user/usertests.asm	/^     b70:	fdc98993          	addi	s3,s3,-36 # 6b48 <malloc+0x4e0>$/;"	l
b70	user/wc.asm	/^ b70:	02013d03          	ld	s10,32(sp)$/;"	l
b70	user/zombie.asm	/^ b70:	000a0b1b          	sext.w	s6,s4$/;"	l
b74	user/cat.asm	/^ b74:	0480006f          	j	bbc <free+0x60>$/;"	l
b74	user/echo.asm	/^ b74:	00008067          	ret$/;"	l
b74	user/grep.asm	/^ b74:	00000693          	li	a3,0$/;"	l
b74	user/grind.asm	/^     b74:	00008067          	ret$/;"	l
b74	user/init.asm	/^ b74:	02059713          	slli	a4,a1,0x20$/;"	l
b74	user/kill.asm	/^ b74:	0204d493          	srli	s1,s1,0x20$/;"	l
b74	user/ln.asm	/^ b74:	00f48493          	addi	s1,s1,15$/;"	l
b74	user/ls.asm	/^ b74:	c9dff0ef          	jal	ra,810 <printint>$/;"	l
b74	user/matmul.asm	/^ b74:	00113c23          	sd	ra,24(sp)$/;"	l
b74	user/mkdir.asm	/^ b74:	03213023          	sd	s2,32(sp)$/;"	l
b74	user/rm.asm	/^ b74:	03213023          	sd	s2,32(sp)$/;"	l
b74	user/sh.asm	/^     b74:	00001517          	auipc	a0,0x1$/;"	l
b74	user/stressfs.asm	/^ b74:	00e6ec63          	bltu	a3,a4,b8c <free+0x70>$/;"	l
b74	user/usertests.asm	/^     b74:	00006a97          	auipc	s5,0x6$/;"	l
b74	user/wc.asm	/^ b74:	01813d83          	ld	s11,24(sp)$/;"	l
b74	user/zombie.asm	/^ b74:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
b78	user/cat.asm	/^ b78:	00862703          	lw	a4,8(a2)$/;"	l
b78	user/echo.asm	/^ b78:	fc010113          	addi	sp,sp,-64$/;"	l
b78	user/grep.asm	/^ b78:	00a00613          	li	a2,10$/;"	l
b78	user/grind.asm	/^     b78:	ff010113          	addi	sp,sp,-16$/;"	l
b78	user/init.asm	/^ b78:	02075713          	srli	a4,a4,0x20$/;"	l
b78	user/kill.asm	/^ b78:	00f48493          	addi	s1,s1,15$/;"	l
b78	user/ln.asm	/^ b78:	0044d493          	srli	s1,s1,0x4$/;"	l
b78	user/ls.asm	/^ b78:	00090b93          	mv	s7,s2$/;"	l
b78	user/matmul.asm	/^ b78:	00813823          	sd	s0,16(sp)$/;"	l
b78	user/mkdir.asm	/^ b78:	01313c23          	sd	s3,24(sp)$/;"	l
b78	user/rm.asm	/^ b78:	01313c23          	sd	s3,24(sp)$/;"	l
b78	user/sh.asm	/^     b78:	f4c50513          	addi	a0,a0,-180 # 1ac0 <malloc+0x1fc>$/;"	l
b78	user/stressfs.asm	/^ b78:	00070793          	mv	a5,a4$/;"	l
b78	user/usertests.asm	/^     b78:	00ca8a93          	addi	s5,s5,12 # 6b80 <malloc+0x518>$/;"	l
b78	user/wc.asm	/^ b78:	08010113          	addi	sp,sp,128$/;"	l
b78	user/zombie.asm	/^ b78:	00000917          	auipc	s2,0x0$/;"	l
b7c	user/cat.asm	/^ b7c:	00b705bb          	addw	a1,a4,a1$/;"	l
b7c	user/echo.asm	/^ b7c:	02113c23          	sd	ra,56(sp)$/;"	l
b7c	user/grep.asm	/^ b7c:	000ba583          	lw	a1,0(s7)$/;"	l
b7c	user/grind.asm	/^     b7c:	00813423          	sd	s0,8(sp)$/;"	l
b7c	user/init.asm	/^ b7c:	00471713          	slli	a4,a4,0x4$/;"	l
b7c	user/kill.asm	/^ b7c:	0044d493          	srli	s1,s1,0x4$/;"	l
b7c	user/ln.asm	/^ b7c:	0014899b          	addiw	s3,s1,1$/;"	l
b7c	user/ls.asm	/^ b7c:	00000993          	li	s3,0$/;"	l
b7c	user/matmul.asm	/^ b7c:	02010413          	addi	s0,sp,32$/;"	l
b7c	user/mkdir.asm	/^ b7c:	01413823          	sd	s4,16(sp)$/;"	l
b7c	user/rm.asm	/^ b7c:	01413823          	sd	s4,16(sp)$/;"	l
b7c	user/sh.asm	/^     b7c:	cf8ff0ef          	jal	ra,74 <panic>$/;"	l
b7c	user/stressfs.asm	/^ b7c:	fed7f8e3          	bgeu	a5,a3,b6c <free+0x50>$/;"	l
b7c	user/usertests.asm	/^     b7c:	06400a13          	li	s4,100$/;"	l
b7c	user/wc.asm	/^ b7c:	00008067          	ret$/;"	l
b7c	user/zombie.asm	/^ b7c:	48890913          	addi	s2,s2,1160 # 1000 <freep>$/;"	l
b8	user/cat.asm	/^  b8:	01313423          	sd	s3,8(sp)$/;"	l
b8	user/echo.asm	/^  b8:	3d0000ef          	jal	ra,488 <exit>$/;"	l
b8	user/forktest.asm	/^  b8:	00000513          	li	a0,0$/;"	l
b8	user/grep.asm	/^  b8:	00068a63          	beqz	a3,cc <matchhere+0x4c>$/;"	l
b8	user/grind.asm	/^      b8:	05313c23          	sd	s3,88(sp)$/;"	l
b8	user/init.asm	/^  b8:	414000ef          	jal	ra,4cc <exit>$/;"	l
b8	user/kill.asm	/^  b8:	00008067          	ret$/;"	l
b8	user/ln.asm	/^  b8:	ff010113          	addi	sp,sp,-16$/;"	l
b8	user/ls.asm	/^  b8:	02095913          	srli	s2,s2,0x20$/;"	l
b8	user/matmul.asm	/^  b8:	00480813          	addi	a6,a6,4$/;"	l
b8	user/mkdir.asm	/^  b8:	00158593          	addi	a1,a1,1$/;"	l
b8	user/rm.asm	/^  b8:	00158593          	addi	a1,a1,1$/;"	l
b8	user/sh.asm	/^      b8:	00f50a63          	beq	a0,a5,cc <fork1+0x2c>$/;"	l
b8	user/stressfs.asm	/^  b8:	c9450513          	addi	a0,a0,-876 # d48 <malloc+0x16c>$/;"	l
b8	user/usertests.asm	/^      b8:	0007c703          	lbu	a4,0(a5)$/;"	l
b8	user/wc.asm	/^  b8:	f8843503          	ld	a0,-120(s0)$/;"	l
b8	user/zombie.asm	/^  b8:	ff010113          	addi	sp,sp,-16$/;"	l
b80	user/cat.asm	/^ b80:	feb52c23          	sw	a1,-8(a0)$/;"	l
b80	user/echo.asm	/^ b80:	02813823          	sd	s0,48(sp)$/;"	l
b80	user/grep.asm	/^ b80:	000b0513          	mv	a0,s6$/;"	l
b80	user/grind.asm	/^     b80:	01010413          	addi	s0,sp,16$/;"	l
b80	user/init.asm	/^ b80:	00e68733          	add	a4,a3,a4$/;"	l
b80	user/kill.asm	/^ b80:	0014899b          	addiw	s3,s1,1$/;"	l
b80	user/ln.asm	/^ b80:	00148493          	addi	s1,s1,1$/;"	l
b80	user/ls.asm	/^ b80:	e09ff06f          	j	988 <vprintf+0x8c>$/;"	l
b80	user/matmul.asm	/^ b80:	00b43423          	sd	a1,8(s0)$/;"	l
b80	user/mkdir.asm	/^ b80:	01513423          	sd	s5,8(sp)$/;"	l
b80	user/rm.asm	/^ b80:	01513423          	sd	s5,8(sp)$/;"	l
b80	user/sh.asm	/^     b80:	00001517          	auipc	a0,0x1$/;"	l
b80	user/stressfs.asm	/^ b80:	0007b703          	ld	a4,0(a5)$/;"	l
b80	user/usertests.asm	/^     b80:	00a00613          	li	a2,10$/;"	l
b80	user/wc.asm	/^ b80:	fb010113          	addi	sp,sp,-80$/;"	l
b80	user/zombie.asm	/^ b80:	fff00a93          	li	s5,-1$/;"	l
b84	user/cat.asm	/^ b84:	0007b703          	ld	a4,0(a5)$/;"	l
b84	user/echo.asm	/^ b84:	02913423          	sd	s1,40(sp)$/;"	l
b84	user/grep.asm	/^ b84:	d11ff0ef          	jal	ra,894 <printint>$/;"	l
b84	user/grind.asm	/^     b84:	00054783          	lbu	a5,0(a0)$/;"	l
b84	user/init.asm	/^ b84:	f8e60ae3          	beq	a2,a4,b18 <free+0x1c>$/;"	l
b84	user/kill.asm	/^ b84:	00148493          	addi	s1,s1,1$/;"	l
b84	user/ln.asm	/^ b84:	00000517          	auipc	a0,0x0$/;"	l
b84	user/ls.asm	/^ b84:	008b8913          	addi	s2,s7,8$/;"	l
b84	user/matmul.asm	/^ b84:	00c43823          	sd	a2,16(s0)$/;"	l
b84	user/mkdir.asm	/^ b84:	01613023          	sd	s6,0(sp)$/;"	l
b84	user/rm.asm	/^ b84:	01613023          	sd	s6,0(sp)$/;"	l
b84	user/sh.asm	/^     b84:	f5850513          	addi	a0,a0,-168 # 1ad8 <malloc+0x214>$/;"	l
b84	user/stressfs.asm	/^ b84:	00e6e463          	bltu	a3,a4,b8c <free+0x70>$/;"	l
b84	user/usertests.asm	/^     b84:	00098593          	mv	a1,s3$/;"	l
b84	user/wc.asm	/^ b84:	00113c23          	sd	ra,24(sp)$/;"	l
b84	user/zombie.asm	/^ b84:	0a00006f          	j	c24 <malloc+0x120>$/;"	l
b88	user/cat.asm	/^ b88:	00073703          	ld	a4,0(a4)$/;"	l
b88	user/echo.asm	/^ b88:	03213023          	sd	s2,32(sp)$/;"	l
b88	user/grep.asm	/^ b88:	00090b93          	mv	s7,s2$/;"	l
b88	user/grind.asm	/^     b88:	02078863          	beqz	a5,bb8 <strlen+0x40>$/;"	l
b88	user/init.asm	/^ b88:	fec53823          	sd	a2,-16(a0)$/;"	l
b88	user/kill.asm	/^ b88:	00000517          	auipc	a0,0x0$/;"	l
b88	user/ln.asm	/^ b88:	47c53503          	ld	a0,1148(a0) # 1000 <freep>$/;"	l
b88	user/ls.asm	/^ b88:	00000693          	li	a3,0$/;"	l
b88	user/matmul.asm	/^ b88:	00d43c23          	sd	a3,24(s0)$/;"	l
b88	user/mkdir.asm	/^ b88:	04010413          	addi	s0,sp,64$/;"	l
b88	user/rm.asm	/^ b88:	04010413          	addi	s0,sp,64$/;"	l
b88	user/sh.asm	/^     b88:	cecff0ef          	jal	ra,74 <panic>$/;"	l
b88	user/stressfs.asm	/^ b88:	fee7e8e3          	bltu	a5,a4,b78 <free+0x5c>$/;"	l
b88	user/usertests.asm	/^     b88:	00090513          	mv	a0,s2$/;"	l
b88	user/wc.asm	/^ b88:	00813823          	sd	s0,16(sp)$/;"	l
b88	user/zombie.asm	/^ b88:	00000797          	auipc	a5,0x0$/;"	l
b8c	user/cat.asm	/^ b8c:	fee53823          	sd	a4,-16(a0)$/;"	l
b8c	user/echo.asm	/^ b8c:	01313c23          	sd	s3,24(sp)$/;"	l
b8c	user/grep.asm	/^ b8c:	00000993          	li	s3,0$/;"	l
b8c	user/grind.asm	/^     b8c:	00150513          	addi	a0,a0,1$/;"	l
b8c	user/init.asm	/^ b8c:	0087a603          	lw	a2,8(a5)$/;"	l
b8c	user/kill.asm	/^ b8c:	47853503          	ld	a0,1144(a0) # 1000 <freep>$/;"	l
b8c	user/ln.asm	/^ b8c:	02050e63          	beqz	a0,bc8 <malloc+0x84>$/;"	l
b8c	user/ls.asm	/^ b8c:	01000613          	li	a2,16$/;"	l
b8c	user/matmul.asm	/^ b8c:	02e43023          	sd	a4,32(s0)$/;"	l
b8c	user/mkdir.asm	/^ b8c:	02051493          	slli	s1,a0,0x20$/;"	l
b8c	user/rm.asm	/^ b8c:	02051493          	slli	s1,a0,0x20$/;"	l
b8c	user/sh.asm	/^     b8c:	fe010113          	addi	sp,sp,-32$/;"	l
b8c	user/stressfs.asm	/^ b8c:	ff852583          	lw	a1,-8(a0)$/;"	l
b8c	user/usertests.asm	/^     b8c:	41c050ef          	jal	ra,5fa8 <write>$/;"	l
b8c	user/wc.asm	/^ b8c:	02010413          	addi	s0,sp,32$/;"	l
b8c	user/zombie.asm	/^ b8c:	48878793          	addi	a5,a5,1160 # 1010 <base>$/;"	l
b90	user/cat.asm	/^ b90:	05c0006f          	j	bec <free+0x90>$/;"	l
b90	user/echo.asm	/^ b90:	01413823          	sd	s4,16(sp)$/;"	l
b90	user/grep.asm	/^ b90:	e7dff06f          	j	a0c <vprintf+0x8c>$/;"	l
b90	user/grind.asm	/^     b90:	00050793          	mv	a5,a0$/;"	l
b90	user/init.asm	/^ b90:	02061713          	slli	a4,a2,0x20$/;"	l
b90	user/kill.asm	/^ b90:	02050e63          	beqz	a0,bcc <malloc+0x84>$/;"	l
b90	user/ln.asm	/^ b90:	00053783          	ld	a5,0(a0)$/;"	l
b90	user/ls.asm	/^ b90:	000ba583          	lw	a1,0(s7)$/;"	l
b90	user/matmul.asm	/^ b90:	02f43423          	sd	a5,40(s0)$/;"	l
b90	user/mkdir.asm	/^ b90:	0204d493          	srli	s1,s1,0x20$/;"	l
b90	user/rm.asm	/^ b90:	0204d493          	srli	s1,s1,0x20$/;"	l
b90	user/sh.asm	/^     b90:	00113c23          	sd	ra,24(sp)$/;"	l
b90	user/stressfs.asm	/^ b90:	0007b603          	ld	a2,0(a5)$/;"	l
b90	user/usertests.asm	/^     b90:	00a00793          	li	a5,10$/;"	l
b90	user/wc.asm	/^ b90:	00c43023          	sd	a2,0(s0)$/;"	l
b90	user/zombie.asm	/^ b90:	00000717          	auipc	a4,0x0$/;"	l
b94	user/cat.asm	/^ b94:	ff852703          	lw	a4,-8(a0)$/;"	l
b94	user/echo.asm	/^ b94:	01513423          	sd	s5,8(sp)$/;"	l
b94	user/grep.asm	/^ b94:	008b8913          	addi	s2,s7,8$/;"	l
b94	user/grind.asm	/^     b94:	00100693          	li	a3,1$/;"	l
b94	user/init.asm	/^ b94:	02075713          	srli	a4,a4,0x20$/;"	l
b94	user/kill.asm	/^ b94:	00053783          	ld	a5,0(a0)$/;"	l
b94	user/ln.asm	/^ b94:	0087a703          	lw	a4,8(a5)$/;"	l
b94	user/ls.asm	/^ b94:	000b0513          	mv	a0,s6$/;"	l
b94	user/matmul.asm	/^ b94:	03043823          	sd	a6,48(s0)$/;"	l
b94	user/mkdir.asm	/^ b94:	00f48493          	addi	s1,s1,15$/;"	l
b94	user/rm.asm	/^ b94:	00f48493          	addi	s1,s1,15$/;"	l
b94	user/sh.asm	/^     b94:	00813823          	sd	s0,16(sp)$/;"	l
b94	user/stressfs.asm	/^ b94:	02059713          	slli	a4,a1,0x20$/;"	l
b94	user/usertests.asm	/^     b94:	0af51a63          	bne	a0,a5,c48 <writetest+0x124>$/;"	l
b94	user/wc.asm	/^ b94:	00d43423          	sd	a3,8(s0)$/;"	l
b94	user/zombie.asm	/^ b94:	46f73823          	sd	a5,1136(a4) # 1000 <freep>$/;"	l
b98	user/cat.asm	/^ b98:	00c7063b          	addw	a2,a4,a2$/;"	l
b98	user/echo.asm	/^ b98:	01613023          	sd	s6,0(sp)$/;"	l
b98	user/grep.asm	/^ b98:	00000693          	li	a3,0$/;"	l
b98	user/grind.asm	/^     b98:	40a686bb          	subw	a3,a3,a0$/;"	l
b98	user/init.asm	/^ b98:	00471713          	slli	a4,a4,0x4$/;"	l
b98	user/kill.asm	/^ b98:	0087a703          	lw	a4,8(a5)$/;"	l
b98	user/ln.asm	/^ b98:	04977663          	bgeu	a4,s1,be4 <malloc+0xa0>$/;"	l
b98	user/ls.asm	/^ b98:	c79ff0ef          	jal	ra,810 <printint>$/;"	l
b98	user/matmul.asm	/^ b98:	03143c23          	sd	a7,56(s0)$/;"	l
b98	user/mkdir.asm	/^ b98:	0044d493          	srli	s1,s1,0x4$/;"	l
b98	user/rm.asm	/^ b98:	0044d493          	srli	s1,s1,0x4$/;"	l
b98	user/sh.asm	/^     b98:	00913423          	sd	s1,8(sp)$/;"	l
b98	user/stressfs.asm	/^ b98:	02075713          	srli	a4,a4,0x20$/;"	l
b98	user/usertests.asm	/^     b98:	00a00613          	li	a2,10$/;"	l
b98	user/wc.asm	/^ b98:	00e43823          	sd	a4,16(s0)$/;"	l
b98	user/zombie.asm	/^ b98:	00f7b023          	sd	a5,0(a5)$/;"	l
b9c	user/cat.asm	/^ b9c:	00c7a423          	sw	a2,8(a5)$/;"	l
b9c	user/echo.asm	/^ b9c:	04010413          	addi	s0,sp,64$/;"	l
b9c	user/grep.asm	/^ b9c:	00a00613          	li	a2,10$/;"	l
b9c	user/grind.asm	/^     b9c:	00f6853b          	addw	a0,a3,a5$/;"	l
b9c	user/init.asm	/^ b9c:	00e78733          	add	a4,a5,a4$/;"	l
b9c	user/kill.asm	/^ b9c:	04977663          	bgeu	a4,s1,be8 <malloc+0xa0>$/;"	l
b9c	user/ln.asm	/^ b9c:	00098a13          	mv	s4,s3$/;"	l
b9c	user/ls.asm	/^ b9c:	0014849b          	addiw	s1,s1,1$/;"	l
b9c	user/matmul.asm	/^ b9c:	00840613          	addi	a2,s0,8$/;"	l
b9c	user/mkdir.asm	/^ b9c:	0014899b          	addiw	s3,s1,1$/;"	l
b9c	user/rm.asm	/^ b9c:	0014899b          	addiw	s3,s1,1$/;"	l
b9c	user/sh.asm	/^     b9c:	02010413          	addi	s0,sp,32$/;"	l
b9c	user/stressfs.asm	/^ b9c:	00471713          	slli	a4,a4,0x4$/;"	l
b9c	user/usertests.asm	/^     b9c:	000a8593          	mv	a1,s5$/;"	l
b9c	user/wc.asm	/^ b9c:	00f43c23          	sd	a5,24(s0)$/;"	l
b9c	user/zombie.asm	/^ b9c:	0007a423          	sw	zero,8(a5)$/;"	l
ba0	user/cat.asm	/^ ba0:	ff053703          	ld	a4,-16(a0)$/;"	l
ba0	user/echo.asm	/^ ba0:	02051493          	slli	s1,a0,0x20$/;"	l
ba0	user/grep.asm	/^ ba0:	000ba583          	lw	a1,0(s7)$/;"	l
ba0	user/grind.asm	/^     ba0:	00178793          	addi	a5,a5,1$/;"	l
ba0	user/init.asm	/^ ba0:	f8e68ae3          	beq	a3,a4,b34 <free+0x38>$/;"	l
ba0	user/kill.asm	/^ ba0:	00098a13          	mv	s4,s3$/;"	l
ba0	user/ln.asm	/^ ba0:	0009871b          	sext.w	a4,s3$/;"	l
ba0	user/ls.asm	/^ ba0:	00090b93          	mv	s7,s2$/;"	l
ba0	user/matmul.asm	/^ ba0:	fec43423          	sd	a2,-24(s0)$/;"	l
ba0	user/mkdir.asm	/^ ba0:	00148493          	addi	s1,s1,1$/;"	l
ba0	user/rm.asm	/^ ba0:	00148493          	addi	s1,s1,1$/;"	l
ba0	user/sh.asm	/^     ba0:	00050493          	mv	s1,a0$/;"	l
ba0	user/stressfs.asm	/^ ba0:	00e68733          	add	a4,a3,a4$/;"	l
ba0	user/usertests.asm	/^     ba0:	00090513          	mv	a0,s2$/;"	l
ba0	user/wc.asm	/^ ba0:	03043023          	sd	a6,32(s0)$/;"	l
ba0	user/zombie.asm	/^ ba0:	fbdff06f          	j	b5c <malloc+0x58>$/;"	l
ba4	user/cat.asm	/^ ba4:	00e7b023          	sd	a4,0(a5)$/;"	l
ba4	user/echo.asm	/^ ba4:	0204d493          	srli	s1,s1,0x20$/;"	l
ba4	user/grep.asm	/^ ba4:	000b0513          	mv	a0,s6$/;"	l
ba4	user/grind.asm	/^     ba4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
ba4	user/init.asm	/^ ba4:	00d7b023          	sd	a3,0(a5)$/;"	l
ba4	user/kill.asm	/^ ba4:	0009871b          	sext.w	a4,s3$/;"	l
ba4	user/ln.asm	/^ ba4:	000016b7          	lui	a3,0x1$/;"	l
ba4	user/ls.asm	/^ ba4:	00000993          	li	s3,0$/;"	l
ba4	user/matmul.asm	/^ ba4:	00050593          	mv	a1,a0$/;"	l
ba4	user/mkdir.asm	/^ ba4:	00000517          	auipc	a0,0x0$/;"	l
ba4	user/rm.asm	/^ ba4:	00000517          	auipc	a0,0x0$/;"	l
ba4	user/sh.asm	/^     ba4:	06050263          	beqz	a0,c08 <nulterminate+0x7c>$/;"	l
ba4	user/stressfs.asm	/^ ba4:	f8e60ae3          	beq	a2,a4,b38 <free+0x1c>$/;"	l
ba4	user/usertests.asm	/^     ba4:	404050ef          	jal	ra,5fa8 <write>$/;"	l
ba4	user/wc.asm	/^ ba4:	03143423          	sd	a7,40(s0)$/;"	l
ba4	user/zombie.asm	/^ ba4:	04e48a63          	beq	s1,a4,bf8 <malloc+0xf4>$/;"	l
ba8	user/cat.asm	/^ ba8:	0600006f          	j	c08 <free+0xac>$/;"	l
ba8	user/echo.asm	/^ ba8:	00f48493          	addi	s1,s1,15$/;"	l
ba8	user/grep.asm	/^ ba8:	cedff0ef          	jal	ra,894 <printint>$/;"	l
ba8	user/grind.asm	/^     ba8:	fe071ae3          	bnez	a4,b9c <strlen+0x24>$/;"	l
ba8	user/init.asm	/^ ba8:	00000717          	auipc	a4,0x0$/;"	l
ba8	user/kill.asm	/^ ba8:	000016b7          	lui	a3,0x1$/;"	l
ba8	user/ln.asm	/^ ba8:	00d77463          	bgeu	a4,a3,bb0 <malloc+0x6c>$/;"	l
ba8	user/ls.asm	/^ ba8:	de1ff06f          	j	988 <vprintf+0x8c>$/;"	l
ba8	user/matmul.asm	/^ ba8:	00100513          	li	a0,1$/;"	l
ba8	user/mkdir.asm	/^ ba8:	45c53503          	ld	a0,1116(a0) # 1000 <freep>$/;"	l
ba8	user/rm.asm	/^ ba8:	45c53503          	ld	a0,1116(a0) # 1000 <freep>$/;"	l
ba8	user/sh.asm	/^     ba8:	00052703          	lw	a4,0(a0)$/;"	l
ba8	user/stressfs.asm	/^ ba8:	fec53823          	sd	a2,-16(a0)$/;"	l
ba8	user/usertests.asm	/^     ba8:	00a00793          	li	a5,10$/;"	l
ba8	user/wc.asm	/^ ba8:	fe843423          	sd	s0,-24(s0)$/;"	l
ba8	user/zombie.asm	/^ ba8:	4137073b          	subw	a4,a4,s3$/;"	l
bac	user/cat.asm	/^ bac:	0007b703          	ld	a4,0(a5)$/;"	l
bac	user/echo.asm	/^ bac:	0044d493          	srli	s1,s1,0x4$/;"	l
bac	user/grep.asm	/^ bac:	0014849b          	addiw	s1,s1,1$/;"	l
bac	user/grind.asm	/^     bac:	00813403          	ld	s0,8(sp)$/;"	l
bac	user/init.asm	/^ bac:	46f73423          	sd	a5,1128(a4) # 1010 <freep>$/;"	l
bac	user/kill.asm	/^ bac:	00d77463          	bgeu	a4,a3,bb4 <malloc+0x6c>$/;"	l
bac	user/ln.asm	/^ bac:	00001a37          	lui	s4,0x1$/;"	l
bac	user/ls.asm	/^ bac:	008b8793          	addi	a5,s7,8$/;"	l
bac	user/matmul.asm	/^ bac:	bf1ff0ef          	jal	ra,79c <vprintf>$/;"	l
bac	user/mkdir.asm	/^ bac:	02050e63          	beqz	a0,be8 <malloc+0x84>$/;"	l
bac	user/rm.asm	/^ bac:	02050e63          	beqz	a0,be8 <malloc+0x84>$/;"	l
bac	user/sh.asm	/^     bac:	00500793          	li	a5,5$/;"	l
bac	user/stressfs.asm	/^ bac:	0087a603          	lw	a2,8(a5)$/;"	l
bac	user/usertests.asm	/^     bac:	0af51c63          	bne	a0,a5,c64 <writetest+0x140>$/;"	l
bac	user/wc.asm	/^ bac:	00040613          	mv	a2,s0$/;"	l
bac	user/zombie.asm	/^ bac:	00e7a423          	sw	a4,8(a5)$/;"	l
backcmd	user/sh.c	/^backcmd(struct cmd *subcmd)$/;"	f
backcmd	user/sh.c	/^struct backcmd {$/;"	s	file:
bad	kernel/kernel.asm	/^ bad:$/;"	l
badarg	user/usertests.c	/^badarg(char *s)$/;"	f
badwrite	user/usertests.c	/^badwrite(char *s)$/;"	f
balloc	kernel/fs.c	/^balloc(uint dev)$/;"	f	file:
balloc	mkfs/mkfs.c	/^balloc(int used)$/;"	f
base	user/umalloc.c	/^static Header base;$/;"	v	file:
bb0	user/cat.asm	/^ bb0:	00e7e463          	bltu	a5,a4,bb8 <free+0x5c>$/;"	l
bb0	user/echo.asm	/^ bb0:	0014899b          	addiw	s3,s1,1$/;"	l
bb0	user/grep.asm	/^ bb0:	00090b93          	mv	s7,s2$/;"	l
bb0	user/grind.asm	/^     bb0:	01010113          	addi	sp,sp,16$/;"	l
bb0	user/init.asm	/^ bb0:	00813403          	ld	s0,8(sp)$/;"	l
bb0	user/kill.asm	/^ bb0:	00001a37          	lui	s4,0x1$/;"	l
bb0	user/ln.asm	/^ bb0:	000a0b1b          	sext.w	s6,s4$/;"	l
bb0	user/ls.asm	/^ bb0:	f8f43423          	sd	a5,-120(s0)$/;"	l
bb0	user/matmul.asm	/^ bb0:	01813083          	ld	ra,24(sp)$/;"	l
bb0	user/mkdir.asm	/^ bb0:	00053783          	ld	a5,0(a0)$/;"	l
bb0	user/rm.asm	/^ bb0:	00053783          	ld	a5,0(a0)$/;"	l
bb0	user/sh.asm	/^     bb0:	04e7ec63          	bltu	a5,a4,c08 <nulterminate+0x7c>$/;"	l
bb0	user/stressfs.asm	/^ bb0:	02061713          	slli	a4,a2,0x20$/;"	l
bb0	user/usertests.asm	/^     bb0:	0014849b          	addiw	s1,s1,1$/;"	l
bb0	user/wc.asm	/^ bb0:	c41ff0ef          	jal	ra,7f0 <vprintf>$/;"	l
bb0	user/zombie.asm	/^ bb0:	02071713          	slli	a4,a4,0x20$/;"	l
bb4	user/cat.asm	/^ bb4:	00e6ec63          	bltu	a3,a4,bcc <free+0x70>$/;"	l
bb4	user/echo.asm	/^ bb4:	00148493          	addi	s1,s1,1$/;"	l
bb4	user/grep.asm	/^ bb4:	00000993          	li	s3,0$/;"	l
bb4	user/grind.asm	/^     bb4:	00008067          	ret$/;"	l
bb4	user/init.asm	/^ bb4:	01010113          	addi	sp,sp,16$/;"	l
bb4	user/kill.asm	/^ bb4:	000a0b1b          	sext.w	s6,s4$/;"	l
bb4	user/ln.asm	/^ bb4:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
bb4	user/ls.asm	/^ bb4:	000bb983          	ld	s3,0(s7)$/;"	l
bb4	user/matmul.asm	/^ bb4:	01013403          	ld	s0,16(sp)$/;"	l
bb4	user/mkdir.asm	/^ bb4:	0087a703          	lw	a4,8(a5)$/;"	l
bb4	user/rm.asm	/^ bb4:	0087a703          	lw	a4,8(a5)$/;"	l
bb4	user/sh.asm	/^     bb4:	00056783          	lwu	a5,0(a0)$/;"	l
bb4	user/stressfs.asm	/^ bb4:	02075713          	srli	a4,a4,0x20$/;"	l
bb4	user/usertests.asm	/^     bb4:	fd4496e3          	bne	s1,s4,b80 <writetest+0x5c>$/;"	l
bb4	user/wc.asm	/^ bb4:	01813083          	ld	ra,24(sp)$/;"	l
bb4	user/zombie.asm	/^ bb4:	02075713          	srli	a4,a4,0x20$/;"	l
bb8	user/cat.asm	/^ bb8:	00070793          	mv	a5,a4$/;"	l
bb8	user/echo.asm	/^ bb8:	00000517          	auipc	a0,0x0$/;"	l
bb8	user/grep.asm	/^ bb8:	e55ff06f          	j	a0c <vprintf+0x8c>$/;"	l
bb8	user/grind.asm	/^     bb8:	00000513          	li	a0,0$/;"	l
bb8	user/init.asm	/^ bb8:	00008067          	ret$/;"	l
bb8	user/kill.asm	/^ bb8:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
bb8	user/ln.asm	/^ bb8:	00000917          	auipc	s2,0x0$/;"	l
bb8	user/ls.asm	/^ bb8:	03000593          	li	a1,48$/;"	l
bb8	user/matmul.asm	/^ bb8:	06010113          	addi	sp,sp,96$/;"	l
bb8	user/mkdir.asm	/^ bb8:	04977663          	bgeu	a4,s1,c04 <malloc+0xa0>$/;"	l
bb8	user/rm.asm	/^ bb8:	04977663          	bgeu	a4,s1,c04 <malloc+0xa0>$/;"	l
bb8	user/sh.asm	/^     bb8:	00279793          	slli	a5,a5,0x2$/;"	l
bb8	user/stressfs.asm	/^ bb8:	00471713          	slli	a4,a4,0x4$/;"	l
bb8	user/usertests.asm	/^     bb8:	00090513          	mv	a0,s2$/;"	l
bb8	user/wc.asm	/^ bb8:	01013403          	ld	s0,16(sp)$/;"	l
bb8	user/zombie.asm	/^ bb8:	00471713          	slli	a4,a4,0x4$/;"	l
bbc	user/cat.asm	/^ bbc:	fed7f8e3          	bgeu	a5,a3,bac <free+0x50>$/;"	l
bbc	user/echo.asm	/^ bbc:	44853503          	ld	a0,1096(a0) # 1000 <freep>$/;"	l
bbc	user/grep.asm	/^ bbc:	008b8913          	addi	s2,s7,8$/;"	l
bbc	user/grind.asm	/^     bbc:	ff1ff06f          	j	bac <strlen+0x34>$/;"	l
bbc	user/init.asm	/^ bbc:	fc010113          	addi	sp,sp,-64$/;"	l
bbc	user/kill.asm	/^ bbc:	00000917          	auipc	s2,0x0$/;"	l
bbc	user/ln.asm	/^ bbc:	44890913          	addi	s2,s2,1096 # 1000 <freep>$/;"	l
bbc	user/ls.asm	/^ bbc:	000b0513          	mv	a0,s6$/;"	l
bbc	user/matmul.asm	/^ bbc:	00008067          	ret$/;"	l
bbc	user/mkdir.asm	/^ bbc:	00098a13          	mv	s4,s3$/;"	l
bbc	user/rm.asm	/^ bbc:	00098a13          	mv	s4,s3$/;"	l
bbc	user/sh.asm	/^     bbc:	00001717          	auipc	a4,0x1$/;"	l
bbc	user/stressfs.asm	/^ bbc:	00e78733          	add	a4,a5,a4$/;"	l
bbc	user/usertests.asm	/^     bbc:	3f8050ef          	jal	ra,5fb4 <close>$/;"	l
bbc	user/wc.asm	/^ bbc:	05010113          	addi	sp,sp,80$/;"	l
bbc	user/zombie.asm	/^ bbc:	00e787b3          	add	a5,a5,a4$/;"	l
bc	user/cat.asm	/^  bc:	01413023          	sd	s4,0(sp)$/;"	l
bc	user/echo.asm	/^  bc:	ff010113          	addi	sp,sp,-16$/;"	l
bc	user/forktest.asm	/^  bc:	468000ef          	jal	ra,524 <wait>$/;"	l
bc	user/grep.asm	/^  bc:	02e00613          	li	a2,46$/;"	l
bc	user/grind.asm	/^      bc:	05413823          	sd	s4,80(sp)$/;"	l
bc	user/init.asm	/^  bc:	00001597          	auipc	a1,0x1$/;"	l
bc	user/kill.asm	/^  bc:	ff010113          	addi	sp,sp,-16$/;"	l
bc	user/ln.asm	/^  bc:	00813423          	sd	s0,8(sp)$/;"	l
bc	user/ls.asm	/^  bc:	00e00613          	li	a2,14$/;"	l
bc	user/matmul.asm	/^  bc:	00868693          	addi	a3,a3,8$/;"	l
bc	user/mkdir.asm	/^  bc:	00178793          	addi	a5,a5,1$/;"	l
bc	user/rm.asm	/^  bc:	00178793          	addi	a5,a5,1$/;"	l
bc	user/sh.asm	/^      bc:	00813083          	ld	ra,8(sp)$/;"	l
bc	user/stressfs.asm	/^  bc:	211000ef          	jal	ra,acc <printf>$/;"	l
bc	user/usertests.asm	/^      bc:	00071863          	bnez	a4,cc <bsstest+0x24>$/;"	l
bc	user/wc.asm	/^  bc:	54c000ef          	jal	ra,608 <read>$/;"	l
bc	user/zombie.asm	/^  bc:	00813423          	sd	s0,8(sp)$/;"	l
bc0	user/cat.asm	/^ bc0:	0007b703          	ld	a4,0(a5)$/;"	l
bc0	user/echo.asm	/^ bc0:	02050e63          	beqz	a0,bfc <malloc+0x84>$/;"	l
bc0	user/grep.asm	/^ bc0:	00000693          	li	a3,0$/;"	l
bc0	user/grind.asm	/^     bc0:	ff010113          	addi	sp,sp,-16$/;"	l
bc0	user/init.asm	/^ bc0:	02113c23          	sd	ra,56(sp)$/;"	l
bc0	user/kill.asm	/^ bc0:	44490913          	addi	s2,s2,1092 # 1000 <freep>$/;"	l
bc0	user/ln.asm	/^ bc0:	fff00a93          	li	s5,-1$/;"	l
bc0	user/ls.asm	/^ bc0:	c21ff0ef          	jal	ra,7e0 <putc>$/;"	l
bc0	user/matmul.asm	/^ bc0:	ff010113          	addi	sp,sp,-16$/;"	l
bc0	user/mkdir.asm	/^ bc0:	0009871b          	sext.w	a4,s3$/;"	l
bc0	user/rm.asm	/^ bc0:	0009871b          	sext.w	a4,s3$/;"	l
bc0	user/sh.asm	/^     bc0:	f7c70713          	addi	a4,a4,-132 # 1b38 <malloc+0x274>$/;"	l
bc0	user/stressfs.asm	/^ bc0:	f8e68ae3          	beq	a3,a4,b54 <free+0x38>$/;"	l
bc0	user/usertests.asm	/^     bc0:	00000593          	li	a1,0$/;"	l
bc0	user/wc.asm	/^ bc0:	00008067          	ret$/;"	l
bc0	user/zombie.asm	/^ bc0:	0137a423          	sw	s3,8(a5)$/;"	l
bc4	user/cat.asm	/^ bc4:	00e6e463          	bltu	a3,a4,bcc <free+0x70>$/;"	l
bc4	user/echo.asm	/^ bc4:	00053783          	ld	a5,0(a0)$/;"	l
bc4	user/grep.asm	/^ bc4:	00a00613          	li	a2,10$/;"	l
bc4	user/grind.asm	/^     bc4:	00813423          	sd	s0,8(sp)$/;"	l
bc4	user/init.asm	/^ bc4:	02813823          	sd	s0,48(sp)$/;"	l
bc4	user/kill.asm	/^ bc4:	fff00a93          	li	s5,-1$/;"	l
bc4	user/ln.asm	/^ bc4:	0a00006f          	j	c64 <malloc+0x120>$/;"	l
bc4	user/ls.asm	/^ bc4:	07800593          	li	a1,120$/;"	l
bc4	user/matmul.asm	/^ bc4:	00813423          	sd	s0,8(sp)$/;"	l
bc4	user/mkdir.asm	/^ bc4:	000016b7          	lui	a3,0x1$/;"	l
bc4	user/rm.asm	/^ bc4:	000016b7          	lui	a3,0x1$/;"	l
bc4	user/sh.asm	/^     bc4:	00e787b3          	add	a5,a5,a4$/;"	l
bc4	user/stressfs.asm	/^ bc4:	00d7b023          	sd	a3,0(a5)$/;"	l
bc4	user/usertests.asm	/^     bc4:	00006517          	auipc	a0,0x6$/;"	l
bc4	user/wc.asm	/^ bc4:	fa010113          	addi	sp,sp,-96$/;"	l
bc4	user/zombie.asm	/^ bc4:	00000717          	auipc	a4,0x0$/;"	l
bc8	user/cat.asm	/^ bc8:	fee7e8e3          	bltu	a5,a4,bb8 <free+0x5c>$/;"	l
bc8	user/echo.asm	/^ bc8:	0087a703          	lw	a4,8(a5)$/;"	l
bc8	user/grep.asm	/^ bc8:	000ba583          	lw	a1,0(s7)$/;"	l
bc8	user/grind.asm	/^     bc8:	01010413          	addi	s0,sp,16$/;"	l
bc8	user/init.asm	/^ bc8:	02913423          	sd	s1,40(sp)$/;"	l
bc8	user/kill.asm	/^ bc8:	0a00006f          	j	c68 <malloc+0x120>$/;"	l
bc8	user/ln.asm	/^ bc8:	00000797          	auipc	a5,0x0$/;"	l
bc8	user/ls.asm	/^ bc8:	000b0513          	mv	a0,s6$/;"	l
bc8	user/matmul.asm	/^ bc8:	01010413          	addi	s0,sp,16$/;"	l
bc8	user/mkdir.asm	/^ bc8:	00d77463          	bgeu	a4,a3,bd0 <malloc+0x6c>$/;"	l
bc8	user/rm.asm	/^ bc8:	00d77463          	bgeu	a4,a3,bd0 <malloc+0x6c>$/;"	l
bc8	user/sh.asm	/^     bc8:	0007a783          	lw	a5,0(a5)$/;"	l
bc8	user/stressfs.asm	/^ bc8:	00000717          	auipc	a4,0x0$/;"	l
bc8	user/usertests.asm	/^     bc8:	f5c50513          	addi	a0,a0,-164 # 6b20 <malloc+0x4b8>$/;"	l
bc8	user/wc.asm	/^ bc8:	00113c23          	sd	ra,24(sp)$/;"	l
bc8	user/zombie.asm	/^ bc8:	42a73e23          	sd	a0,1084(a4) # 1000 <freep>$/;"	l
bcache	kernel/bio.c	/^} bcache;$/;"	v	typeref:struct:__anon4
bcc	user/cat.asm	/^ bcc:	ff852583          	lw	a1,-8(a0)$/;"	l
bcc	user/echo.asm	/^ bcc:	04977663          	bgeu	a4,s1,c18 <malloc+0xa0>$/;"	l
bcc	user/grep.asm	/^ bcc:	000b0513          	mv	a0,s6$/;"	l
bcc	user/grind.asm	/^     bcc:	02060463          	beqz	a2,bf4 <memset+0x34>$/;"	l
bcc	user/init.asm	/^ bcc:	03213023          	sd	s2,32(sp)$/;"	l
bcc	user/kill.asm	/^ bcc:	00000797          	auipc	a5,0x0$/;"	l
bcc	user/ln.asm	/^ bcc:	44878793          	addi	a5,a5,1096 # 1010 <base>$/;"	l
bcc	user/ls.asm	/^ bcc:	c15ff0ef          	jal	ra,7e0 <putc>$/;"	l
bcc	user/matmul.asm	/^ bcc:	ff050693          	addi	a3,a0,-16$/;"	l
bcc	user/mkdir.asm	/^ bcc:	00001a37          	lui	s4,0x1$/;"	l
bcc	user/rm.asm	/^ bcc:	00001a37          	lui	s4,0x1$/;"	l
bcc	user/sh.asm	/^     bcc:	00e787b3          	add	a5,a5,a4$/;"	l
bcc	user/stressfs.asm	/^ bcc:	42f73c23          	sd	a5,1080(a4) # 1000 <freep>$/;"	l
bcc	user/usertests.asm	/^     bcc:	40c050ef          	jal	ra,5fd8 <open>$/;"	l
bcc	user/wc.asm	/^ bcc:	00813823          	sd	s0,16(sp)$/;"	l
bcc	user/zombie.asm	/^ bcc:	01078513          	addi	a0,a5,16$/;"	l
bcmd	user/sh.asm	/^    bcmd = (struct backcmd*)cmd;$/;"	d
bd0	user/cat.asm	/^ bd0:	0007b603          	ld	a2,0(a5)$/;"	l
bd0	user/echo.asm	/^ bd0:	00098a13          	mv	s4,s3$/;"	l
bd0	user/grep.asm	/^ bd0:	cc5ff0ef          	jal	ra,894 <printint>$/;"	l
bd0	user/grind.asm	/^     bd0:	00050793          	mv	a5,a0$/;"	l
bd0	user/init.asm	/^ bd0:	01313c23          	sd	s3,24(sp)$/;"	l
bd0	user/kill.asm	/^ bd0:	44478793          	addi	a5,a5,1092 # 1010 <base>$/;"	l
bd0	user/ln.asm	/^ bd0:	00000717          	auipc	a4,0x0$/;"	l
bd0	user/ls.asm	/^ bd0:	01000913          	li	s2,16$/;"	l
bd0	user/matmul.asm	/^ bd0:	00000797          	auipc	a5,0x0$/;"	l
bd0	user/mkdir.asm	/^ bd0:	000a0b1b          	sext.w	s6,s4$/;"	l
bd0	user/rm.asm	/^ bd0:	000a0b1b          	sext.w	s6,s4$/;"	l
bd0	user/sh.asm	/^     bd0:	00078067          	jr	a5$/;"	l
bd0	user/stressfs.asm	/^ bd0:	00813403          	ld	s0,8(sp)$/;"	l
bd0	user/usertests.asm	/^     bd0:	00050493          	mv	s1,a0$/;"	l
bd0	user/wc.asm	/^ bd0:	02010413          	addi	s0,sp,32$/;"	l
bd0	user/zombie.asm	/^ bd0:	03813083          	ld	ra,56(sp)$/;"	l
bd4	user/cat.asm	/^ bd4:	02059713          	slli	a4,a1,0x20$/;"	l
bd4	user/echo.asm	/^ bd4:	0009871b          	sext.w	a4,s3$/;"	l
bd4	user/grep.asm	/^ bd4:	0024849b          	addiw	s1,s1,2$/;"	l
bd4	user/grind.asm	/^     bd4:	fff6071b          	addiw	a4,a2,-1$/;"	l
bd4	user/init.asm	/^ bd4:	01413823          	sd	s4,16(sp)$/;"	l
bd4	user/kill.asm	/^ bd4:	00000717          	auipc	a4,0x0$/;"	l
bd4	user/ln.asm	/^ bd4:	42f73823          	sd	a5,1072(a4) # 1000 <freep>$/;"	l
bd4	user/ls.asm	/^ bd4:	03c9d793          	srli	a5,s3,0x3c$/;"	l
bd4	user/matmul.asm	/^ bd4:	4307b783          	ld	a5,1072(a5) # 1000 <freep>$/;"	l
bd4	user/mkdir.asm	/^ bd4:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
bd4	user/rm.asm	/^ bd4:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
bd4	user/sh.asm	/^     bd4:	00853783          	ld	a5,8(a0)$/;"	l
bd4	user/stressfs.asm	/^ bd4:	01010113          	addi	sp,sp,16$/;"	l
bd4	user/usertests.asm	/^     bd4:	0a054663          	bltz	a0,c80 <writetest+0x15c>$/;"	l
bd4	user/wc.asm	/^ bd4:	00b43423          	sd	a1,8(s0)$/;"	l
bd4	user/zombie.asm	/^ bd4:	03013403          	ld	s0,48(sp)$/;"	l
bd8	user/cat.asm	/^ bd8:	02075713          	srli	a4,a4,0x20$/;"	l
bd8	user/echo.asm	/^ bd8:	000016b7          	lui	a3,0x1$/;"	l
bd8	user/grep.asm	/^ bd8:	00090b93          	mv	s7,s2$/;"	l
bd8	user/grind.asm	/^     bd8:	02071713          	slli	a4,a4,0x20$/;"	l
bd8	user/init.asm	/^ bd8:	01513423          	sd	s5,8(sp)$/;"	l
bd8	user/kill.asm	/^ bd8:	42f73623          	sd	a5,1068(a4) # 1000 <freep>$/;"	l
bd8	user/ln.asm	/^ bd8:	00f7b023          	sd	a5,0(a5)$/;"	l
bd8	user/ls.asm	/^ bd8:	00fc87b3          	add	a5,s9,a5$/;"	l
bd8	user/matmul.asm	/^ bd8:	0480006f          	j	c20 <free+0x60>$/;"	l
bd8	user/mkdir.asm	/^ bd8:	00000917          	auipc	s2,0x0$/;"	l
bd8	user/rm.asm	/^ bd8:	00000917          	auipc	s2,0x0$/;"	l
bd8	user/sh.asm	/^     bd8:	02078863          	beqz	a5,c08 <nulterminate+0x7c>$/;"	l
bd8	user/stressfs.asm	/^ bd8:	00008067          	ret$/;"	l
bd8	user/usertests.asm	/^     bd8:	7d000613          	li	a2,2000$/;"	l
bd8	user/wc.asm	/^ bd8:	00c43823          	sd	a2,16(s0)$/;"	l
bd8	user/zombie.asm	/^ bd8:	02813483          	ld	s1,40(sp)$/;"	l
bdc	user/cat.asm	/^ bdc:	00471713          	slli	a4,a4,0x4$/;"	l
bdc	user/echo.asm	/^ bdc:	00d77463          	bgeu	a4,a3,be4 <malloc+0x6c>$/;"	l
bdc	user/grep.asm	/^ bdc:	00000993          	li	s3,0$/;"	l
bdc	user/grind.asm	/^     bdc:	02075713          	srli	a4,a4,0x20$/;"	l
bdc	user/init.asm	/^ bdc:	01613023          	sd	s6,0(sp)$/;"	l
bdc	user/kill.asm	/^ bdc:	00f7b023          	sd	a5,0(a5)$/;"	l
bdc	user/ln.asm	/^ bdc:	0007a423          	sw	zero,8(a5)$/;"	l
bdc	user/ls.asm	/^ bdc:	0007c583          	lbu	a1,0(a5)$/;"	l
bdc	user/matmul.asm	/^ bdc:	00862703          	lw	a4,8(a2)$/;"	l
bdc	user/mkdir.asm	/^ bdc:	42890913          	addi	s2,s2,1064 # 1000 <freep>$/;"	l
bdc	user/rm.asm	/^ bdc:	42890913          	addi	s2,s2,1064 # 1000 <freep>$/;"	l
bdc	user/sh.asm	/^     bdc:	01050793          	addi	a5,a0,16$/;"	l
bdc	user/stressfs.asm	/^ bdc:	fc010113          	addi	sp,sp,-64$/;"	l
bdc	user/usertests.asm	/^     bdc:	0000c597          	auipc	a1,0xc$/;"	l
bdc	user/wc.asm	/^ bdc:	00d43c23          	sd	a3,24(s0)$/;"	l
bdc	user/zombie.asm	/^ bdc:	02013903          	ld	s2,32(sp)$/;"	l
be0	user/cat.asm	/^ be0:	00e68733          	add	a4,a3,a4$/;"	l
be0	user/echo.asm	/^ be0:	00001a37          	lui	s4,0x1$/;"	l
be0	user/grep.asm	/^ be0:	e2dff06f          	j	a0c <vprintf+0x8c>$/;"	l
be0	user/grind.asm	/^     be0:	00170713          	addi	a4,a4,1$/;"	l
be0	user/init.asm	/^ be0:	04010413          	addi	s0,sp,64$/;"	l
be0	user/kill.asm	/^ be0:	0007a423          	sw	zero,8(a5)$/;"	l
be0	user/ln.asm	/^ be0:	fbdff06f          	j	b9c <malloc+0x58>$/;"	l
be0	user/ls.asm	/^ be0:	000b0513          	mv	a0,s6$/;"	l
be0	user/matmul.asm	/^ be0:	00b705bb          	addw	a1,a4,a1$/;"	l
be0	user/mkdir.asm	/^ be0:	fff00a93          	li	s5,-1$/;"	l
be0	user/rm.asm	/^ be0:	fff00a93          	li	s5,-1$/;"	l
be0	user/sh.asm	/^     be0:	0487b703          	ld	a4,72(a5)$/;"	l
be0	user/stressfs.asm	/^ be0:	02113c23          	sd	ra,56(sp)$/;"	l
be0	user/usertests.asm	/^     be0:	09c58593          	addi	a1,a1,156 # cc78 <buf>$/;"	l
be0	user/wc.asm	/^ be0:	02e43023          	sd	a4,32(s0)$/;"	l
be0	user/zombie.asm	/^ be0:	01813983          	ld	s3,24(sp)$/;"	l
be4	user/cat.asm	/^ be4:	f8e60ae3          	beq	a2,a4,b78 <free+0x1c>$/;"	l
be4	user/echo.asm	/^ be4:	000a0b1b          	sext.w	s6,s4$/;"	l
be4	user/grep.asm	/^ be4:	008b8913          	addi	s2,s7,8$/;"	l
be4	user/grind.asm	/^     be4:	00a70733          	add	a4,a4,a0$/;"	l
be4	user/init.asm	/^ be4:	02051493          	slli	s1,a0,0x20$/;"	l
be4	user/kill.asm	/^ be4:	fbdff06f          	j	ba0 <malloc+0x58>$/;"	l
be4	user/ln.asm	/^ be4:	04e48a63          	beq	s1,a4,c38 <malloc+0xf4>$/;"	l
be4	user/ls.asm	/^ be4:	bfdff0ef          	jal	ra,7e0 <putc>$/;"	l
be4	user/matmul.asm	/^ be4:	feb52c23          	sw	a1,-8(a0)$/;"	l
be4	user/mkdir.asm	/^ be4:	0a00006f          	j	c84 <malloc+0x120>$/;"	l
be4	user/rm.asm	/^ be4:	0a00006f          	j	c84 <malloc+0x120>$/;"	l
be4	user/sh.asm	/^     be4:	00070023          	sb	zero,0(a4)$/;"	l
be4	user/stressfs.asm	/^ be4:	02813823          	sd	s0,48(sp)$/;"	l
be4	user/usertests.asm	/^     be4:	3b8050ef          	jal	ra,5f9c <read>$/;"	l
be4	user/wc.asm	/^ be4:	02f43423          	sd	a5,40(s0)$/;"	l
be4	user/zombie.asm	/^ be4:	01013a03          	ld	s4,16(sp)$/;"	l
be8	user/cat.asm	/^ be8:	fec53823          	sd	a2,-16(a0)$/;"	l
be8	user/echo.asm	/^ be8:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
be8	user/grep.asm	/^ be8:	00000693          	li	a3,0$/;"	l
be8	user/grind.asm	/^     be8:	00b78023          	sb	a1,0(a5)$/;"	l
be8	user/init.asm	/^ be8:	0204d493          	srli	s1,s1,0x20$/;"	l
be8	user/kill.asm	/^ be8:	04e48a63          	beq	s1,a4,c3c <malloc+0xf4>$/;"	l
be8	user/ln.asm	/^ be8:	4137073b          	subw	a4,a4,s3$/;"	l
be8	user/ls.asm	/^ be8:	00499993          	slli	s3,s3,0x4$/;"	l
be8	user/matmul.asm	/^ be8:	0007b703          	ld	a4,0(a5)$/;"	l
be8	user/mkdir.asm	/^ be8:	00000797          	auipc	a5,0x0$/;"	l
be8	user/rm.asm	/^ be8:	00000797          	auipc	a5,0x0$/;"	l
be8	user/sh.asm	/^     be8:	00878793          	addi	a5,a5,8$/;"	l
be8	user/stressfs.asm	/^ be8:	02913423          	sd	s1,40(sp)$/;"	l
be8	user/usertests.asm	/^     be8:	7d000793          	li	a5,2000$/;"	l
be8	user/wc.asm	/^ be8:	03043823          	sd	a6,48(s0)$/;"	l
be8	user/zombie.asm	/^ be8:	00813a83          	ld	s5,8(sp)$/;"	l
bec	user/cat.asm	/^ bec:	0087a603          	lw	a2,8(a5)$/;"	l
bec	user/echo.asm	/^ bec:	00000917          	auipc	s2,0x0$/;"	l
bec	user/grep.asm	/^ bec:	01000613          	li	a2,16$/;"	l
bec	user/grind.asm	/^     bec:	00178793          	addi	a5,a5,1$/;"	l
bec	user/init.asm	/^ bec:	00f48493          	addi	s1,s1,15$/;"	l
bec	user/kill.asm	/^ bec:	4137073b          	subw	a4,a4,s3$/;"	l
bec	user/ln.asm	/^ bec:	00e7a423          	sw	a4,8(a5)$/;"	l
bec	user/ls.asm	/^ bec:	fff9091b          	addiw	s2,s2,-1$/;"	l
bec	user/matmul.asm	/^ bec:	00073703          	ld	a4,0(a4)$/;"	l
bec	user/mkdir.asm	/^ bec:	42878793          	addi	a5,a5,1064 # 1010 <base>$/;"	l
bec	user/rm.asm	/^ bec:	42878793          	addi	a5,a5,1064 # 1010 <base>$/;"	l
bec	user/sh.asm	/^     bec:	ff87b703          	ld	a4,-8(a5)$/;"	l
bec	user/stressfs.asm	/^ bec:	03213023          	sd	s2,32(sp)$/;"	l
bec	user/usertests.asm	/^     bec:	0af51663          	bne	a0,a5,c98 <writetest+0x174>$/;"	l
bec	user/wc.asm	/^ bec:	03143c23          	sd	a7,56(s0)$/;"	l
bec	user/zombie.asm	/^ bec:	00013b03          	ld	s6,0(sp)$/;"	l
begin_op	kernel/log.c	/^begin_op(void)$/;"	f
bf0	user/cat.asm	/^ bf0:	02061713          	slli	a4,a2,0x20$/;"	l
bf0	user/echo.asm	/^ bf0:	41490913          	addi	s2,s2,1044 # 1000 <freep>$/;"	l
bf0	user/grep.asm	/^ bf0:	000ba583          	lw	a1,0(s7)$/;"	l
bf0	user/grind.asm	/^     bf0:	fee79ce3          	bne	a5,a4,be8 <memset+0x28>$/;"	l
bf0	user/init.asm	/^ bf0:	0044d493          	srli	s1,s1,0x4$/;"	l
bf0	user/kill.asm	/^ bf0:	00e7a423          	sw	a4,8(a5)$/;"	l
bf0	user/ln.asm	/^ bf0:	02071713          	slli	a4,a4,0x20$/;"	l
bf0	user/ls.asm	/^ bf0:	fe0912e3          	bnez	s2,bd4 <vprintf+0x2d8>$/;"	l
bf0	user/matmul.asm	/^ bf0:	fee53823          	sd	a4,-16(a0)$/;"	l
bf0	user/mkdir.asm	/^ bf0:	00000717          	auipc	a4,0x0$/;"	l
bf0	user/rm.asm	/^ bf0:	00000717          	auipc	a4,0x0$/;"	l
bf0	user/sh.asm	/^     bf0:	fe0718e3          	bnez	a4,be0 <nulterminate+0x54>$/;"	l
bf0	user/stressfs.asm	/^ bf0:	01313c23          	sd	s3,24(sp)$/;"	l
bf0	user/usertests.asm	/^     bf0:	00048513          	mv	a0,s1$/;"	l
bf0	user/wc.asm	/^ bf0:	00840613          	addi	a2,s0,8$/;"	l
bf0	user/zombie.asm	/^ bf0:	04010113          	addi	sp,sp,64$/;"	l
bf4	user/cat.asm	/^ bf4:	02075713          	srli	a4,a4,0x20$/;"	l
bf4	user/echo.asm	/^ bf4:	fff00a93          	li	s5,-1$/;"	l
bf4	user/grep.asm	/^ bf4:	000b0513          	mv	a0,s6$/;"	l
bf4	user/grind.asm	/^     bf4:	00813403          	ld	s0,8(sp)$/;"	l
bf4	user/init.asm	/^ bf4:	0014899b          	addiw	s3,s1,1$/;"	l
bf4	user/kill.asm	/^ bf4:	02071713          	slli	a4,a4,0x20$/;"	l
bf4	user/ln.asm	/^ bf4:	02075713          	srli	a4,a4,0x20$/;"	l
bf4	user/ls.asm	/^ bf4:	f8843b83          	ld	s7,-120(s0)$/;"	l
bf4	user/matmul.asm	/^ bf4:	05c0006f          	j	c50 <free+0x90>$/;"	l
bf4	user/mkdir.asm	/^ bf4:	40f73823          	sd	a5,1040(a4) # 1000 <freep>$/;"	l
bf4	user/rm.asm	/^ bf4:	40f73823          	sd	a5,1040(a4) # 1000 <freep>$/;"	l
bf4	user/sh.asm	/^     bf4:	0140006f          	j	c08 <nulterminate+0x7c>$/;"	l
bf4	user/stressfs.asm	/^ bf4:	01413823          	sd	s4,16(sp)$/;"	l
bf4	user/usertests.asm	/^     bf4:	3c0050ef          	jal	ra,5fb4 <close>$/;"	l
bf4	user/wc.asm	/^ bf4:	fec43423          	sd	a2,-24(s0)$/;"	l
bf4	user/zombie.asm	/^ bf4:	00008067          	ret$/;"	l
bf8	user/cat.asm	/^ bf8:	00471713          	slli	a4,a4,0x4$/;"	l
bf8	user/echo.asm	/^ bf8:	0a00006f          	j	c98 <malloc+0x120>$/;"	l
bf8	user/grep.asm	/^ bf8:	c9dff0ef          	jal	ra,894 <printint>$/;"	l
bf8	user/grind.asm	/^     bf8:	01010113          	addi	sp,sp,16$/;"	l
bf8	user/init.asm	/^ bf8:	00148493          	addi	s1,s1,1$/;"	l
bf8	user/kill.asm	/^ bf8:	02075713          	srli	a4,a4,0x20$/;"	l
bf8	user/ln.asm	/^ bf8:	00471713          	slli	a4,a4,0x4$/;"	l
bf8	user/ls.asm	/^ bf8:	00000993          	li	s3,0$/;"	l
bf8	user/matmul.asm	/^ bf8:	ff852703          	lw	a4,-8(a0)$/;"	l
bf8	user/mkdir.asm	/^ bf8:	00f7b023          	sd	a5,0(a5)$/;"	l
bf8	user/rm.asm	/^ bf8:	00f7b023          	sd	a5,0(a5)$/;"	l
bf8	user/sh.asm	/^     bf8:	00853503          	ld	a0,8(a0)$/;"	l
bf8	user/stressfs.asm	/^ bf8:	01513423          	sd	s5,8(sp)$/;"	l
bf8	user/usertests.asm	/^     bf8:	00006517          	auipc	a0,0x6$/;"	l
bf8	user/wc.asm	/^ bf8:	00050593          	mv	a1,a0$/;"	l
bf8	user/zombie.asm	/^ bf8:	0007b703          	ld	a4,0(a5)$/;"	l
bfc	user/cat.asm	/^ bfc:	00e78733          	add	a4,a5,a4$/;"	l
bfc	user/echo.asm	/^ bfc:	00000797          	auipc	a5,0x0$/;"	l
bfc	user/grep.asm	/^ bfc:	00090b93          	mv	s7,s2$/;"	l
bfc	user/grind.asm	/^     bfc:	00008067          	ret$/;"	l
bfc	user/init.asm	/^ bfc:	00000517          	auipc	a0,0x0$/;"	l
bfc	user/kill.asm	/^ bfc:	00471713          	slli	a4,a4,0x4$/;"	l
bfc	user/ln.asm	/^ bfc:	00e787b3          	add	a5,a5,a4$/;"	l
bfc	user/ls.asm	/^ bfc:	d8dff06f          	j	988 <vprintf+0x8c>$/;"	l
bfc	user/matmul.asm	/^ bfc:	00c7063b          	addw	a2,a4,a2$/;"	l
bfc	user/mkdir.asm	/^ bfc:	0007a423          	sw	zero,8(a5)$/;"	l
bfc	user/rm.asm	/^ bfc:	0007a423          	sw	zero,8(a5)$/;"	l
bfc	user/sh.asm	/^     bfc:	f91ff0ef          	jal	ra,b8c <nulterminate>$/;"	l
bfc	user/stressfs.asm	/^ bfc:	01613023          	sd	s6,0(sp)$/;"	l
bfc	user/usertests.asm	/^     bfc:	f2850513          	addi	a0,a0,-216 # 6b20 <malloc+0x4b8>$/;"	l
bfc	user/wc.asm	/^ bfc:	00100513          	li	a0,1$/;"	l
bfc	user/zombie.asm	/^ bfc:	00e53023          	sd	a4,0(a0)$/;"	l
bfree	kernel/fs.c	/^bfree(int dev, uint b)$/;"	f	file:
bget	kernel/bio.c	/^bget(uint dev, uint blockno)$/;"	f	file:
bi	kernel/kernel.asm	/^  bi = b % BPB;$/;"	d
big	user/usertests.c	/^void *big = (void*) 0xeaeb0b5b00002f5e;$/;"	v
bigargtest	user/usertests.c	/^bigargtest(char *s)$/;"	f
bigdir	user/usertests.c	/^bigdir(char *s)$/;"	f
bigfile	user/usertests.c	/^bigfile(char *s)$/;"	f
bigwrite	user/usertests.c	/^bigwrite(char *s)$/;"	f
binit	kernel/bio.c	/^binit(void)$/;"	f
block	kernel/log.c	/^  int block[LOGSIZE];$/;"	m	struct:logheader	file:
blockno	kernel/buf.h	/^  uint blockno;$/;"	m	struct:buf
bmap	kernel/fs.c	/^bmap(struct inode *ip, uint bn)$/;"	f	file:
bmapstart	kernel/fs.h	/^  uint bmapstart;    \/\/ Block number of first free map block$/;"	m	struct:superblock
bp	kernel/kernel.asm	/^    bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(dev, IBLOCK(inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, addr);$/;"	d
bp	kernel/kernel.asm	/^    bp = bread(ip->dev, ip->addrs[NDIRECT]);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, 1);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, BBLOCK(b, sb));$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(dev, bno);$/;"	d
bp	kernel/kernel.asm	/^  bp = bread(ip->dev, IBLOCK(ip->inum, sb));$/;"	d
bp	user/cat.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/echo.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grep.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/grind.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/init.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/kill.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ln.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/ls.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/matmul.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/mkdir.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/rm.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/sh.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/stressfs.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/usertests.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/wc.asm	/^  bp = (Header*)ap - 1;$/;"	d
bp	user/zombie.asm	/^  bp = (Header*)ap - 1;$/;"	d
bpin	kernel/bio.c	/^bpin(struct buf *b) {$/;"	f
bread	kernel/bio.c	/^bread(uint dev, uint blockno)$/;"	f
brelse	kernel/bio.c	/^brelse(struct buf *b)$/;"	f
bsstest	user/usertests.c	/^bsstest(char *s)$/;"	f
buf	kernel/bio.c	/^  struct buf buf[NBUF];$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
buf	kernel/buf.h	/^struct buf {$/;"	s
buf	kernel/console.c	/^  char buf[INPUT_BUF_SIZE];$/;"	m	struct:__anon3	file:
buf	user/cat.c	/^char buf[512];$/;"	v
buf	user/grep.c	/^char buf[1024];$/;"	v
buf	user/usertests.c	/^char buf[BUFSZ];$/;"	v
buf	user/wc.c	/^char buf[512];$/;"	v
bunpin	kernel/bio.c	/^bunpin(struct buf *b) {$/;"	f
bwrite	kernel/bio.c	/^bwrite(struct buf *b)$/;"	f
bzero	kernel/fs.c	/^bzero(int dev, int bno)$/;"	f	file:
c	kernel/kernel.asm	/^      c = (c == '\\r') ? '\\n' : c;$/;"	d
c	kernel/kernel.asm	/^    c = cons.buf[cons.r++ % INPUT_BUF_SIZE];$/;"	d
c	user/cat.asm	/^   c:	00913c23          	sd	s1,24(sp)$/;"	l
c	user/echo.asm	/^   c:	00913c23          	sd	s1,24(sp)$/;"	l
c	user/forktest.asm	/^   c:	00913423          	sd	s1,8(sp)$/;"	l
c	user/grep.asm	/^   c:	00913c23          	sd	s1,24(sp)$/;"	l
c	user/grind.asm	/^       c:	00053783          	ld	a5,0(a0)$/;"	l
c	user/init.asm	/^   c:	00913423          	sd	s1,8(sp)$/;"	l
c	user/initcode.asm	/^   c:	00058593          	mv	a1,a1$/;"	l
c	user/kill.asm	/^   c:	00913423          	sd	s1,8(sp)$/;"	l
c	user/ln.asm	/^   c:	00913423          	sd	s1,8(sp)$/;"	l
c	user/ls.asm	/^   c:	00913c23          	sd	s1,24(sp)$/;"	l
c	user/matmul.asm	/^   c:	05010413          	addi	s0,sp,80$/;"	l
c	user/mkdir.asm	/^   c:	00913c23          	sd	s1,24(sp)$/;"	l
c	user/rm.asm	/^   c:	00913c23          	sd	s1,24(sp)$/;"	l
c	user/sh.asm	/^       c:	00913423          	sd	s1,8(sp)$/;"	l
c	user/stressfs.asm	/^   c:	20913c23          	sd	s1,536(sp)$/;"	l
c	user/usertests.asm	/^       c:	04913423          	sd	s1,72(sp)$/;"	l
c	user/usertests.asm	/^  c = sbrk(-(sbrk(0) - oldbrk));$/;"	d
c	user/usertests.asm	/^  c = sbrk(-PGSIZE);$/;"	d
c	user/usertests.asm	/^  c = sbrk(0);$/;"	d
c	user/usertests.asm	/^  c = sbrk(1);$/;"	d
c	user/usertests.asm	/^  c = sbrk(PGSIZE);$/;"	d
c	user/wc.asm	/^   c:	06913423          	sd	s1,104(sp)$/;"	l
c	user/zombie.asm	/^   c:	01010413          	addi	s0,sp,16$/;"	l
c0	kernel/kernel.asm	/^    c0 = fmt[i+0] & 0xff;$/;"	d
c0	user/cat.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/cat.asm	/^  c0:	03010413          	addi	s0,sp,48$/;"	l
c0	user/echo.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/echo.asm	/^  c0:	00813423          	sd	s0,8(sp)$/;"	l
c0	user/forktest.asm	/^  c0:	fff00793          	li	a5,-1$/;"	l
c0	user/grep.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/grep.asm	/^  c0:	04c70863          	beq	a4,a2,110 <matchhere+0x90>$/;"	l
c0	user/grind.asm	/^      c0:	05513423          	sd	s5,72(sp)$/;"	l
c0	user/grind.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/init.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/init.asm	/^  c0:	f4458593          	addi	a1,a1,-188 # 1000 <argv>$/;"	l
c0	user/kill.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/kill.asm	/^  c0:	00813423          	sd	s0,8(sp)$/;"	l
c0	user/ln.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/ln.asm	/^  c0:	01010413          	addi	s0,sp,16$/;"	l
c0	user/ls.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/ls.asm	/^  c0:	40a6063b          	subw	a2,a2,a0$/;"	l
c0	user/matmul.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/matmul.asm	/^  c0:	fcd89ce3          	bne	a7,a3,98 <main+0x98>$/;"	l
c0	user/mkdir.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/mkdir.asm	/^  c0:	fff5c703          	lbu	a4,-1(a1)$/;"	l
c0	user/rm.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/rm.asm	/^  c0:	fff5c703          	lbu	a4,-1(a1)$/;"	l
c0	user/sh.asm	/^      c0:	00013403          	ld	s0,0(sp)$/;"	l
c0	user/sh.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/stressfs.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/stressfs.asm	/^  c0:	00000593          	li	a1,0$/;"	l
c0	user/usertests.asm	/^      c0:	00178793          	addi	a5,a5,1$/;"	l
c0	user/usertests.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/wc.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/wc.asm	/^  c0:	02a05263          	blez	a0,e4 <wc+0xe4>$/;"	l
c0	user/zombie.asm	/^    c0 = fmt[i] & 0xff;$/;"	d
c0	user/zombie.asm	/^  c0:	01010413          	addi	s0,sp,16$/;"	l
c00	user/cat.asm	/^ c00:	f8e68ae3          	beq	a3,a4,b94 <free+0x38>$/;"	l
c00	user/echo.asm	/^ c00:	41478793          	addi	a5,a5,1044 # 1010 <base>$/;"	l
c00	user/grep.asm	/^ c00:	00000993          	li	s3,0$/;"	l
c00	user/grind.asm	/^     c00:	ff010113          	addi	sp,sp,-16$/;"	l
c00	user/init.asm	/^ c00:	41453503          	ld	a0,1044(a0) # 1010 <freep>$/;"	l
c00	user/kill.asm	/^ c00:	00e787b3          	add	a5,a5,a4$/;"	l
c00	user/ln.asm	/^ c00:	0137a423          	sw	s3,8(a5)$/;"	l
c00	user/ls.asm	/^ c00:	008b8993          	addi	s3,s7,8$/;"	l
c00	user/matmul.asm	/^ c00:	00c7a423          	sw	a2,8(a5)$/;"	l
c00	user/mkdir.asm	/^ c00:	fbdff06f          	j	bbc <malloc+0x58>$/;"	l
c00	user/rm.asm	/^ c00:	fbdff06f          	j	bbc <malloc+0x58>$/;"	l
c00	user/sh.asm	/^     c00:	0184b783          	ld	a5,24(s1)$/;"	l
c00	user/stressfs.asm	/^ c00:	04010413          	addi	s0,sp,64$/;"	l
c00	user/usertests.asm	/^     c00:	3f0050ef          	jal	ra,5ff0 <unlink>$/;"	l
c00	user/wc.asm	/^ c00:	bf1ff0ef          	jal	ra,7f0 <vprintf>$/;"	l
c00	user/zombie.asm	/^ c00:	fc5ff06f          	j	bc4 <malloc+0xc0>$/;"	l
c04	user/cat.asm	/^ c04:	00d7b023          	sd	a3,0(a5)$/;"	l
c04	user/echo.asm	/^ c04:	00000717          	auipc	a4,0x0$/;"	l
c04	user/grep.asm	/^ c04:	e09ff06f          	j	a0c <vprintf+0x8c>$/;"	l
c04	user/grind.asm	/^     c04:	00813423          	sd	s0,8(sp)$/;"	l
c04	user/init.asm	/^ c04:	02050e63          	beqz	a0,c40 <malloc+0x84>$/;"	l
c04	user/kill.asm	/^ c04:	0137a423          	sw	s3,8(a5)$/;"	l
c04	user/ln.asm	/^ c04:	00000717          	auipc	a4,0x0$/;"	l
c04	user/ls.asm	/^ c04:	000bb903          	ld	s2,0(s7)$/;"	l
c04	user/matmul.asm	/^ c04:	ff053703          	ld	a4,-16(a0)$/;"	l
c04	user/mkdir.asm	/^ c04:	04e48a63          	beq	s1,a4,c58 <malloc+0xf4>$/;"	l
c04	user/rm.asm	/^ c04:	04e48a63          	beq	s1,a4,c58 <malloc+0xf4>$/;"	l
c04	user/sh.asm	/^     c04:	00078023          	sb	zero,0(a5)$/;"	l
c04	user/stressfs.asm	/^ c04:	02051493          	slli	s1,a0,0x20$/;"	l
c04	user/usertests.asm	/^     c04:	0a054663          	bltz	a0,cb0 <writetest+0x18c>$/;"	l
c04	user/wc.asm	/^ c04:	01813083          	ld	ra,24(sp)$/;"	l
c04	user/zombie.asm	/^ c04:	01652423          	sw	s6,8(a0)$/;"	l
c08	user/cat.asm	/^ c08:	00000717          	auipc	a4,0x0$/;"	l
c08	user/echo.asm	/^ c08:	3ef73e23          	sd	a5,1020(a4) # 1000 <freep>$/;"	l
c08	user/grep.asm	/^ c08:	008b8913          	addi	s2,s7,8$/;"	l
c08	user/grind.asm	/^     c08:	01010413          	addi	s0,sp,16$/;"	l
c08	user/init.asm	/^ c08:	00053783          	ld	a5,0(a0)$/;"	l
c08	user/kill.asm	/^ c08:	00000717          	auipc	a4,0x0$/;"	l
c08	user/ln.asm	/^ c08:	3ea73e23          	sd	a0,1020(a4) # 1000 <freep>$/;"	l
c08	user/ls.asm	/^ c08:	02090663          	beqz	s2,c34 <vprintf+0x338>$/;"	l
c08	user/matmul.asm	/^ c08:	00e7b023          	sd	a4,0(a5)$/;"	l
c08	user/mkdir.asm	/^ c08:	4137073b          	subw	a4,a4,s3$/;"	l
c08	user/rm.asm	/^ c08:	4137073b          	subw	a4,a4,s3$/;"	l
c08	user/sh.asm	/^     c08:	00048513          	mv	a0,s1$/;"	l
c08	user/stressfs.asm	/^ c08:	0204d493          	srli	s1,s1,0x20$/;"	l
c08	user/usertests.asm	/^     c08:	03813083          	ld	ra,56(sp)$/;"	l
c08	user/wc.asm	/^ c08:	01013403          	ld	s0,16(sp)$/;"	l
c08	user/zombie.asm	/^ c08:	01050513          	addi	a0,a0,16$/;"	l
c0c	user/cat.asm	/^ c0c:	3ef73c23          	sd	a5,1016(a4) # 1000 <freep>$/;"	l
c0c	user/echo.asm	/^ c0c:	00f7b023          	sd	a5,0(a5)$/;"	l
c0c	user/grep.asm	/^ c0c:	00000693          	li	a3,0$/;"	l
c0c	user/grind.asm	/^     c0c:	00054783          	lbu	a5,0(a0)$/;"	l
c0c	user/init.asm	/^ c0c:	0087a703          	lw	a4,8(a5)$/;"	l
c0c	user/kill.asm	/^ c0c:	3ea73c23          	sd	a0,1016(a4) # 1000 <freep>$/;"	l
c0c	user/ln.asm	/^ c0c:	01078513          	addi	a0,a5,16$/;"	l
c0c	user/ls.asm	/^ c0c:	00094583          	lbu	a1,0(s2)$/;"	l
c0c	user/matmul.asm	/^ c0c:	0600006f          	j	c6c <free+0xac>$/;"	l
c0c	user/mkdir.asm	/^ c0c:	00e7a423          	sw	a4,8(a5)$/;"	l
c0c	user/rm.asm	/^ c0c:	00e7a423          	sw	a4,8(a5)$/;"	l
c0c	user/sh.asm	/^     c0c:	01813083          	ld	ra,24(sp)$/;"	l
c0c	user/stressfs.asm	/^ c0c:	00f48493          	addi	s1,s1,15$/;"	l
c0c	user/usertests.asm	/^     c0c:	03013403          	ld	s0,48(sp)$/;"	l
c0c	user/wc.asm	/^ c0c:	06010113          	addi	sp,sp,96$/;"	l
c0c	user/zombie.asm	/^ c0c:	e39ff0ef          	jal	ra,a44 <free>$/;"	l
c1	kernel/kernel.asm	/^    c1 = c2 = 0;$/;"	d
c1	user/cat.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/echo.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/grep.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/grind.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/init.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/kill.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/ln.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/ls.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/matmul.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/mkdir.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/rm.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/sh.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/stressfs.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/usertests.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/wc.asm	/^      c1 = c2 = 0;$/;"	d
c1	user/zombie.asm	/^      c1 = c2 = 0;$/;"	d
c10	user/cat.asm	/^ c10:	00813403          	ld	s0,8(sp)$/;"	l
c10	user/echo.asm	/^ c10:	0007a423          	sw	zero,8(a5)$/;"	l
c10	user/grep.asm	/^ c10:	01000613          	li	a2,16$/;"	l
c10	user/grind.asm	/^     c10:	02078263          	beqz	a5,c34 <strchr+0x34>$/;"	l
c10	user/init.asm	/^ c10:	04977663          	bgeu	a4,s1,c5c <malloc+0xa0>$/;"	l
c10	user/kill.asm	/^ c10:	01078513          	addi	a0,a5,16$/;"	l
c10	user/ln.asm	/^ c10:	03813083          	ld	ra,56(sp)$/;"	l
c10	user/ls.asm	/^ c10:	02058a63          	beqz	a1,c44 <vprintf+0x348>$/;"	l
c10	user/matmul.asm	/^ c10:	0007b703          	ld	a4,0(a5)$/;"	l
c10	user/mkdir.asm	/^ c10:	02071713          	slli	a4,a4,0x20$/;"	l
c10	user/rm.asm	/^ c10:	02071713          	slli	a4,a4,0x20$/;"	l
c10	user/sh.asm	/^     c10:	01013403          	ld	s0,16(sp)$/;"	l
c10	user/stressfs.asm	/^ c10:	0044d493          	srli	s1,s1,0x4$/;"	l
c10	user/usertests.asm	/^     c10:	02813483          	ld	s1,40(sp)$/;"	l
c10	user/wc.asm	/^ c10:	00008067          	ret$/;"	l
c10	user/zombie.asm	/^ c10:	00093503          	ld	a0,0(s2)$/;"	l
c14	user/cat.asm	/^ c14:	01010113          	addi	sp,sp,16$/;"	l
c14	user/echo.asm	/^ c14:	fbdff06f          	j	bd0 <malloc+0x58>$/;"	l
c14	user/grep.asm	/^ c14:	000ba583          	lw	a1,0(s7)$/;"	l
c14	user/grind.asm	/^     c14:	00f58a63          	beq	a1,a5,c28 <strchr+0x28>$/;"	l
c14	user/init.asm	/^ c14:	00098a13          	mv	s4,s3$/;"	l
c14	user/kill.asm	/^ c14:	03813083          	ld	ra,56(sp)$/;"	l
c14	user/ln.asm	/^ c14:	03013403          	ld	s0,48(sp)$/;"	l
c14	user/ls.asm	/^ c14:	000b0513          	mv	a0,s6$/;"	l
c14	user/matmul.asm	/^ c14:	00e7e463          	bltu	a5,a4,c1c <free+0x5c>$/;"	l
c14	user/mkdir.asm	/^ c14:	02075713          	srli	a4,a4,0x20$/;"	l
c14	user/rm.asm	/^ c14:	02075713          	srli	a4,a4,0x20$/;"	l
c14	user/sh.asm	/^     c14:	00813483          	ld	s1,8(sp)$/;"	l
c14	user/stressfs.asm	/^ c14:	0014899b          	addiw	s3,s1,1$/;"	l
c14	user/usertests.asm	/^     c14:	02013903          	ld	s2,32(sp)$/;"	l
c14	user/wc.asm	/^ c14:	ff010113          	addi	sp,sp,-16$/;"	l
c14	user/zombie.asm	/^ c14:	fa050ee3          	beqz	a0,bd0 <malloc+0xcc>$/;"	l
c18	user/cat.asm	/^ c18:	00008067          	ret$/;"	l
c18	user/echo.asm	/^ c18:	04e48a63          	beq	s1,a4,c6c <malloc+0xf4>$/;"	l
c18	user/grep.asm	/^ c18:	000b0513          	mv	a0,s6$/;"	l
c18	user/grind.asm	/^     c18:	00150513          	addi	a0,a0,1$/;"	l
c18	user/init.asm	/^ c18:	0009871b          	sext.w	a4,s3$/;"	l
c18	user/kill.asm	/^ c18:	03013403          	ld	s0,48(sp)$/;"	l
c18	user/ln.asm	/^ c18:	02813483          	ld	s1,40(sp)$/;"	l
c18	user/ls.asm	/^ c18:	bc9ff0ef          	jal	ra,7e0 <putc>$/;"	l
c18	user/matmul.asm	/^ c18:	00e6ec63          	bltu	a3,a4,c30 <free+0x70>$/;"	l
c18	user/mkdir.asm	/^ c18:	00471713          	slli	a4,a4,0x4$/;"	l
c18	user/rm.asm	/^ c18:	00471713          	slli	a4,a4,0x4$/;"	l
c18	user/sh.asm	/^     c18:	02010113          	addi	sp,sp,32$/;"	l
c18	user/stressfs.asm	/^ c18:	00148493          	addi	s1,s1,1$/;"	l
c18	user/usertests.asm	/^     c18:	01813983          	ld	s3,24(sp)$/;"	l
c18	user/wc.asm	/^ c18:	00813423          	sd	s0,8(sp)$/;"	l
c18	user/zombie.asm	/^ c18:	00053783          	ld	a5,0(a0)$/;"	l
c1c	user/cat.asm	/^ c1c:	fc010113          	addi	sp,sp,-64$/;"	l
c1c	user/echo.asm	/^ c1c:	4137073b          	subw	a4,a4,s3$/;"	l
c1c	user/grep.asm	/^ c1c:	c79ff0ef          	jal	ra,894 <printint>$/;"	l
c1c	user/grind.asm	/^     c1c:	00054783          	lbu	a5,0(a0)$/;"	l
c1c	user/init.asm	/^ c1c:	000016b7          	lui	a3,0x1$/;"	l
c1c	user/kill.asm	/^ c1c:	02813483          	ld	s1,40(sp)$/;"	l
c1c	user/ln.asm	/^ c1c:	02013903          	ld	s2,32(sp)$/;"	l
c1c	user/ls.asm	/^ c1c:	00190913          	addi	s2,s2,1$/;"	l
c1c	user/matmul.asm	/^ c1c:	00070793          	mv	a5,a4$/;"	l
c1c	user/mkdir.asm	/^ c1c:	00e787b3          	add	a5,a5,a4$/;"	l
c1c	user/rm.asm	/^ c1c:	00e787b3          	add	a5,a5,a4$/;"	l
c1c	user/sh.asm	/^     c1c:	00008067          	ret$/;"	l
c1c	user/stressfs.asm	/^ c1c:	00000517          	auipc	a0,0x0$/;"	l
c1c	user/usertests.asm	/^     c1c:	01013a03          	ld	s4,16(sp)$/;"	l
c1c	user/wc.asm	/^ c1c:	01010413          	addi	s0,sp,16$/;"	l
c1c	user/zombie.asm	/^ c1c:	0087a703          	lw	a4,8(a5)$/;"	l
c20	user/cat.asm	/^ c20:	02113c23          	sd	ra,56(sp)$/;"	l
c20	user/echo.asm	/^ c20:	00e7a423          	sw	a4,8(a5)$/;"	l
c20	user/grep.asm	/^ c20:	0014849b          	addiw	s1,s1,1$/;"	l
c20	user/grind.asm	/^     c20:	fe079ae3          	bnez	a5,c14 <strchr+0x14>$/;"	l
c20	user/init.asm	/^ c20:	00d77463          	bgeu	a4,a3,c28 <malloc+0x6c>$/;"	l
c20	user/kill.asm	/^ c20:	02013903          	ld	s2,32(sp)$/;"	l
c20	user/ln.asm	/^ c20:	01813983          	ld	s3,24(sp)$/;"	l
c20	user/ls.asm	/^ c20:	00094583          	lbu	a1,0(s2)$/;"	l
c20	user/matmul.asm	/^ c20:	fed7f8e3          	bgeu	a5,a3,c10 <free+0x50>$/;"	l
c20	user/mkdir.asm	/^ c20:	0137a423          	sw	s3,8(a5)$/;"	l
c20	user/rm.asm	/^ c20:	0137a423          	sw	s3,8(a5)$/;"	l
c20	user/sh.asm	/^     c20:	00853503          	ld	a0,8(a0)$/;"	l
c20	user/stressfs.asm	/^ c20:	3e453503          	ld	a0,996(a0) # 1000 <freep>$/;"	l
c20	user/usertests.asm	/^     c20:	00813a83          	ld	s5,8(sp)$/;"	l
c20	user/wc.asm	/^ c20:	ff050693          	addi	a3,a0,-16$/;"	l
c20	user/zombie.asm	/^ c20:	f89772e3          	bgeu	a4,s1,ba4 <malloc+0xa0>$/;"	l
c24	user/cat.asm	/^ c24:	02813823          	sd	s0,48(sp)$/;"	l
c24	user/echo.asm	/^ c24:	02071713          	slli	a4,a4,0x20$/;"	l
c24	user/grep.asm	/^ c24:	00090b93          	mv	s7,s2$/;"	l
c24	user/grind.asm	/^     c24:	00000513          	li	a0,0$/;"	l
c24	user/init.asm	/^ c24:	00001a37          	lui	s4,0x1$/;"	l
c24	user/kill.asm	/^ c24:	01813983          	ld	s3,24(sp)$/;"	l
c24	user/ln.asm	/^ c24:	01013a03          	ld	s4,16(sp)$/;"	l
c24	user/ls.asm	/^ c24:	fe0598e3          	bnez	a1,c14 <vprintf+0x318>$/;"	l
c24	user/matmul.asm	/^ c24:	0007b703          	ld	a4,0(a5)$/;"	l
c24	user/mkdir.asm	/^ c24:	00000717          	auipc	a4,0x0$/;"	l
c24	user/rm.asm	/^ c24:	00000717          	auipc	a4,0x0$/;"	l
c24	user/sh.asm	/^     c24:	f69ff0ef          	jal	ra,b8c <nulterminate>$/;"	l
c24	user/stressfs.asm	/^ c24:	02050e63          	beqz	a0,c60 <malloc+0x84>$/;"	l
c24	user/usertests.asm	/^     c24:	00013b03          	ld	s6,0(sp)$/;"	l
c24	user/wc.asm	/^ c24:	00000797          	auipc	a5,0x0$/;"	l
c24	user/zombie.asm	/^ c24:	00093703          	ld	a4,0(s2)$/;"	l
c28	user/cat.asm	/^ c28:	02913423          	sd	s1,40(sp)$/;"	l
c28	user/echo.asm	/^ c28:	02075713          	srli	a4,a4,0x20$/;"	l
c28	user/grep.asm	/^ c28:	00000993          	li	s3,0$/;"	l
c28	user/grind.asm	/^     c28:	00813403          	ld	s0,8(sp)$/;"	l
c28	user/init.asm	/^ c28:	000a0b1b          	sext.w	s6,s4$/;"	l
c28	user/kill.asm	/^ c28:	01013a03          	ld	s4,16(sp)$/;"	l
c28	user/ln.asm	/^ c28:	00813a83          	ld	s5,8(sp)$/;"	l
c28	user/ls.asm	/^ c28:	00098b93          	mv	s7,s3$/;"	l
c28	user/matmul.asm	/^ c28:	00e6e463          	bltu	a3,a4,c30 <free+0x70>$/;"	l
c28	user/mkdir.asm	/^ c28:	3ca73e23          	sd	a0,988(a4) # 1000 <freep>$/;"	l
c28	user/rm.asm	/^ c28:	3ca73e23          	sd	a0,988(a4) # 1000 <freep>$/;"	l
c28	user/sh.asm	/^     c28:	0104b503          	ld	a0,16(s1)$/;"	l
c28	user/stressfs.asm	/^ c28:	00053783          	ld	a5,0(a0)$/;"	l
c28	user/usertests.asm	/^     c28:	04010113          	addi	sp,sp,64$/;"	l
c28	user/wc.asm	/^ c28:	3dc7b783          	ld	a5,988(a5) # 1000 <freep>$/;"	l
c28	user/zombie.asm	/^ c28:	00078513          	mv	a0,a5$/;"	l
c2c	user/cat.asm	/^ c2c:	03213023          	sd	s2,32(sp)$/;"	l
c2c	user/echo.asm	/^ c2c:	00471713          	slli	a4,a4,0x4$/;"	l
c2c	user/grep.asm	/^ c2c:	de1ff06f          	j	a0c <vprintf+0x8c>$/;"	l
c2c	user/grind.asm	/^     c2c:	01010113          	addi	sp,sp,16$/;"	l
c2c	user/init.asm	/^ c2c:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
c2c	user/kill.asm	/^ c2c:	00813a83          	ld	s5,8(sp)$/;"	l
c2c	user/ln.asm	/^ c2c:	00013b03          	ld	s6,0(sp)$/;"	l
c2c	user/ls.asm	/^ c2c:	00000993          	li	s3,0$/;"	l
c2c	user/matmul.asm	/^ c2c:	fee7e8e3          	bltu	a5,a4,c1c <free+0x5c>$/;"	l
c2c	user/mkdir.asm	/^ c2c:	01078513          	addi	a0,a5,16$/;"	l
c2c	user/rm.asm	/^ c2c:	01078513          	addi	a0,a5,16$/;"	l
c2c	user/sh.asm	/^     c2c:	f61ff0ef          	jal	ra,b8c <nulterminate>$/;"	l
c2c	user/stressfs.asm	/^ c2c:	0087a703          	lw	a4,8(a5)$/;"	l
c2c	user/usertests.asm	/^     c2c:	00008067          	ret$/;"	l
c2c	user/wc.asm	/^ c2c:	0480006f          	j	c74 <free+0x60>$/;"	l
c2c	user/zombie.asm	/^ c2c:	fef716e3          	bne	a4,a5,c18 <malloc+0x114>$/;"	l
c30	user/cat.asm	/^ c30:	01313c23          	sd	s3,24(sp)$/;"	l
c30	user/echo.asm	/^ c30:	00e787b3          	add	a5,a5,a4$/;"	l
c30	user/grep.asm	/^ c30:	008b8793          	addi	a5,s7,8$/;"	l
c30	user/grind.asm	/^     c30:	00008067          	ret$/;"	l
c30	user/init.asm	/^ c30:	00000917          	auipc	s2,0x0$/;"	l
c30	user/kill.asm	/^ c30:	00013b03          	ld	s6,0(sp)$/;"	l
c30	user/ln.asm	/^ c30:	04010113          	addi	sp,sp,64$/;"	l
c30	user/ls.asm	/^ c30:	d59ff06f          	j	988 <vprintf+0x8c>$/;"	l
c30	user/matmul.asm	/^ c30:	ff852583          	lw	a1,-8(a0)$/;"	l
c30	user/mkdir.asm	/^ c30:	03813083          	ld	ra,56(sp)$/;"	l
c30	user/rm.asm	/^ c30:	03813083          	ld	ra,56(sp)$/;"	l
c30	user/sh.asm	/^     c30:	fd9ff06f          	j	c08 <nulterminate+0x7c>$/;"	l
c30	user/stressfs.asm	/^ c30:	04977663          	bgeu	a4,s1,c7c <malloc+0xa0>$/;"	l
c30	user/usertests.asm	/^     c30:	000b0593          	mv	a1,s6$/;"	l
c30	user/wc.asm	/^ c30:	00862703          	lw	a4,8(a2)$/;"	l
c30	user/zombie.asm	/^ c30:	000a0513          	mv	a0,s4$/;"	l
c34	user/cat.asm	/^ c34:	01413823          	sd	s4,16(sp)$/;"	l
c34	user/echo.asm	/^ c34:	0137a423          	sw	s3,8(a5)$/;"	l
c34	user/grep.asm	/^ c34:	f8f43423          	sd	a5,-120(s0)$/;"	l
c34	user/grind.asm	/^     c34:	00000513          	li	a0,0$/;"	l
c34	user/init.asm	/^ c34:	3e090913          	addi	s2,s2,992 # 1010 <freep>$/;"	l
c34	user/kill.asm	/^ c34:	04010113          	addi	sp,sp,64$/;"	l
c34	user/ln.asm	/^ c34:	00008067          	ret$/;"	l
c34	user/ls.asm	/^ c34:	00000917          	auipc	s2,0x0$/;"	l
c34	user/matmul.asm	/^ c34:	0007b603          	ld	a2,0(a5)$/;"	l
c34	user/mkdir.asm	/^ c34:	03013403          	ld	s0,48(sp)$/;"	l
c34	user/rm.asm	/^ c34:	03013403          	ld	s0,48(sp)$/;"	l
c34	user/sh.asm	/^     c34:	00853503          	ld	a0,8(a0)$/;"	l
c34	user/stressfs.asm	/^ c34:	00098a13          	mv	s4,s3$/;"	l
c34	user/usertests.asm	/^     c34:	00006517          	auipc	a0,0x6$/;"	l
c34	user/wc.asm	/^ c34:	00b705bb          	addw	a1,a4,a1$/;"	l
c34	user/zombie.asm	/^ c34:	8adff0ef          	jal	ra,4e0 <sbrk>$/;"	l
c38	user/cat.asm	/^ c38:	01513423          	sd	s5,8(sp)$/;"	l
c38	user/echo.asm	/^ c38:	00000717          	auipc	a4,0x0$/;"	l
c38	user/grep.asm	/^ c38:	000bb983          	ld	s3,0(s7)$/;"	l
c38	user/grind.asm	/^     c38:	ff1ff06f          	j	c28 <strchr+0x28>$/;"	l
c38	user/init.asm	/^ c38:	fff00a93          	li	s5,-1$/;"	l
c38	user/kill.asm	/^ c38:	00008067          	ret$/;"	l
c38	user/ln.asm	/^ c38:	0007b703          	ld	a4,0(a5)$/;"	l
c38	user/ls.asm	/^ c38:	34c90913          	addi	s2,s2,844 # f80 <malloc+0x1a0>$/;"	l
c38	user/matmul.asm	/^ c38:	02059713          	slli	a4,a1,0x20$/;"	l
c38	user/mkdir.asm	/^ c38:	02813483          	ld	s1,40(sp)$/;"	l
c38	user/rm.asm	/^ c38:	02813483          	ld	s1,40(sp)$/;"	l
c38	user/sh.asm	/^     c38:	f55ff0ef          	jal	ra,b8c <nulterminate>$/;"	l
c38	user/stressfs.asm	/^ c38:	0009871b          	sext.w	a4,s3$/;"	l
c38	user/usertests.asm	/^     c38:	ef450513          	addi	a0,a0,-268 # 6b28 <malloc+0x4c0>$/;"	l
c38	user/wc.asm	/^ c38:	feb52c23          	sw	a1,-8(a0)$/;"	l
c38	user/zombie.asm	/^ c38:	fd5516e3          	bne	a0,s5,c04 <malloc+0x100>$/;"	l
c3c	user/cat.asm	/^ c3c:	01613023          	sd	s6,0(sp)$/;"	l
c3c	user/echo.asm	/^ c3c:	3ca73423          	sd	a0,968(a4) # 1000 <freep>$/;"	l
c3c	user/grep.asm	/^ c3c:	03000593          	li	a1,48$/;"	l
c3c	user/grind.asm	/^     c3c:	fa010113          	addi	sp,sp,-96$/;"	l
c3c	user/init.asm	/^ c3c:	0a00006f          	j	cdc <malloc+0x120>$/;"	l
c3c	user/kill.asm	/^ c3c:	0007b703          	ld	a4,0(a5)$/;"	l
c3c	user/ln.asm	/^ c3c:	00e53023          	sd	a4,0(a0)$/;"	l
c3c	user/ls.asm	/^ c3c:	02800593          	li	a1,40$/;"	l
c3c	user/matmul.asm	/^ c3c:	02075713          	srli	a4,a4,0x20$/;"	l
c3c	user/mkdir.asm	/^ c3c:	02013903          	ld	s2,32(sp)$/;"	l
c3c	user/rm.asm	/^ c3c:	02013903          	ld	s2,32(sp)$/;"	l
c3c	user/sh.asm	/^     c3c:	0104b503          	ld	a0,16(s1)$/;"	l
c3c	user/stressfs.asm	/^ c3c:	000016b7          	lui	a3,0x1$/;"	l
c3c	user/usertests.asm	/^     c3c:	11d050ef          	jal	ra,6558 <printf>$/;"	l
c3c	user/wc.asm	/^ c3c:	0007b703          	ld	a4,0(a5)$/;"	l
c3c	user/zombie.asm	/^ c3c:	00000513          	li	a0,0$/;"	l
c4	user/cat.asm	/^  c4:	00100793          	li	a5,1$/;"	l
c4	user/echo.asm	/^  c4:	01010413          	addi	s0,sp,16$/;"	l
c4	user/forktest.asm	/^  c4:	02f51e63          	bne	a0,a5,100 <forktest+0xc0>$/;"	l
c4	user/grep.asm	/^  c4:	00000513          	li	a0,0$/;"	l
c4	user/grind.asm	/^      c4:	05613023          	sd	s6,64(sp)$/;"	l
c4	user/init.asm	/^  c4:	00001517          	auipc	a0,0x1$/;"	l
c4	user/kill.asm	/^  c4:	01010413          	addi	s0,sp,16$/;"	l
c4	user/ln.asm	/^  c4:	00054783          	lbu	a5,0(a0)$/;"	l
c4	user/ls.asm	/^  c4:	02000593          	li	a1,32$/;"	l
c4	user/matmul.asm	/^  c4:	000f0e13          	mv	t3,t5$/;"	l
c4	user/mkdir.asm	/^  c4:	fee78fa3          	sb	a4,-1(a5)$/;"	l
c4	user/rm.asm	/^  c4:	fee78fa3          	sb	a4,-1(a5)$/;"	l
c4	user/sh.asm	/^      c4:	01010113          	addi	sp,sp,16$/;"	l
c4	user/stressfs.asm	/^  c4:	fd040513          	addi	a0,s0,-48$/;"	l
c4	user/usertests.asm	/^      c4:	fed79ae3          	bne	a5,a3,b8 <bsstest+0x10>$/;"	l
c4	user/wc.asm	/^  c4:	00001497          	auipc	s1,0x1$/;"	l
c4	user/zombie.asm	/^  c4:	00054783          	lbu	a5,0(a0)$/;"	l
c40	user/cat.asm	/^ c40:	04010413          	addi	s0,sp,64$/;"	l
c40	user/echo.asm	/^ c40:	01078513          	addi	a0,a5,16$/;"	l
c40	user/grep.asm	/^ c40:	000b0513          	mv	a0,s6$/;"	l
c40	user/grind.asm	/^     c40:	04113c23          	sd	ra,88(sp)$/;"	l
c40	user/init.asm	/^ c40:	00000797          	auipc	a5,0x0$/;"	l
c40	user/kill.asm	/^ c40:	00e53023          	sd	a4,0(a0)$/;"	l
c40	user/ln.asm	/^ c40:	fc5ff06f          	j	c04 <malloc+0xc0>$/;"	l
c40	user/ls.asm	/^ c40:	fd5ff06f          	j	c14 <vprintf+0x318>$/;"	l
c40	user/matmul.asm	/^ c40:	00471713          	slli	a4,a4,0x4$/;"	l
c40	user/mkdir.asm	/^ c40:	01813983          	ld	s3,24(sp)$/;"	l
c40	user/rm.asm	/^ c40:	01813983          	ld	s3,24(sp)$/;"	l
c40	user/sh.asm	/^     c40:	f4dff0ef          	jal	ra,b8c <nulterminate>$/;"	l
c40	user/stressfs.asm	/^ c40:	00d77463          	bgeu	a4,a3,c48 <malloc+0x6c>$/;"	l
c40	user/usertests.asm	/^     c40:	00100513          	li	a0,1$/;"	l
c40	user/wc.asm	/^ c40:	00073703          	ld	a4,0(a4)$/;"	l
c40	user/zombie.asm	/^ c40:	f91ff06f          	j	bd0 <malloc+0xcc>$/;"	l
c44	user/cat.asm	/^ c44:	02051493          	slli	s1,a0,0x20$/;"	l
c44	user/echo.asm	/^ c44:	03813083          	ld	ra,56(sp)$/;"	l
c44	user/grep.asm	/^ c44:	c21ff0ef          	jal	ra,864 <putc>$/;"	l
c44	user/grind.asm	/^     c44:	04813823          	sd	s0,80(sp)$/;"	l
c44	user/init.asm	/^ c44:	3e078793          	addi	a5,a5,992 # 1020 <base>$/;"	l
c44	user/kill.asm	/^ c44:	fc5ff06f          	j	c08 <malloc+0xc0>$/;"	l
c44	user/ln.asm	/^ c44:	01652423          	sw	s6,8(a0)$/;"	l
c44	user/ls.asm	/^ c44:	00098b93          	mv	s7,s3$/;"	l
c44	user/matmul.asm	/^ c44:	00e68733          	add	a4,a3,a4$/;"	l
c44	user/mkdir.asm	/^ c44:	01013a03          	ld	s4,16(sp)$/;"	l
c44	user/rm.asm	/^ c44:	01013a03          	ld	s4,16(sp)$/;"	l
c44	user/sh.asm	/^     c44:	fc5ff06f          	j	c08 <nulterminate+0x7c>$/;"	l
c44	user/stressfs.asm	/^ c44:	00001a37          	lui	s4,0x1$/;"	l
c44	user/usertests.asm	/^     c44:	334050ef          	jal	ra,5f78 <exit>$/;"	l
c44	user/wc.asm	/^ c44:	fee53823          	sd	a4,-16(a0)$/;"	l
c48	user/cat.asm	/^ c48:	0204d493          	srli	s1,s1,0x20$/;"	l
c48	user/echo.asm	/^ c48:	03013403          	ld	s0,48(sp)$/;"	l
c48	user/grep.asm	/^ c48:	07800593          	li	a1,120$/;"	l
c48	user/grind.asm	/^     c48:	04913423          	sd	s1,72(sp)$/;"	l
c48	user/init.asm	/^ c48:	00000717          	auipc	a4,0x0$/;"	l
c48	user/kill.asm	/^ c48:	01652423          	sw	s6,8(a0)$/;"	l
c48	user/ln.asm	/^ c48:	01050513          	addi	a0,a0,16$/;"	l
c48	user/ls.asm	/^ c48:	00000993          	li	s3,0$/;"	l
c48	user/matmul.asm	/^ c48:	f8e60ae3          	beq	a2,a4,bdc <free+0x1c>$/;"	l
c48	user/mkdir.asm	/^ c48:	00813a83          	ld	s5,8(sp)$/;"	l
c48	user/rm.asm	/^ c48:	00813a83          	ld	s5,8(sp)$/;"	l
c48	user/sh.asm	/^     c48:	00853503          	ld	a0,8(a0)$/;"	l
c48	user/stressfs.asm	/^ c48:	000a0b1b          	sext.w	s6,s4$/;"	l
c48	user/usertests.asm	/^     c48:	00048613          	mv	a2,s1$/;"	l
c48	user/wc.asm	/^ c48:	05c0006f          	j	ca4 <free+0x90>$/;"	l
c4c	user/cat.asm	/^ c4c:	00f48493          	addi	s1,s1,15$/;"	l
c4c	user/echo.asm	/^ c4c:	02813483          	ld	s1,40(sp)$/;"	l
c4c	user/grep.asm	/^ c4c:	000b0513          	mv	a0,s6$/;"	l
c4c	user/grind.asm	/^     c4c:	05213023          	sd	s2,64(sp)$/;"	l
c4c	user/init.asm	/^ c4c:	3cf73423          	sd	a5,968(a4) # 1010 <freep>$/;"	l
c4c	user/kill.asm	/^ c4c:	01050513          	addi	a0,a0,16$/;"	l
c4c	user/ln.asm	/^ c4c:	e39ff0ef          	jal	ra,a84 <free>$/;"	l
c4c	user/ls.asm	/^ c4c:	d3dff06f          	j	988 <vprintf+0x8c>$/;"	l
c4c	user/matmul.asm	/^ c4c:	fec53823          	sd	a2,-16(a0)$/;"	l
c4c	user/mkdir.asm	/^ c4c:	00013b03          	ld	s6,0(sp)$/;"	l
c4c	user/rm.asm	/^ c4c:	00013b03          	ld	s6,0(sp)$/;"	l
c4c	user/sh.asm	/^     c4c:	f41ff0ef          	jal	ra,b8c <nulterminate>$/;"	l
c4c	user/stressfs.asm	/^ c4c:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
c4c	user/usertests.asm	/^     c4c:	000b0593          	mv	a1,s6$/;"	l
c4c	user/wc.asm	/^ c4c:	ff852703          	lw	a4,-8(a0)$/;"	l
c50	user/cat.asm	/^ c50:	0044d493          	srli	s1,s1,0x4$/;"	l
c50	user/echo.asm	/^ c50:	02013903          	ld	s2,32(sp)$/;"	l
c50	user/grep.asm	/^ c50:	c15ff0ef          	jal	ra,864 <putc>$/;"	l
c50	user/grind.asm	/^     c50:	03313c23          	sd	s3,56(sp)$/;"	l
c50	user/init.asm	/^ c50:	00f7b023          	sd	a5,0(a5)$/;"	l
c50	user/kill.asm	/^ c50:	e39ff0ef          	jal	ra,a88 <free>$/;"	l
c50	user/ln.asm	/^ c50:	00093503          	ld	a0,0(s2)$/;"	l
c50	user/ls.asm	/^ c50:	07813083          	ld	ra,120(sp)$/;"	l
c50	user/matmul.asm	/^ c50:	0087a603          	lw	a2,8(a5)$/;"	l
c50	user/mkdir.asm	/^ c50:	04010113          	addi	sp,sp,64$/;"	l
c50	user/rm.asm	/^ c50:	04010113          	addi	sp,sp,64$/;"	l
c50	user/sh.asm	/^     c50:	fb9ff06f          	j	c08 <nulterminate+0x7c>$/;"	l
c50	user/stressfs.asm	/^ c50:	00000917          	auipc	s2,0x0$/;"	l
c50	user/usertests.asm	/^     c50:	00006517          	auipc	a0,0x6$/;"	l
c50	user/wc.asm	/^ c50:	00c7063b          	addw	a2,a4,a2$/;"	l
c54	user/cat.asm	/^ c54:	0014899b          	addiw	s3,s1,1$/;"	l
c54	user/echo.asm	/^ c54:	01813983          	ld	s3,24(sp)$/;"	l
c54	user/grep.asm	/^ c54:	01000913          	li	s2,16$/;"	l
c54	user/grind.asm	/^     c54:	03413823          	sd	s4,48(sp)$/;"	l
c54	user/init.asm	/^ c54:	0007a423          	sw	zero,8(a5)$/;"	l
c54	user/kill.asm	/^ c54:	00093503          	ld	a0,0(s2)$/;"	l
c54	user/ln.asm	/^ c54:	fa050ee3          	beqz	a0,c10 <malloc+0xcc>$/;"	l
c54	user/ls.asm	/^ c54:	07013403          	ld	s0,112(sp)$/;"	l
c54	user/matmul.asm	/^ c54:	02061713          	slli	a4,a2,0x20$/;"	l
c54	user/mkdir.asm	/^ c54:	00008067          	ret$/;"	l
c54	user/rm.asm	/^ c54:	00008067          	ret$/;"	l
c54	user/sh.asm	/^     c54:	fd010113          	addi	sp,sp,-48$/;"	l
c54	user/stressfs.asm	/^ c54:	3b090913          	addi	s2,s2,944 # 1000 <freep>$/;"	l
c54	user/usertests.asm	/^     c54:	f0850513          	addi	a0,a0,-248 # 6b58 <malloc+0x4f0>$/;"	l
c54	user/wc.asm	/^ c54:	00c7a423          	sw	a2,8(a5)$/;"	l
c58	user/cat.asm	/^ c58:	00148493          	addi	s1,s1,1$/;"	l
c58	user/echo.asm	/^ c58:	01013a03          	ld	s4,16(sp)$/;"	l
c58	user/grep.asm	/^ c58:	03c9d793          	srli	a5,s3,0x3c$/;"	l
c58	user/grind.asm	/^     c58:	03513423          	sd	s5,40(sp)$/;"	l
c58	user/init.asm	/^ c58:	fbdff06f          	j	c14 <malloc+0x58>$/;"	l
c58	user/kill.asm	/^ c58:	fa050ee3          	beqz	a0,c14 <malloc+0xcc>$/;"	l
c58	user/ln.asm	/^ c58:	00053783          	ld	a5,0(a0)$/;"	l
c58	user/ls.asm	/^ c58:	06813483          	ld	s1,104(sp)$/;"	l
c58	user/matmul.asm	/^ c58:	02075713          	srli	a4,a4,0x20$/;"	l
c58	user/mkdir.asm	/^ c58:	0007b703          	ld	a4,0(a5)$/;"	l
c58	user/rm.asm	/^ c58:	0007b703          	ld	a4,0(a5)$/;"	l
c58	user/sh.asm	/^     c58:	02113423          	sd	ra,40(sp)$/;"	l
c58	user/stressfs.asm	/^ c58:	fff00a93          	li	s5,-1$/;"	l
c58	user/usertests.asm	/^     c58:	101050ef          	jal	ra,6558 <printf>$/;"	l
c58	user/wc.asm	/^ c58:	ff053703          	ld	a4,-16(a0)$/;"	l
c5c	user/cat.asm	/^ c5c:	00000517          	auipc	a0,0x0$/;"	l
c5c	user/echo.asm	/^ c5c:	00813a83          	ld	s5,8(sp)$/;"	l
c5c	user/grep.asm	/^ c5c:	00fc87b3          	add	a5,s9,a5$/;"	l
c5c	user/grind.asm	/^     c5c:	03613023          	sd	s6,32(sp)$/;"	l
c5c	user/init.asm	/^ c5c:	04e48a63          	beq	s1,a4,cb0 <malloc+0xf4>$/;"	l
c5c	user/kill.asm	/^ c5c:	00053783          	ld	a5,0(a0)$/;"	l
c5c	user/ln.asm	/^ c5c:	0087a703          	lw	a4,8(a5)$/;"	l
c5c	user/ls.asm	/^ c5c:	06013903          	ld	s2,96(sp)$/;"	l
c5c	user/matmul.asm	/^ c5c:	00471713          	slli	a4,a4,0x4$/;"	l
c5c	user/mkdir.asm	/^ c5c:	00e53023          	sd	a4,0(a0)$/;"	l
c5c	user/rm.asm	/^ c5c:	00e53023          	sd	a4,0(a0)$/;"	l
c5c	user/sh.asm	/^     c5c:	02813023          	sd	s0,32(sp)$/;"	l
c5c	user/stressfs.asm	/^ c5c:	0a00006f          	j	cfc <malloc+0x120>$/;"	l
c5c	user/usertests.asm	/^     c5c:	00100513          	li	a0,1$/;"	l
c5c	user/wc.asm	/^ c5c:	00e7b023          	sd	a4,0(a5)$/;"	l
c60	user/cat.asm	/^ c60:	3a453503          	ld	a0,932(a0) # 1000 <freep>$/;"	l
c60	user/echo.asm	/^ c60:	00013b03          	ld	s6,0(sp)$/;"	l
c60	user/grep.asm	/^ c60:	0007c583          	lbu	a1,0(a5)$/;"	l
c60	user/grind.asm	/^     c60:	01713c23          	sd	s7,24(sp)$/;"	l
c60	user/init.asm	/^ c60:	4137073b          	subw	a4,a4,s3$/;"	l
c60	user/kill.asm	/^ c60:	0087a703          	lw	a4,8(a5)$/;"	l
c60	user/ln.asm	/^ c60:	f89772e3          	bgeu	a4,s1,be4 <malloc+0xa0>$/;"	l
c60	user/ls.asm	/^ c60:	05813983          	ld	s3,88(sp)$/;"	l
c60	user/matmul.asm	/^ c60:	00e78733          	add	a4,a5,a4$/;"	l
c60	user/mkdir.asm	/^ c60:	fc5ff06f          	j	c24 <malloc+0xc0>$/;"	l
c60	user/rm.asm	/^ c60:	fc5ff06f          	j	c24 <malloc+0xc0>$/;"	l
c60	user/sh.asm	/^     c60:	00913c23          	sd	s1,24(sp)$/;"	l
c60	user/stressfs.asm	/^ c60:	00000797          	auipc	a5,0x0$/;"	l
c60	user/usertests.asm	/^     c60:	318050ef          	jal	ra,5f78 <exit>$/;"	l
c60	user/wc.asm	/^ c60:	0600006f          	j	cc0 <free+0xac>$/;"	l
c64	user/cat.asm	/^ c64:	02050e63          	beqz	a0,ca0 <malloc+0x84>$/;"	l
c64	user/echo.asm	/^ c64:	04010113          	addi	sp,sp,64$/;"	l
c64	user/grep.asm	/^ c64:	000b0513          	mv	a0,s6$/;"	l
c64	user/grind.asm	/^     c64:	06010413          	addi	s0,sp,96$/;"	l
c64	user/init.asm	/^ c64:	00e7a423          	sw	a4,8(a5)$/;"	l
c64	user/kill.asm	/^ c64:	f89772e3          	bgeu	a4,s1,be8 <malloc+0xa0>$/;"	l
c64	user/ln.asm	/^ c64:	00093703          	ld	a4,0(s2)$/;"	l
c64	user/ls.asm	/^ c64:	05013a03          	ld	s4,80(sp)$/;"	l
c64	user/matmul.asm	/^ c64:	f8e68ae3          	beq	a3,a4,bf8 <free+0x38>$/;"	l
c64	user/mkdir.asm	/^ c64:	01652423          	sw	s6,8(a0)$/;"	l
c64	user/rm.asm	/^ c64:	01652423          	sw	s6,8(a0)$/;"	l
c64	user/sh.asm	/^     c64:	01213823          	sd	s2,16(sp)$/;"	l
c64	user/stressfs.asm	/^ c64:	3b078793          	addi	a5,a5,944 # 1010 <base>$/;"	l
c64	user/usertests.asm	/^     c64:	00048613          	mv	a2,s1$/;"	l
c64	user/wc.asm	/^ c64:	0007b703          	ld	a4,0(a5)$/;"	l
c68	user/cat.asm	/^ c68:	00053783          	ld	a5,0(a0)$/;"	l
c68	user/echo.asm	/^ c68:	00008067          	ret$/;"	l
c68	user/grep.asm	/^ c68:	bfdff0ef          	jal	ra,864 <putc>$/;"	l
c68	user/grind.asm	/^     c68:	00050b93          	mv	s7,a0$/;"	l
c68	user/init.asm	/^ c68:	02071713          	slli	a4,a4,0x20$/;"	l
c68	user/kill.asm	/^ c68:	00093703          	ld	a4,0(s2)$/;"	l
c68	user/ln.asm	/^ c68:	00078513          	mv	a0,a5$/;"	l
c68	user/ls.asm	/^ c68:	04813a83          	ld	s5,72(sp)$/;"	l
c68	user/matmul.asm	/^ c68:	00d7b023          	sd	a3,0(a5)$/;"	l
c68	user/mkdir.asm	/^ c68:	01050513          	addi	a0,a0,16$/;"	l
c68	user/rm.asm	/^ c68:	01050513          	addi	a0,a0,16$/;"	l
c68	user/sh.asm	/^     c68:	03010413          	addi	s0,sp,48$/;"	l
c68	user/stressfs.asm	/^ c68:	00000717          	auipc	a4,0x0$/;"	l
c68	user/usertests.asm	/^     c68:	000b0593          	mv	a1,s6$/;"	l
c68	user/wc.asm	/^ c68:	00e7e463          	bltu	a5,a4,c70 <free+0x5c>$/;"	l
c6c	user/cat.asm	/^ c6c:	0087a703          	lw	a4,8(a5)$/;"	l
c6c	user/echo.asm	/^ c6c:	0007b703          	ld	a4,0(a5)$/;"	l
c6c	user/grep.asm	/^ c6c:	00499993          	slli	s3,s3,0x4$/;"	l
c6c	user/grind.asm	/^     c6c:	00058a13          	mv	s4,a1$/;"	l
c6c	user/init.asm	/^ c6c:	02075713          	srli	a4,a4,0x20$/;"	l
c6c	user/kill.asm	/^ c6c:	00078513          	mv	a0,a5$/;"	l
c6c	user/ln.asm	/^ c6c:	fef716e3          	bne	a4,a5,c58 <malloc+0x114>$/;"	l
c6c	user/ls.asm	/^ c6c:	04013b03          	ld	s6,64(sp)$/;"	l
c6c	user/matmul.asm	/^ c6c:	00000717          	auipc	a4,0x0$/;"	l
c6c	user/mkdir.asm	/^ c6c:	e39ff0ef          	jal	ra,aa4 <free>$/;"	l
c6c	user/rm.asm	/^ c6c:	e39ff0ef          	jal	ra,aa4 <free>$/;"	l
c6c	user/sh.asm	/^     c6c:	fca43c23          	sd	a0,-40(s0)$/;"	l
c6c	user/stressfs.asm	/^ c6c:	38f73c23          	sd	a5,920(a4) # 1000 <freep>$/;"	l
c6c	user/usertests.asm	/^     c6c:	00006517          	auipc	a0,0x6$/;"	l
c6c	user/wc.asm	/^ c6c:	00e6ec63          	bltu	a3,a4,c84 <free+0x70>$/;"	l
c70	user/cat.asm	/^ c70:	04977663          	bgeu	a4,s1,cbc <malloc+0xa0>$/;"	l
c70	user/echo.asm	/^ c70:	00e53023          	sd	a4,0(a0)$/;"	l
c70	user/grep.asm	/^ c70:	fff9091b          	addiw	s2,s2,-1$/;"	l
c70	user/grind.asm	/^     c70:	00050913          	mv	s2,a0$/;"	l
c70	user/init.asm	/^ c70:	00471713          	slli	a4,a4,0x4$/;"	l
c70	user/kill.asm	/^ c70:	fef716e3          	bne	a4,a5,c5c <malloc+0x114>$/;"	l
c70	user/ln.asm	/^ c70:	000a0513          	mv	a0,s4$/;"	l
c70	user/ls.asm	/^ c70:	03813b83          	ld	s7,56(sp)$/;"	l
c70	user/matmul.asm	/^ c70:	38f73a23          	sd	a5,916(a4) # 1000 <freep>$/;"	l
c70	user/mkdir.asm	/^ c70:	00093503          	ld	a0,0(s2)$/;"	l
c70	user/rm.asm	/^ c70:	00093503          	ld	a0,0(s2)$/;"	l
c70	user/sh.asm	/^     c70:	00050493          	mv	s1,a0$/;"	l
c70	user/stressfs.asm	/^ c70:	00f7b023          	sd	a5,0(a5)$/;"	l
c70	user/usertests.asm	/^     c70:	f2450513          	addi	a0,a0,-220 # 6b90 <malloc+0x528>$/;"	l
c70	user/wc.asm	/^ c70:	00070793          	mv	a5,a4$/;"	l
c74	user/cat.asm	/^ c74:	00098a13          	mv	s4,s3$/;"	l
c74	user/echo.asm	/^ c74:	fc5ff06f          	j	c38 <malloc+0xc0>$/;"	l
c74	user/grep.asm	/^ c74:	fe0912e3          	bnez	s2,c58 <vprintf+0x2d8>$/;"	l
c74	user/grind.asm	/^     c74:	00000493          	li	s1,0$/;"	l
c74	user/init.asm	/^ c74:	00e787b3          	add	a5,a5,a4$/;"	l
c74	user/kill.asm	/^ c74:	000a0513          	mv	a0,s4$/;"	l
c74	user/ln.asm	/^ c74:	8adff0ef          	jal	ra,520 <sbrk>$/;"	l
c74	user/ls.asm	/^ c74:	03013c03          	ld	s8,48(sp)$/;"	l
c74	user/matmul.asm	/^ c74:	00813403          	ld	s0,8(sp)$/;"	l
c74	user/mkdir.asm	/^ c74:	fa050ee3          	beqz	a0,c30 <malloc+0xcc>$/;"	l
c74	user/rm.asm	/^ c74:	fa050ee3          	beqz	a0,c30 <malloc+0xcc>$/;"	l
c74	user/sh.asm	/^     c74:	204000ef          	jal	ra,e78 <strlen>$/;"	l
c74	user/stressfs.asm	/^ c74:	0007a423          	sw	zero,8(a5)$/;"	l
c74	user/usertests.asm	/^     c74:	0e5050ef          	jal	ra,6558 <printf>$/;"	l
c74	user/wc.asm	/^ c74:	fed7f8e3          	bgeu	a5,a3,c64 <free+0x50>$/;"	l
c78	user/cat.asm	/^ c78:	0009871b          	sext.w	a4,s3$/;"	l
c78	user/echo.asm	/^ c78:	01652423          	sw	s6,8(a0)$/;"	l
c78	user/grep.asm	/^ c78:	f8843b83          	ld	s7,-120(s0)$/;"	l
c78	user/grind.asm	/^     c78:	00a00a93          	li	s5,10$/;"	l
c78	user/init.asm	/^ c78:	0137a423          	sw	s3,8(a5)$/;"	l
c78	user/kill.asm	/^ c78:	8adff0ef          	jal	ra,524 <sbrk>$/;"	l
c78	user/ln.asm	/^ c78:	fd5516e3          	bne	a0,s5,c44 <malloc+0x100>$/;"	l
c78	user/ls.asm	/^ c78:	02813c83          	ld	s9,40(sp)$/;"	l
c78	user/matmul.asm	/^ c78:	01010113          	addi	sp,sp,16$/;"	l
c78	user/mkdir.asm	/^ c78:	00053783          	ld	a5,0(a0)$/;"	l
c78	user/rm.asm	/^ c78:	00053783          	ld	a5,0(a0)$/;"	l
c78	user/sh.asm	/^     c78:	02051513          	slli	a0,a0,0x20$/;"	l
c78	user/stressfs.asm	/^ c78:	fbdff06f          	j	c34 <malloc+0x58>$/;"	l
c78	user/usertests.asm	/^     c78:	00100513          	li	a0,1$/;"	l
c78	user/wc.asm	/^ c78:	0007b703          	ld	a4,0(a5)$/;"	l
c7c	user/cat.asm	/^ c7c:	000016b7          	lui	a3,0x1$/;"	l
c7c	user/echo.asm	/^ c7c:	01050513          	addi	a0,a0,16$/;"	l
c7c	user/grep.asm	/^ c7c:	00000993          	li	s3,0$/;"	l
c7c	user/grind.asm	/^     c7c:	00d00b13          	li	s6,13$/;"	l
c7c	user/init.asm	/^ c7c:	00000717          	auipc	a4,0x0$/;"	l
c7c	user/kill.asm	/^ c7c:	fd5516e3          	bne	a0,s5,c48 <malloc+0x100>$/;"	l
c7c	user/ln.asm	/^ c7c:	00000513          	li	a0,0$/;"	l
c7c	user/ls.asm	/^ c7c:	02013d03          	ld	s10,32(sp)$/;"	l
c7c	user/matmul.asm	/^ c7c:	00008067          	ret$/;"	l
c7c	user/mkdir.asm	/^ c7c:	0087a703          	lw	a4,8(a5)$/;"	l
c7c	user/rm.asm	/^ c7c:	0087a703          	lw	a4,8(a5)$/;"	l
c7c	user/sh.asm	/^     c7c:	02055513          	srli	a0,a0,0x20$/;"	l
c7c	user/stressfs.asm	/^ c7c:	04e48a63          	beq	s1,a4,cd0 <malloc+0xf4>$/;"	l
c7c	user/usertests.asm	/^     c7c:	2fc050ef          	jal	ra,5f78 <exit>$/;"	l
c7c	user/wc.asm	/^ c7c:	00e6e463          	bltu	a3,a4,c84 <free+0x70>$/;"	l
c8	user/cat.asm	/^  c8:	04a7d863          	bge	a5,a0,118 <main+0x74>$/;"	l
c8	user/echo.asm	/^  c8:	00050793          	mv	a5,a0$/;"	l
c8	user/forktest.asm	/^  c8:	00000517          	auipc	a0,0x0$/;"	l
c8	user/grep.asm	/^  c8:	04d70463          	beq	a4,a3,110 <matchhere+0x90>$/;"	l
c8	user/grind.asm	/^      c8:	03713c23          	sd	s7,56(sp)$/;"	l
c8	user/init.asm	/^  c8:	c7450513          	addi	a0,a0,-908 # d38 <malloc+0x17c>$/;"	l
c8	user/kill.asm	/^  c8:	00054783          	lbu	a5,0(a0)$/;"	l
c8	user/ln.asm	/^  c8:	00078e63          	beqz	a5,e4 <strcmp+0x2c>$/;"	l
c8	user/ls.asm	/^  c8:	01298533          	add	a0,s3,s2$/;"	l
c8	user/matmul.asm	/^  c8:	00ff2023          	sw	a5,0(t5)$/;"	l
c8	user/mkdir.asm	/^  c8:	fe0718e3          	bnez	a4,b8 <strcpy+0x10>$/;"	l
c8	user/rm.asm	/^  c8:	fe0718e3          	bnez	a4,b8 <strcpy+0x10>$/;"	l
c8	user/sh.asm	/^      c8:	00008067          	ret$/;"	l
c8	user/stressfs.asm	/^  c8:	484000ef          	jal	ra,54c <open>$/;"	l
c8	user/usertests.asm	/^      c8:	00008067          	ret$/;"	l
c8	user/wc.asm	/^  c8:	f4c48493          	addi	s1,s1,-180 # 1010 <buf>$/;"	l
c8	user/zombie.asm	/^  c8:	02078863          	beqz	a5,f8 <strlen+0x40>$/;"	l
c80	user/cat.asm	/^ c80:	00d77463          	bgeu	a4,a3,c88 <malloc+0x6c>$/;"	l
c80	user/echo.asm	/^ c80:	e39ff0ef          	jal	ra,ab8 <free>$/;"	l
c80	user/grep.asm	/^ c80:	d8dff06f          	j	a0c <vprintf+0x8c>$/;"	l
c80	user/grind.asm	/^     c80:	00048993          	mv	s3,s1$/;"	l
c80	user/init.asm	/^ c80:	38a73a23          	sd	a0,916(a4) # 1010 <freep>$/;"	l
c80	user/kill.asm	/^ c80:	00000513          	li	a0,0$/;"	l
c80	user/ln.asm	/^ c80:	f91ff06f          	j	c10 <malloc+0xcc>$/;"	l
c80	user/ls.asm	/^ c80:	01813d83          	ld	s11,24(sp)$/;"	l
c80	user/matmul.asm	/^ c80:	fc010113          	addi	sp,sp,-64$/;"	l
c80	user/mkdir.asm	/^ c80:	f89772e3          	bgeu	a4,s1,c04 <malloc+0xa0>$/;"	l
c80	user/rm.asm	/^ c80:	f89772e3          	bgeu	a4,s1,c04 <malloc+0xa0>$/;"	l
c80	user/sh.asm	/^     c80:	00a484b3          	add	s1,s1,a0$/;"	l
c80	user/stressfs.asm	/^ c80:	4137073b          	subw	a4,a4,s3$/;"	l
c80	user/usertests.asm	/^     c80:	000b0593          	mv	a1,s6$/;"	l
c80	user/wc.asm	/^ c80:	fee7e8e3          	bltu	a5,a4,c70 <free+0x5c>$/;"	l
c84	user/cat.asm	/^ c84:	00001a37          	lui	s4,0x1$/;"	l
c84	user/echo.asm	/^ c84:	00093503          	ld	a0,0(s2)$/;"	l
c84	user/grep.asm	/^ c84:	008b8993          	addi	s3,s7,8$/;"	l
c84	user/grind.asm	/^     c84:	0014849b          	addiw	s1,s1,1$/;"	l
c84	user/init.asm	/^ c84:	01078513          	addi	a0,a5,16$/;"	l
c84	user/kill.asm	/^ c84:	f91ff06f          	j	c14 <malloc+0xcc>$/;"	l
c84	user/ls.asm	/^ c84:	08010113          	addi	sp,sp,128$/;"	l
c84	user/matmul.asm	/^ c84:	02113c23          	sd	ra,56(sp)$/;"	l
c84	user/mkdir.asm	/^ c84:	00093703          	ld	a4,0(s2)$/;"	l
c84	user/rm.asm	/^ c84:	00093703          	ld	a4,0(s2)$/;"	l
c84	user/sh.asm	/^     c84:	00048593          	mv	a1,s1$/;"	l
c84	user/stressfs.asm	/^ c84:	00e7a423          	sw	a4,8(a5)$/;"	l
c84	user/usertests.asm	/^     c84:	00006517          	auipc	a0,0x6$/;"	l
c84	user/wc.asm	/^ c84:	ff852583          	lw	a1,-8(a0)$/;"	l
c88	user/cat.asm	/^ c88:	000a0b1b          	sext.w	s6,s4$/;"	l
c88	user/echo.asm	/^ c88:	fa050ee3          	beqz	a0,c44 <malloc+0xcc>$/;"	l
c88	user/grep.asm	/^ c88:	000bb903          	ld	s2,0(s7)$/;"	l
c88	user/grind.asm	/^     c88:	0344dc63          	bge	s1,s4,cc0 <gets+0x84>$/;"	l
c88	user/init.asm	/^ c88:	03813083          	ld	ra,56(sp)$/;"	l
c88	user/ls.asm	/^ c88:	00008067          	ret$/;"	l
c88	user/matmul.asm	/^ c88:	02813823          	sd	s0,48(sp)$/;"	l
c88	user/mkdir.asm	/^ c88:	00078513          	mv	a0,a5$/;"	l
c88	user/rm.asm	/^ c88:	00078513          	mv	a0,a5$/;"	l
c88	user/sh.asm	/^     c88:	fd840513          	addi	a0,s0,-40$/;"	l
c88	user/stressfs.asm	/^ c88:	02071713          	slli	a4,a4,0x20$/;"	l
c88	user/usertests.asm	/^     c88:	f3450513          	addi	a0,a0,-204 # 6bb8 <malloc+0x550>$/;"	l
c88	user/wc.asm	/^ c88:	0007b603          	ld	a2,0(a5)$/;"	l
c8c	user/cat.asm	/^ c8c:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
c8c	user/echo.asm	/^ c8c:	00053783          	ld	a5,0(a0)$/;"	l
c8c	user/grep.asm	/^ c8c:	02090663          	beqz	s2,cb8 <vprintf+0x338>$/;"	l
c8c	user/grind.asm	/^     c8c:	00100613          	li	a2,1$/;"	l
c8c	user/init.asm	/^ c8c:	03013403          	ld	s0,48(sp)$/;"	l
c8c	user/ls.asm	/^ c8c:	fb010113          	addi	sp,sp,-80$/;"	l
c8c	user/matmul.asm	/^ c8c:	02913423          	sd	s1,40(sp)$/;"	l
c8c	user/mkdir.asm	/^ c8c:	fef716e3          	bne	a4,a5,c78 <malloc+0x114>$/;"	l
c8c	user/rm.asm	/^ c8c:	fef716e3          	bne	a4,a5,c78 <malloc+0x114>$/;"	l
c8c	user/sh.asm	/^     c8c:	d59ff0ef          	jal	ra,9e4 <parseline>$/;"	l
c8c	user/stressfs.asm	/^ c8c:	02075713          	srli	a4,a4,0x20$/;"	l
c8c	user/usertests.asm	/^     c8c:	0cd050ef          	jal	ra,6558 <printf>$/;"	l
c8c	user/wc.asm	/^ c8c:	02059713          	slli	a4,a1,0x20$/;"	l
c90	user/cat.asm	/^ c90:	00000917          	auipc	s2,0x0$/;"	l
c90	user/echo.asm	/^ c90:	0087a703          	lw	a4,8(a5)$/;"	l
c90	user/grep.asm	/^ c90:	00094583          	lbu	a1,0(s2)$/;"	l
c90	user/grind.asm	/^     c90:	faf40593          	addi	a1,s0,-81$/;"	l
c90	user/init.asm	/^ c90:	02813483          	ld	s1,40(sp)$/;"	l
c90	user/ls.asm	/^ c90:	00113c23          	sd	ra,24(sp)$/;"	l
c90	user/matmul.asm	/^ c90:	03213023          	sd	s2,32(sp)$/;"	l
c90	user/mkdir.asm	/^ c90:	000a0513          	mv	a0,s4$/;"	l
c90	user/rm.asm	/^ c90:	000a0513          	mv	a0,s4$/;"	l
c90	user/sh.asm	/^     c90:	00050913          	mv	s2,a0$/;"	l
c90	user/stressfs.asm	/^ c90:	00471713          	slli	a4,a4,0x4$/;"	l
c90	user/usertests.asm	/^     c90:	00100513          	li	a0,1$/;"	l
c90	user/wc.asm	/^ c90:	02075713          	srli	a4,a4,0x20$/;"	l
c94	user/cat.asm	/^ c94:	37090913          	addi	s2,s2,880 # 1000 <freep>$/;"	l
c94	user/echo.asm	/^ c94:	f89772e3          	bgeu	a4,s1,c18 <malloc+0xa0>$/;"	l
c94	user/grep.asm	/^ c94:	02058a63          	beqz	a1,cc8 <vprintf+0x348>$/;"	l
c94	user/grind.asm	/^     c94:	00000513          	li	a0,0$/;"	l
c94	user/init.asm	/^ c94:	02013903          	ld	s2,32(sp)$/;"	l
c94	user/ls.asm	/^ c94:	00813823          	sd	s0,16(sp)$/;"	l
c94	user/matmul.asm	/^ c94:	01313c23          	sd	s3,24(sp)$/;"	l
c94	user/mkdir.asm	/^ c94:	8adff0ef          	jal	ra,540 <sbrk>$/;"	l
c94	user/rm.asm	/^ c94:	8adff0ef          	jal	ra,540 <sbrk>$/;"	l
c94	user/sh.asm	/^     c94:	00001617          	auipc	a2,0x1$/;"	l
c94	user/stressfs.asm	/^ c94:	00e787b3          	add	a5,a5,a4$/;"	l
c94	user/usertests.asm	/^     c94:	2e4050ef          	jal	ra,5f78 <exit>$/;"	l
c94	user/wc.asm	/^ c94:	00471713          	slli	a4,a4,0x4$/;"	l
c98	user/cat.asm	/^ c98:	fff00a93          	li	s5,-1$/;"	l
c98	user/echo.asm	/^ c98:	00093703          	ld	a4,0(s2)$/;"	l
c98	user/grep.asm	/^ c98:	000b0513          	mv	a0,s6$/;"	l
c98	user/grind.asm	/^     c98:	260000ef          	jal	ra,ef8 <read>$/;"	l
c98	user/init.asm	/^ c98:	01813983          	ld	s3,24(sp)$/;"	l
c98	user/ls.asm	/^ c98:	02010413          	addi	s0,sp,32$/;"	l
c98	user/matmul.asm	/^ c98:	01413823          	sd	s4,16(sp)$/;"	l
c98	user/mkdir.asm	/^ c98:	fd5516e3          	bne	a0,s5,c64 <malloc+0x100>$/;"	l
c98	user/rm.asm	/^ c98:	fd5516e3          	bne	a0,s5,c64 <malloc+0x100>$/;"	l
c98	user/sh.asm	/^     c98:	e5c60613          	addi	a2,a2,-420 # 1af0 <malloc+0x22c>$/;"	l
c98	user/stressfs.asm	/^ c98:	0137a423          	sw	s3,8(a5)$/;"	l
c98	user/usertests.asm	/^     c98:	000b0593          	mv	a1,s6$/;"	l
c98	user/wc.asm	/^ c98:	00e68733          	add	a4,a3,a4$/;"	l
c9c	user/cat.asm	/^ c9c:	0a00006f          	j	d3c <malloc+0x120>$/;"	l
c9c	user/echo.asm	/^ c9c:	00078513          	mv	a0,a5$/;"	l
c9c	user/grep.asm	/^ c9c:	bc9ff0ef          	jal	ra,864 <putc>$/;"	l
c9c	user/grind.asm	/^     c9c:	02a05263          	blez	a0,cc0 <gets+0x84>$/;"	l
c9c	user/init.asm	/^ c9c:	01013a03          	ld	s4,16(sp)$/;"	l
c9c	user/ls.asm	/^ c9c:	00c43023          	sd	a2,0(s0)$/;"	l
c9c	user/matmul.asm	/^ c9c:	01513423          	sd	s5,8(sp)$/;"	l
c9c	user/mkdir.asm	/^ c9c:	00000513          	li	a0,0$/;"	l
c9c	user/rm.asm	/^ c9c:	00000513          	li	a0,0$/;"	l
c9c	user/sh.asm	/^     c9c:	00048593          	mv	a1,s1$/;"	l
c9c	user/stressfs.asm	/^ c9c:	00000717          	auipc	a4,0x0$/;"	l
c9c	user/usertests.asm	/^     c9c:	00006517          	auipc	a0,0x6$/;"	l
c9c	user/wc.asm	/^ c9c:	f8e60ae3          	beq	a2,a4,c30 <free+0x1c>$/;"	l
ca0	user/cat.asm	/^ ca0:	00000797          	auipc	a5,0x0$/;"	l
ca0	user/echo.asm	/^ ca0:	fef716e3          	bne	a4,a5,c8c <malloc+0x114>$/;"	l
ca0	user/grep.asm	/^ ca0:	00190913          	addi	s2,s2,1$/;"	l
ca0	user/grind.asm	/^     ca0:	faf44783          	lbu	a5,-81(s0)$/;"	l
ca0	user/init.asm	/^ ca0:	00813a83          	ld	s5,8(sp)$/;"	l
ca0	user/ls.asm	/^ ca0:	00d43423          	sd	a3,8(s0)$/;"	l
ca0	user/matmul.asm	/^ ca0:	01613023          	sd	s6,0(sp)$/;"	l
ca0	user/mkdir.asm	/^ ca0:	f91ff06f          	j	c30 <malloc+0xcc>$/;"	l
ca0	user/rm.asm	/^ ca0:	f91ff06f          	j	c30 <malloc+0xcc>$/;"	l
ca0	user/sh.asm	/^     ca0:	fd840513          	addi	a0,s0,-40$/;"	l
ca0	user/stressfs.asm	/^ ca0:	36a73223          	sd	a0,868(a4) # 1000 <freep>$/;"	l
ca0	user/usertests.asm	/^     ca0:	f3c50513          	addi	a0,a0,-196 # 6bd8 <malloc+0x570>$/;"	l
ca0	user/wc.asm	/^ ca0:	fec53823          	sd	a2,-16(a0)$/;"	l
ca4	user/cat.asm	/^ ca4:	57078793          	addi	a5,a5,1392 # 1210 <base>$/;"	l
ca4	user/echo.asm	/^ ca4:	000a0513          	mv	a0,s4$/;"	l
ca4	user/grep.asm	/^ ca4:	00094583          	lbu	a1,0(s2)$/;"	l
ca4	user/grind.asm	/^     ca4:	00f90023          	sb	a5,0(s2)$/;"	l
ca4	user/init.asm	/^ ca4:	00013b03          	ld	s6,0(sp)$/;"	l
ca4	user/ls.asm	/^ ca4:	00e43823          	sd	a4,16(s0)$/;"	l
ca4	user/matmul.asm	/^ ca4:	04010413          	addi	s0,sp,64$/;"	l
ca4	user/sh.asm	/^     ca4:	96dff0ef          	jal	ra,610 <peek>$/;"	l
ca4	user/stressfs.asm	/^ ca4:	01078513          	addi	a0,a5,16$/;"	l
ca4	user/usertests.asm	/^     ca4:	0b5050ef          	jal	ra,6558 <printf>$/;"	l
ca4	user/wc.asm	/^ ca4:	0087a603          	lw	a2,8(a5)$/;"	l
ca8	user/cat.asm	/^ ca8:	00000717          	auipc	a4,0x0$/;"	l
ca8	user/echo.asm	/^ ca8:	8adff0ef          	jal	ra,554 <sbrk>$/;"	l
ca8	user/grep.asm	/^ ca8:	fe0598e3          	bnez	a1,c98 <vprintf+0x318>$/;"	l
ca8	user/grind.asm	/^     ca8:	01578a63          	beq	a5,s5,cbc <gets+0x80>$/;"	l
ca8	user/init.asm	/^ ca8:	04010113          	addi	sp,sp,64$/;"	l
ca8	user/ls.asm	/^ ca8:	00f43c23          	sd	a5,24(s0)$/;"	l
ca8	user/matmul.asm	/^ ca8:	02051493          	slli	s1,a0,0x20$/;"	l
ca8	user/sh.asm	/^     ca8:	fd843603          	ld	a2,-40(s0)$/;"	l
ca8	user/stressfs.asm	/^ ca8:	03813083          	ld	ra,56(sp)$/;"	l
ca8	user/usertests.asm	/^     ca8:	00100513          	li	a0,1$/;"	l
ca8	user/wc.asm	/^ ca8:	02061713          	slli	a4,a2,0x20$/;"	l
cac	user/cat.asm	/^ cac:	34f73c23          	sd	a5,856(a4) # 1000 <freep>$/;"	l
cac	user/echo.asm	/^ cac:	fd5516e3          	bne	a0,s5,c78 <malloc+0x100>$/;"	l
cac	user/grep.asm	/^ cac:	00098b93          	mv	s7,s3$/;"	l
cac	user/grind.asm	/^     cac:	00190913          	addi	s2,s2,1$/;"	l
cac	user/init.asm	/^ cac:	00008067          	ret$/;"	l
cac	user/ls.asm	/^ cac:	03043023          	sd	a6,32(s0)$/;"	l
cac	user/matmul.asm	/^ cac:	0204d493          	srli	s1,s1,0x20$/;"	l
cac	user/sh.asm	/^     cac:	02961463          	bne	a2,s1,cd4 <parsecmd+0x80>$/;"	l
cac	user/stressfs.asm	/^ cac:	03013403          	ld	s0,48(sp)$/;"	l
cac	user/usertests.asm	/^     cac:	2cc050ef          	jal	ra,5f78 <exit>$/;"	l
cac	user/wc.asm	/^ cac:	02075713          	srli	a4,a4,0x20$/;"	l
cat	user/cat.c	/^cat(int fd)$/;"	f
cb0	user/cat.asm	/^ cb0:	00f7b023          	sd	a5,0(a5)$/;"	l
cb0	user/echo.asm	/^ cb0:	00000513          	li	a0,0$/;"	l
cb0	user/grep.asm	/^ cb0:	00000993          	li	s3,0$/;"	l
cb0	user/grind.asm	/^     cb0:	fd6798e3          	bne	a5,s6,c80 <gets+0x44>$/;"	l
cb0	user/init.asm	/^ cb0:	0007b703          	ld	a4,0(a5)$/;"	l
cb0	user/ls.asm	/^ cb0:	03143423          	sd	a7,40(s0)$/;"	l
cb0	user/matmul.asm	/^ cb0:	00f48493          	addi	s1,s1,15$/;"	l
cb0	user/sh.asm	/^     cb0:	00090513          	mv	a0,s2$/;"	l
cb0	user/stressfs.asm	/^ cb0:	02813483          	ld	s1,40(sp)$/;"	l
cb0	user/usertests.asm	/^     cb0:	000b0593          	mv	a1,s6$/;"	l
cb0	user/wc.asm	/^ cb0:	00471713          	slli	a4,a4,0x4$/;"	l
cb4	user/cat.asm	/^ cb4:	0007a423          	sw	zero,8(a5)$/;"	l
cb4	user/echo.asm	/^ cb4:	f91ff06f          	j	c44 <malloc+0xcc>$/;"	l
cb4	user/grep.asm	/^ cb4:	d59ff06f          	j	a0c <vprintf+0x8c>$/;"	l
cb4	user/grind.asm	/^     cb4:	00048993          	mv	s3,s1$/;"	l
cb4	user/init.asm	/^ cb4:	00e53023          	sd	a4,0(a0)$/;"	l
cb4	user/ls.asm	/^ cb4:	fe843423          	sd	s0,-24(s0)$/;"	l
cb4	user/matmul.asm	/^ cb4:	0044d493          	srli	s1,s1,0x4$/;"	l
cb4	user/sh.asm	/^     cb4:	ed9ff0ef          	jal	ra,b8c <nulterminate>$/;"	l
cb4	user/stressfs.asm	/^ cb4:	02013903          	ld	s2,32(sp)$/;"	l
cb4	user/usertests.asm	/^     cb4:	00006517          	auipc	a0,0x6$/;"	l
cb4	user/wc.asm	/^ cb4:	00e78733          	add	a4,a5,a4$/;"	l
cb8	user/cat.asm	/^ cb8:	fbdff06f          	j	c74 <malloc+0x58>$/;"	l
cb8	user/grep.asm	/^ cb8:	00000917          	auipc	s2,0x0$/;"	l
cb8	user/grind.asm	/^     cb8:	0080006f          	j	cc0 <gets+0x84>$/;"	l
cb8	user/init.asm	/^ cb8:	fc5ff06f          	j	c7c <malloc+0xc0>$/;"	l
cb8	user/ls.asm	/^ cb8:	00040613          	mv	a2,s0$/;"	l
cb8	user/matmul.asm	/^ cb8:	0014899b          	addiw	s3,s1,1$/;"	l
cb8	user/sh.asm	/^     cb8:	00090513          	mv	a0,s2$/;"	l
cb8	user/stressfs.asm	/^ cb8:	01813983          	ld	s3,24(sp)$/;"	l
cb8	user/usertests.asm	/^     cb8:	f3c50513          	addi	a0,a0,-196 # 6bf0 <malloc+0x588>$/;"	l
cb8	user/wc.asm	/^ cb8:	f8e68ae3          	beq	a3,a4,c4c <free+0x38>$/;"	l
cbc	user/cat.asm	/^ cbc:	04e48a63          	beq	s1,a4,d10 <malloc+0xf4>$/;"	l
cbc	user/grep.asm	/^ cbc:	33090913          	addi	s2,s2,816 # fe8 <malloc+0x184>$/;"	l
cbc	user/grind.asm	/^     cbc:	00048993          	mv	s3,s1$/;"	l
cbc	user/init.asm	/^ cbc:	01652423          	sw	s6,8(a0)$/;"	l
cbc	user/ls.asm	/^ cbc:	c41ff0ef          	jal	ra,8fc <vprintf>$/;"	l
cbc	user/matmul.asm	/^ cbc:	00148493          	addi	s1,s1,1$/;"	l
cbc	user/sh.asm	/^     cbc:	02813083          	ld	ra,40(sp)$/;"	l
cbc	user/stressfs.asm	/^ cbc:	01013a03          	ld	s4,16(sp)$/;"	l
cbc	user/usertests.asm	/^     cbc:	09d050ef          	jal	ra,6558 <printf>$/;"	l
cbc	user/wc.asm	/^ cbc:	00d7b023          	sd	a3,0(a5)$/;"	l
cbuf	kernel/kernel.asm	/^    cbuf = c;$/;"	d
cc	user/cat.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/cat.asm	/^  cc:	00858913          	addi	s2,a1,8$/;"	l
cc	user/echo.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/echo.asm	/^  cc:	00158593          	addi	a1,a1,1$/;"	l
cc	user/forktest.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/forktest.asm	/^  cc:	5a050513          	addi	a0,a0,1440 # 668 <uptime+0x6c>$/;"	l
cc	user/grep.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/grep.asm	/^  cc:	00813083          	ld	ra,8(sp)$/;"	l
cc	user/grind.asm	/^      cc:	08010413          	addi	s0,sp,128$/;"	l
cc	user/grind.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/init.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/init.asm	/^  cc:	454000ef          	jal	ra,520 <exec>$/;"	l
cc	user/kill.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/kill.asm	/^  cc:	00078e63          	beqz	a5,e8 <strcmp+0x2c>$/;"	l
cc	user/ln.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ln.asm	/^  cc:	0005c703          	lbu	a4,0(a1)$/;"	l
cc	user/ls.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/ls.asm	/^  cc:	310000ef          	jal	ra,3dc <memset>$/;"	l
cc	user/matmul.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/matmul.asm	/^  cc:	000e8693          	mv	a3,t4$/;"	l
cc	user/mkdir.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/mkdir.asm	/^  cc:	00813403          	ld	s0,8(sp)$/;"	l
cc	user/rm.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/rm.asm	/^  cc:	00813403          	ld	s0,8(sp)$/;"	l
cc	user/sh.asm	/^      cc:	00002517          	auipc	a0,0x2$/;"	l
cc	user/sh.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/stressfs.asm	/^  cc:	00050913          	mv	s2,a0$/;"	l
cc	user/usertests.asm	/^        cc = sizeof(buf);$/;"	d
cc	user/usertests.asm	/^      cc = cc * 2;$/;"	d
cc	user/usertests.asm	/^      cc:	ff010113          	addi	sp,sp,-16$/;"	l
cc	user/usertests.asm	/^    cc = 1;$/;"	d
cc	user/usertests.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/usertests.asm	/^    cc = read(fd, buf, SZ\/2);$/;"	d
cc	user/usertests.asm	/^  cc = read(fd, buf, sizeof(buf));$/;"	d
cc	user/wc.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/wc.asm	/^  cc:	00050d1b          	sext.w	s10,a0$/;"	l
cc	user/zombie.asm	/^    cc = read(0, &c, 1);$/;"	d
cc	user/zombie.asm	/^  cc:	00150513          	addi	a0,a0,1$/;"	l
cc0	user/cat.asm	/^ cc0:	4137073b          	subw	a4,a4,s3$/;"	l
cc0	user/grep.asm	/^ cc0:	02800593          	li	a1,40$/;"	l
cc0	user/grind.asm	/^     cc0:	013b89b3          	add	s3,s7,s3$/;"	l
cc0	user/init.asm	/^ cc0:	01050513          	addi	a0,a0,16$/;"	l
cc0	user/ls.asm	/^ cc0:	01813083          	ld	ra,24(sp)$/;"	l
cc0	user/matmul.asm	/^ cc0:	00000517          	auipc	a0,0x0$/;"	l
cc0	user/sh.asm	/^     cc0:	02013403          	ld	s0,32(sp)$/;"	l
cc0	user/stressfs.asm	/^ cc0:	00813a83          	ld	s5,8(sp)$/;"	l
cc0	user/usertests.asm	/^     cc0:	00100513          	li	a0,1$/;"	l
cc0	user/wc.asm	/^ cc0:	00000717          	auipc	a4,0x0$/;"	l
cc4	user/cat.asm	/^ cc4:	00e7a423          	sw	a4,8(a5)$/;"	l
cc4	user/grep.asm	/^ cc4:	fd5ff06f          	j	c98 <vprintf+0x318>$/;"	l
cc4	user/grind.asm	/^     cc4:	00098023          	sb	zero,0(s3)$/;"	l
cc4	user/init.asm	/^ cc4:	e39ff0ef          	jal	ra,afc <free>$/;"	l
cc4	user/ls.asm	/^ cc4:	01013403          	ld	s0,16(sp)$/;"	l
cc4	user/matmul.asm	/^ cc4:	34053503          	ld	a0,832(a0) # 1000 <freep>$/;"	l
cc4	user/sh.asm	/^     cc4:	01813483          	ld	s1,24(sp)$/;"	l
cc4	user/stressfs.asm	/^ cc4:	00013b03          	ld	s6,0(sp)$/;"	l
cc4	user/usertests.asm	/^     cc4:	2b4050ef          	jal	ra,5f78 <exit>$/;"	l
cc4	user/wc.asm	/^ cc4:	34f73023          	sd	a5,832(a4) # 1000 <freep>$/;"	l
cc8	user/cat.asm	/^ cc8:	02071713          	slli	a4,a4,0x20$/;"	l
cc8	user/grep.asm	/^ cc8:	00098b93          	mv	s7,s3$/;"	l
cc8	user/grind.asm	/^     cc8:	000b8513          	mv	a0,s7$/;"	l
cc8	user/init.asm	/^ cc8:	00093503          	ld	a0,0(s2)$/;"	l
cc8	user/ls.asm	/^ cc8:	05010113          	addi	sp,sp,80$/;"	l
cc8	user/matmul.asm	/^ cc8:	02050e63          	beqz	a0,d04 <malloc+0x84>$/;"	l
cc8	user/sh.asm	/^     cc8:	01013903          	ld	s2,16(sp)$/;"	l
cc8	user/stressfs.asm	/^ cc8:	04010113          	addi	sp,sp,64$/;"	l
cc8	user/usertests.asm	/^     cc8:	fc010113          	addi	sp,sp,-64$/;"	l
cc8	user/wc.asm	/^ cc8:	00813403          	ld	s0,8(sp)$/;"	l
ccc	user/cat.asm	/^ ccc:	02075713          	srli	a4,a4,0x20$/;"	l
ccc	user/grep.asm	/^ ccc:	00000993          	li	s3,0$/;"	l
ccc	user/grind.asm	/^     ccc:	05813083          	ld	ra,88(sp)$/;"	l
ccc	user/init.asm	/^ ccc:	fa050ee3          	beqz	a0,c88 <malloc+0xcc>$/;"	l
ccc	user/ls.asm	/^ ccc:	00008067          	ret$/;"	l
ccc	user/matmul.asm	/^ ccc:	00053783          	ld	a5,0(a0)$/;"	l
ccc	user/sh.asm	/^     ccc:	03010113          	addi	sp,sp,48$/;"	l
ccc	user/stressfs.asm	/^ ccc:	00008067          	ret$/;"	l
ccc	user/usertests.asm	/^     ccc:	02113c23          	sd	ra,56(sp)$/;"	l
ccc	user/wc.asm	/^ ccc:	01010113          	addi	sp,sp,16$/;"	l
cd0	user/cat.asm	/^ cd0:	00471713          	slli	a4,a4,0x4$/;"	l
cd0	user/grep.asm	/^ cd0:	d3dff06f          	j	a0c <vprintf+0x8c>$/;"	l
cd0	user/grind.asm	/^     cd0:	05013403          	ld	s0,80(sp)$/;"	l
cd0	user/init.asm	/^ cd0:	00053783          	ld	a5,0(a0)$/;"	l
cd0	user/ls.asm	/^ cd0:	fa010113          	addi	sp,sp,-96$/;"	l
cd0	user/matmul.asm	/^ cd0:	0087a703          	lw	a4,8(a5)$/;"	l
cd0	user/sh.asm	/^     cd0:	00008067          	ret$/;"	l
cd0	user/stressfs.asm	/^ cd0:	0007b703          	ld	a4,0(a5)$/;"	l
cd0	user/usertests.asm	/^     cd0:	02813823          	sd	s0,48(sp)$/;"	l
cd0	user/wc.asm	/^ cd0:	00008067          	ret$/;"	l
cd4	user/cat.asm	/^ cd4:	00e787b3          	add	a5,a5,a4$/;"	l
cd4	user/grep.asm	/^ cd4:	07813083          	ld	ra,120(sp)$/;"	l
cd4	user/grind.asm	/^     cd4:	04813483          	ld	s1,72(sp)$/;"	l
cd4	user/init.asm	/^ cd4:	0087a703          	lw	a4,8(a5)$/;"	l
cd4	user/ls.asm	/^ cd4:	00113c23          	sd	ra,24(sp)$/;"	l
cd4	user/matmul.asm	/^ cd4:	04977663          	bgeu	a4,s1,d20 <malloc+0xa0>$/;"	l
cd4	user/sh.asm	/^     cd4:	00001597          	auipc	a1,0x1$/;"	l
cd4	user/stressfs.asm	/^ cd4:	00e53023          	sd	a4,0(a0)$/;"	l
cd4	user/usertests.asm	/^     cd4:	02913423          	sd	s1,40(sp)$/;"	l
cd4	user/wc.asm	/^ cd4:	fc010113          	addi	sp,sp,-64$/;"	l
cd8	user/cat.asm	/^ cd8:	0137a423          	sw	s3,8(a5)$/;"	l
cd8	user/grep.asm	/^ cd8:	07013403          	ld	s0,112(sp)$/;"	l
cd8	user/grind.asm	/^     cd8:	04013903          	ld	s2,64(sp)$/;"	l
cd8	user/init.asm	/^ cd8:	f89772e3          	bgeu	a4,s1,c5c <malloc+0xa0>$/;"	l
cd8	user/ls.asm	/^ cd8:	00813823          	sd	s0,16(sp)$/;"	l
cd8	user/matmul.asm	/^ cd8:	00098a13          	mv	s4,s3$/;"	l
cd8	user/sh.asm	/^     cd8:	e2458593          	addi	a1,a1,-476 # 1af8 <malloc+0x234>$/;"	l
cd8	user/stressfs.asm	/^ cd8:	fc5ff06f          	j	c9c <malloc+0xc0>$/;"	l
cd8	user/usertests.asm	/^     cd8:	03213023          	sd	s2,32(sp)$/;"	l
cd8	user/wc.asm	/^ cd8:	02113c23          	sd	ra,56(sp)$/;"	l
cdc	user/cat.asm	/^ cdc:	00000717          	auipc	a4,0x0$/;"	l
cdc	user/grep.asm	/^ cdc:	06813483          	ld	s1,104(sp)$/;"	l
cdc	user/grind.asm	/^     cdc:	03813983          	ld	s3,56(sp)$/;"	l
cdc	user/init.asm	/^ cdc:	00093703          	ld	a4,0(s2)$/;"	l
cdc	user/ls.asm	/^ cdc:	02010413          	addi	s0,sp,32$/;"	l
cdc	user/matmul.asm	/^ cdc:	0009871b          	sext.w	a4,s3$/;"	l
cdc	user/sh.asm	/^     cdc:	00200513          	li	a0,2$/;"	l
cdc	user/stressfs.asm	/^ cdc:	01652423          	sw	s6,8(a0)$/;"	l
cdc	user/usertests.asm	/^     cdc:	01313c23          	sd	s3,24(sp)$/;"	l
cdc	user/wc.asm	/^ cdc:	02813823          	sd	s0,48(sp)$/;"	l
ce0	user/cat.asm	/^ ce0:	32a73223          	sd	a0,804(a4) # 1000 <freep>$/;"	l
ce0	user/grep.asm	/^ ce0:	06013903          	ld	s2,96(sp)$/;"	l
ce0	user/grind.asm	/^     ce0:	03013a03          	ld	s4,48(sp)$/;"	l
ce0	user/init.asm	/^ ce0:	00078513          	mv	a0,a5$/;"	l
ce0	user/ls.asm	/^ ce0:	00b43423          	sd	a1,8(s0)$/;"	l
ce0	user/matmul.asm	/^ ce0:	000016b7          	lui	a3,0x1$/;"	l
ce0	user/sh.asm	/^     ce0:	291000ef          	jal	ra,1770 <fprintf>$/;"	l
ce0	user/stressfs.asm	/^ ce0:	01050513          	addi	a0,a0,16$/;"	l
ce0	user/usertests.asm	/^     ce0:	01413823          	sd	s4,16(sp)$/;"	l
ce0	user/wc.asm	/^ ce0:	02913423          	sd	s1,40(sp)$/;"	l
ce4	user/cat.asm	/^ ce4:	01078513          	addi	a0,a5,16$/;"	l
ce4	user/grep.asm	/^ ce4:	05813983          	ld	s3,88(sp)$/;"	l
ce4	user/grind.asm	/^     ce4:	02813a83          	ld	s5,40(sp)$/;"	l
ce4	user/init.asm	/^ ce4:	fef716e3          	bne	a4,a5,cd0 <malloc+0x114>$/;"	l
ce4	user/ls.asm	/^ ce4:	00c43823          	sd	a2,16(s0)$/;"	l
ce4	user/matmul.asm	/^ ce4:	00d77463          	bgeu	a4,a3,cec <malloc+0x6c>$/;"	l
ce4	user/sh.asm	/^     ce4:	00001517          	auipc	a0,0x1$/;"	l
ce4	user/stressfs.asm	/^ ce4:	e39ff0ef          	jal	ra,b1c <free>$/;"	l
ce4	user/usertests.asm	/^     ce4:	01513423          	sd	s5,8(sp)$/;"	l
ce4	user/wc.asm	/^ ce4:	03213023          	sd	s2,32(sp)$/;"	l
ce8	user/cat.asm	/^ ce8:	03813083          	ld	ra,56(sp)$/;"	l
ce8	user/grep.asm	/^ ce8:	05013a03          	ld	s4,80(sp)$/;"	l
ce8	user/grind.asm	/^     ce8:	02013b03          	ld	s6,32(sp)$/;"	l
ce8	user/init.asm	/^ ce8:	000a0513          	mv	a0,s4$/;"	l
ce8	user/ls.asm	/^ ce8:	00d43c23          	sd	a3,24(s0)$/;"	l
ce8	user/matmul.asm	/^ ce8:	00001a37          	lui	s4,0x1$/;"	l
ce8	user/sh.asm	/^     ce8:	da450513          	addi	a0,a0,-604 # 1a88 <malloc+0x1c4>$/;"	l
ce8	user/stressfs.asm	/^ ce8:	00093503          	ld	a0,0(s2)$/;"	l
ce8	user/usertests.asm	/^     ce8:	04010413          	addi	s0,sp,64$/;"	l
ce8	user/wc.asm	/^ ce8:	01313c23          	sd	s3,24(sp)$/;"	l
cec	user/cat.asm	/^ cec:	03013403          	ld	s0,48(sp)$/;"	l
cec	user/grep.asm	/^ cec:	04813a83          	ld	s5,72(sp)$/;"	l
cec	user/grind.asm	/^     cec:	01813b83          	ld	s7,24(sp)$/;"	l
cec	user/init.asm	/^ cec:	8adff0ef          	jal	ra,598 <sbrk>$/;"	l
cec	user/ls.asm	/^ cec:	02e43023          	sd	a4,32(s0)$/;"	l
cec	user/matmul.asm	/^ cec:	000a0b1b          	sext.w	s6,s4$/;"	l
cec	user/sh.asm	/^     cec:	b88ff0ef          	jal	ra,74 <panic>$/;"	l
cec	user/stressfs.asm	/^ cec:	fa050ee3          	beqz	a0,ca8 <malloc+0xcc>$/;"	l
cec	user/usertests.asm	/^     cec:	00050a93          	mv	s5,a0$/;"	l
cec	user/wc.asm	/^ cec:	01413823          	sd	s4,16(sp)$/;"	l
cf0	user/cat.asm	/^ cf0:	02813483          	ld	s1,40(sp)$/;"	l
cf0	user/grep.asm	/^ cf0:	04013b03          	ld	s6,64(sp)$/;"	l
cf0	user/grind.asm	/^     cf0:	06010113          	addi	sp,sp,96$/;"	l
cf0	user/init.asm	/^ cf0:	fd5516e3          	bne	a0,s5,cbc <malloc+0x100>$/;"	l
cf0	user/ls.asm	/^ cf0:	02f43423          	sd	a5,40(s0)$/;"	l
cf0	user/matmul.asm	/^ cf0:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
cf0	user/sh.asm	/^     cf0:	fc010113          	addi	sp,sp,-64$/;"	l
cf0	user/stressfs.asm	/^ cf0:	00053783          	ld	a5,0(a0)$/;"	l
cf0	user/usertests.asm	/^     cf0:	20200593          	li	a1,514$/;"	l
cf0	user/wc.asm	/^ cf0:	01513423          	sd	s5,8(sp)$/;"	l
cf4	user/cat.asm	/^ cf4:	02013903          	ld	s2,32(sp)$/;"	l
cf4	user/grep.asm	/^ cf4:	03813b83          	ld	s7,56(sp)$/;"	l
cf4	user/grind.asm	/^     cf4:	00008067          	ret$/;"	l
cf4	user/init.asm	/^ cf4:	00000513          	li	a0,0$/;"	l
cf4	user/ls.asm	/^ cf4:	03043823          	sd	a6,48(s0)$/;"	l
cf4	user/matmul.asm	/^ cf4:	00000917          	auipc	s2,0x0$/;"	l
cf4	user/sh.asm	/^     cf4:	02113c23          	sd	ra,56(sp)$/;"	l
cf4	user/stressfs.asm	/^ cf4:	0087a703          	lw	a4,8(a5)$/;"	l
cf4	user/usertests.asm	/^     cf4:	00006517          	auipc	a0,0x6$/;"	l
cf4	user/wc.asm	/^ cf4:	01613023          	sd	s6,0(sp)$/;"	l
cf8	user/cat.asm	/^ cf8:	01813983          	ld	s3,24(sp)$/;"	l
cf8	user/grep.asm	/^ cf8:	03013c03          	ld	s8,48(sp)$/;"	l
cf8	user/grind.asm	/^     cf8:	fe010113          	addi	sp,sp,-32$/;"	l
cf8	user/init.asm	/^ cf8:	f91ff06f          	j	c88 <malloc+0xcc>$/;"	l
cf8	user/ls.asm	/^ cf8:	03143c23          	sd	a7,56(s0)$/;"	l
cf8	user/matmul.asm	/^ cf8:	30c90913          	addi	s2,s2,780 # 1000 <freep>$/;"	l
cf8	user/sh.asm	/^     cf8:	02813823          	sd	s0,48(sp)$/;"	l
cf8	user/stressfs.asm	/^ cf8:	f89772e3          	bgeu	a4,s1,c7c <malloc+0xa0>$/;"	l
cf8	user/usertests.asm	/^     cf8:	f1c50513          	addi	a0,a0,-228 # 6c10 <malloc+0x5a8>$/;"	l
cf8	user/wc.asm	/^ cf8:	04010413          	addi	s0,sp,64$/;"	l
cfc	user/cat.asm	/^ cfc:	01013a03          	ld	s4,16(sp)$/;"	l
cfc	user/grep.asm	/^ cfc:	02813c83          	ld	s9,40(sp)$/;"	l
cfc	user/grind.asm	/^     cfc:	00113c23          	sd	ra,24(sp)$/;"	l
cfc	user/ls.asm	/^ cfc:	00840613          	addi	a2,s0,8$/;"	l
cfc	user/matmul.asm	/^ cfc:	fff00a93          	li	s5,-1$/;"	l
cfc	user/sh.asm	/^     cfc:	02913423          	sd	s1,40(sp)$/;"	l
cfc	user/stressfs.asm	/^ cfc:	00093703          	ld	a4,0(s2)$/;"	l
cfc	user/usertests.asm	/^     cfc:	2dc050ef          	jal	ra,5fd8 <open>$/;"	l
cfc	user/wc.asm	/^ cfc:	02051493          	slli	s1,a0,0x20$/;"	l
ch	kernel/kernel.asm	/^    ch = pi->data[pi->nread++ % PIPESIZE];$/;"	d
chan	kernel/proc.h	/^  void *chan;                  \/\/ If non-zero, sleeping on chan$/;"	m	struct:proc
char	user/cat.asm	/^char buf[512];$/;"	l
char	user/init.asm	/^char *argv[] = { "sh", 0 };$/;"	l
char	user/sh.asm	/^char symbols[] = "<|>&;()";$/;"	l
char	user/sh.asm	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	l
char	user/wc.asm	/^char buf[512];$/;"	l
chdir	user/cat.asm	/^chdir:$/;"	l
chdir	user/echo.asm	/^chdir:$/;"	l
chdir	user/forktest.asm	/^chdir:$/;"	l
chdir	user/grep.asm	/^chdir:$/;"	l
chdir	user/grind.asm	/^chdir:$/;"	l
chdir	user/init.asm	/^chdir:$/;"	l
chdir	user/kill.asm	/^chdir:$/;"	l
chdir	user/ln.asm	/^chdir:$/;"	l
chdir	user/ls.asm	/^chdir:$/;"	l
chdir	user/matmul.asm	/^chdir:$/;"	l
chdir	user/mkdir.asm	/^chdir:$/;"	l
chdir	user/rm.asm	/^chdir:$/;"	l
chdir	user/sh.asm	/^chdir:$/;"	l
chdir	user/stressfs.asm	/^chdir:$/;"	l
chdir	user/usertests.asm	/^chdir:$/;"	l
chdir	user/usys.S	/^chdir:$/;"	l
chdir	user/wc.asm	/^chdir:$/;"	l
chdir	user/zombie.asm	/^chdir:$/;"	l
clockintr	kernel/trap.c	/^clockintr()$/;"	f
close	user/cat.asm	/^close:$/;"	l
close	user/echo.asm	/^close:$/;"	l
close	user/forktest.asm	/^close:$/;"	l
close	user/grep.asm	/^close:$/;"	l
close	user/grind.asm	/^close:$/;"	l
close	user/init.asm	/^close:$/;"	l
close	user/kill.asm	/^close:$/;"	l
close	user/ln.asm	/^close:$/;"	l
close	user/ls.asm	/^close:$/;"	l
close	user/matmul.asm	/^close:$/;"	l
close	user/mkdir.asm	/^close:$/;"	l
close	user/rm.asm	/^close:$/;"	l
close	user/sh.asm	/^close:$/;"	l
close	user/stressfs.asm	/^close:$/;"	l
close	user/usertests.asm	/^close:$/;"	l
close	user/usys.S	/^close:$/;"	l
close	user/wc.asm	/^close:$/;"	l
close	user/zombie.asm	/^close:$/;"	l
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_RDONLY, 0);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE, 1);$/;"	d
cmd	user/sh.asm	/^      cmd = redircmd(cmd, q, eq, O_WRONLY|O_CREATE|O_TRUNC, 1);$/;"	d
cmd	user/sh.asm	/^    cmd = backcmd(cmd);$/;"	d
cmd	user/sh.asm	/^    cmd = listcmd(cmd, parseline(ps, es));$/;"	d
cmd	user/sh.asm	/^    cmd = pipecmd(cmd, parsepipe(ps, es));$/;"	d
cmd	user/sh.asm	/^  cmd = (struct execcmd*)ret;$/;"	d
cmd	user/sh.asm	/^  cmd = malloc(sizeof(*cmd));$/;"	d
cmd	user/sh.asm	/^  cmd = parseexec(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(&s, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseline(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parsepipe(ps, es);$/;"	d
cmd	user/sh.asm	/^  cmd = parseredirs(cmd, ps, es);$/;"	d
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:backcmd	typeref:struct:backcmd::cmd	file:
cmd	user/sh.c	/^  struct cmd *cmd;$/;"	m	struct:redircmd	typeref:struct:redircmd::cmd	file:
cmd	user/sh.c	/^struct cmd {$/;"	s	file:
commit	kernel/log.c	/^commit()$/;"	f	file:
committing	kernel/log.c	/^  int committing;  \/\/ in commit(), please wait.$/;"	m	struct:log	file:
concreate	user/usertests.c	/^concreate(char *s)$/;"	f
cons	kernel/console.c	/^} cons;$/;"	v	typeref:struct:__anon3
consoleinit	kernel/console.c	/^consoleinit(void)$/;"	f
consoleintr	kernel/console.c	/^consoleintr(int c)$/;"	f
consoleread	kernel/console.c	/^consoleread(int user_dst, uint64 dst, int n)$/;"	f
consolewrite	kernel/console.c	/^consolewrite(int user_src, uint64 src, int n)$/;"	f
consputc	kernel/console.c	/^consputc(int c)$/;"	f
context	kernel/proc.h	/^  struct context context;      \/\/ swtch() here to run process$/;"	m	struct:proc	typeref:struct:proc::context
context	kernel/proc.h	/^  struct context context;     \/\/ swtch() here to enter scheduler().$/;"	m	struct:cpu	typeref:struct:cpu::context
context	kernel/proc.h	/^struct context {$/;"	s
continuous	user/usertests.asm	/^    continuous = 1;$/;"	d
continuous	user/usertests.asm	/^    continuous = 2;$/;"	d
copyin	kernel/vm.c	/^copyin(pagetable_t pagetable, char *dst, uint64 srcva, uint64 len)$/;"	f
copyin	user/usertests.c	/^copyin(char *s)$/;"	f
copyinstr	kernel/vm.c	/^copyinstr(pagetable_t pagetable, char *dst, uint64 srcva, uint64 max)$/;"	f
copyinstr1	user/usertests.c	/^copyinstr1(char *s)$/;"	f
copyinstr2	user/usertests.c	/^copyinstr2(char *s)$/;"	f
copyinstr3	user/usertests.c	/^copyinstr3(char *s)$/;"	f
copyout	kernel/vm.c	/^copyout(pagetable_t pagetable, uint64 dstva, char *src, uint64 len)$/;"	f
copyout	user/usertests.c	/^copyout(char *s)$/;"	f
countfree	user/usertests.c	/^countfree()$/;"	f
cpu	kernel/proc.h	/^struct cpu {$/;"	s
cpu	kernel/spinlock.h	/^  struct cpu *cpu;   \/\/ The cpu holding the lock.$/;"	m	struct:spinlock	typeref:struct:spinlock::cpu
cpuid	kernel/proc.c	/^cpuid()$/;"	f
cpus	kernel/proc.c	/^struct cpu cpus[NCPU];$/;"	v	typeref:struct:cpu
create	kernel/sysfile.c	/^create(char *path, short type, short major, short minor)$/;"	f	file:
createdelete	user/usertests.c	/^createdelete(char *s)$/;"	f
createtest	user/usertests.c	/^createtest(char *s)$/;"	f
cwd	kernel/proc.h	/^  struct inode *cwd;           \/\/ Current directory$/;"	m	struct:proc	typeref:struct:proc::inode
d	kernel/kernel.asm	/^  d = dst;$/;"	d
d0	user/cat.asm	/^  d0:	ffe5099b          	addiw	s3,a0,-2$/;"	l
d0	user/echo.asm	/^  d0:	00178793          	addi	a5,a5,1$/;"	l
d0	user/forktest.asm	/^  d0:	f31ff0ef          	jal	ra,0 <print>$/;"	l
d0	user/grep.asm	/^  d0:	00013403          	ld	s0,0(sp)$/;"	l
d0	user/grind.asm	/^      d0:	00050493          	mv	s1,a0$/;"	l
d0	user/init.asm	/^  d0:	00001517          	auipc	a0,0x1$/;"	l
d0	user/kill.asm	/^  d0:	0005c703          	lbu	a4,0(a1)$/;"	l
d0	user/ln.asm	/^  d0:	00f71a63          	bne	a4,a5,e4 <strcmp+0x2c>$/;"	l
d0	user/ls.asm	/^  d0:	00098493          	mv	s1,s3$/;"	l
d0	user/matmul.asm	/^  d0:	000f8793          	mv	a5,t6$/;"	l
d0	user/mkdir.asm	/^  d0:	01010113          	addi	sp,sp,16$/;"	l
d0	user/rm.asm	/^  d0:	01010113          	addi	sp,sp,16$/;"	l
d0	user/sh.asm	/^      d0:	95450513          	addi	a0,a0,-1708 # 1a20 <malloc+0x15c>$/;"	l
d0	user/stressfs.asm	/^  d0:	01400493          	li	s1,20$/;"	l
d0	user/usertests.asm	/^      d0:	00113423          	sd	ra,8(sp)$/;"	l
d0	user/wc.asm	/^  d0:	fff5091b          	addiw	s2,a0,-1$/;"	l
d0	user/zombie.asm	/^  d0:	00050793          	mv	a5,a0$/;"	l
d00	user/cat.asm	/^ d00:	00813a83          	ld	s5,8(sp)$/;"	l
d00	user/grep.asm	/^ d00:	02013d03          	ld	s10,32(sp)$/;"	l
d00	user/grind.asm	/^     d00:	00813823          	sd	s0,16(sp)$/;"	l
d00	user/ls.asm	/^ d00:	fec43423          	sd	a2,-24(s0)$/;"	l
d00	user/matmul.asm	/^ d00:	0a00006f          	j	da0 <malloc+0x120>$/;"	l
d00	user/sh.asm	/^     d00:	03213023          	sd	s2,32(sp)$/;"	l
d00	user/stressfs.asm	/^ d00:	00078513          	mv	a0,a5$/;"	l
d00	user/usertests.asm	/^     d00:	00050993          	mv	s3,a0$/;"	l
d00	user/wc.asm	/^ d00:	0204d493          	srli	s1,s1,0x20$/;"	l
d04	user/cat.asm	/^ d04:	00013b03          	ld	s6,0(sp)$/;"	l
d04	user/grep.asm	/^ d04:	01813d83          	ld	s11,24(sp)$/;"	l
d04	user/grind.asm	/^     d04:	00913423          	sd	s1,8(sp)$/;"	l
d04	user/ls.asm	/^ d04:	00050593          	mv	a1,a0$/;"	l
d04	user/matmul.asm	/^ d04:	00000797          	auipc	a5,0x0$/;"	l
d04	user/sh.asm	/^     d04:	01313c23          	sd	s3,24(sp)$/;"	l
d04	user/stressfs.asm	/^ d04:	fef716e3          	bne	a4,a5,cf0 <malloc+0x114>$/;"	l
d04	user/usertests.asm	/^     d04:	00000493          	li	s1,0$/;"	l
d04	user/wc.asm	/^ d04:	00f48493          	addi	s1,s1,15$/;"	l
d08	user/cat.asm	/^ d08:	04010113          	addi	sp,sp,64$/;"	l
d08	user/grep.asm	/^ d08:	08010113          	addi	sp,sp,128$/;"	l
d08	user/grind.asm	/^     d08:	01213023          	sd	s2,0(sp)$/;"	l
d08	user/ls.asm	/^ d08:	00100513          	li	a0,1$/;"	l
d08	user/matmul.asm	/^ d08:	30c78793          	addi	a5,a5,780 # 1010 <base>$/;"	l
d08	user/sh.asm	/^     d08:	01413823          	sd	s4,16(sp)$/;"	l
d08	user/stressfs.asm	/^ d08:	000a0513          	mv	a0,s4$/;"	l
d08	user/usertests.asm	/^     d08:	0000c917          	auipc	s2,0xc$/;"	l
d08	user/wc.asm	/^ d08:	0044d493          	srli	s1,s1,0x4$/;"	l
d0c	user/cat.asm	/^ d0c:	00008067          	ret$/;"	l
d0c	user/grep.asm	/^ d0c:	00008067          	ret$/;"	l
d0c	user/grind.asm	/^     d0c:	02010413          	addi	s0,sp,32$/;"	l
d0c	user/ls.asm	/^ d0c:	bf1ff0ef          	jal	ra,8fc <vprintf>$/;"	l
d0c	user/matmul.asm	/^ d0c:	00000717          	auipc	a4,0x0$/;"	l
d0c	user/sh.asm	/^     d0c:	01513423          	sd	s5,8(sp)$/;"	l
d0c	user/stressfs.asm	/^ d0c:	8adff0ef          	jal	ra,5b8 <sbrk>$/;"	l
d0c	user/usertests.asm	/^     d0c:	f7090913          	addi	s2,s2,-144 # cc78 <buf>$/;"	l
d0c	user/wc.asm	/^ d0c:	0014899b          	addiw	s3,s1,1$/;"	l
d10	user/cat.asm	/^ d10:	0007b703          	ld	a4,0(a5)$/;"	l
d10	user/grep.asm	/^ d10:	fb010113          	addi	sp,sp,-80$/;"	l
d10	user/grind.asm	/^     d10:	00058913          	mv	s2,a1$/;"	l
d10	user/ls.asm	/^ d10:	01813083          	ld	ra,24(sp)$/;"	l
d10	user/matmul.asm	/^ d10:	2ef73a23          	sd	a5,756(a4) # 1000 <freep>$/;"	l
d10	user/sh.asm	/^     d10:	04010413          	addi	s0,sp,64$/;"	l
d10	user/stressfs.asm	/^ d10:	fd5516e3          	bne	a0,s5,cdc <malloc+0x100>$/;"	l
d10	user/usertests.asm	/^     d10:	10c00a13          	li	s4,268$/;"	l
d10	user/wc.asm	/^ d10:	00148493          	addi	s1,s1,1$/;"	l
d14	user/cat.asm	/^ d14:	00e53023          	sd	a4,0(a0)$/;"	l
d14	user/grep.asm	/^ d14:	00113c23          	sd	ra,24(sp)$/;"	l
d14	user/grind.asm	/^     d14:	00000593          	li	a1,0$/;"	l
d14	user/ls.asm	/^ d14:	01013403          	ld	s0,16(sp)$/;"	l
d14	user/matmul.asm	/^ d14:	00f7b023          	sd	a5,0(a5)$/;"	l
d14	user/sh.asm	/^     d14:	00001497          	auipc	s1,0x1$/;"	l
d14	user/stressfs.asm	/^ d14:	00000513          	li	a0,0$/;"	l
d14	user/usertests.asm	/^     d14:	08054063          	bltz	a0,d94 <writebig+0xcc>$/;"	l
d14	user/wc.asm	/^ d14:	00000517          	auipc	a0,0x0$/;"	l
d18	user/cat.asm	/^ d18:	fc5ff06f          	j	cdc <malloc+0xc0>$/;"	l
d18	user/grep.asm	/^ d18:	00813823          	sd	s0,16(sp)$/;"	l
d18	user/grind.asm	/^     d18:	21c000ef          	jal	ra,f34 <open>$/;"	l
d18	user/ls.asm	/^ d18:	06010113          	addi	sp,sp,96$/;"	l
d18	user/matmul.asm	/^ d18:	0007a423          	sw	zero,8(a5)$/;"	l
d18	user/sh.asm	/^     d18:	df448493          	addi	s1,s1,-524 # 1b08 <malloc+0x244>$/;"	l
d18	user/stressfs.asm	/^ d18:	f91ff06f          	j	ca8 <malloc+0xcc>$/;"	l
d18	user/usertests.asm	/^     d18:	00992023          	sw	s1,0(s2)$/;"	l
d18	user/wc.asm	/^ d18:	2ec53503          	ld	a0,748(a0) # 1000 <freep>$/;"	l
d1c	user/cat.asm	/^ d1c:	01652423          	sw	s6,8(a0)$/;"	l
d1c	user/grep.asm	/^ d1c:	02010413          	addi	s0,sp,32$/;"	l
d1c	user/grind.asm	/^     d1c:	02054c63          	bltz	a0,d54 <stat+0x5c>$/;"	l
d1c	user/ls.asm	/^ d1c:	00008067          	ret$/;"	l
d1c	user/matmul.asm	/^ d1c:	fbdff06f          	j	cd8 <malloc+0x58>$/;"	l
d1c	user/sh.asm	/^     d1c:	00200593          	li	a1,2$/;"	l
d1c	user/usertests.asm	/^     d1c:	40000613          	li	a2,1024$/;"	l
d1c	user/wc.asm	/^ d1c:	02050e63          	beqz	a0,d58 <malloc+0x84>$/;"	l
d20	user/cat.asm	/^ d20:	01050513          	addi	a0,a0,16$/;"	l
d20	user/grep.asm	/^ d20:	00c43023          	sd	a2,0(s0)$/;"	l
d20	user/grind.asm	/^     d20:	00050493          	mv	s1,a0$/;"	l
d20	user/ls.asm	/^ d20:	ff010113          	addi	sp,sp,-16$/;"	l
d20	user/matmul.asm	/^ d20:	04e48a63          	beq	s1,a4,d74 <malloc+0xf4>$/;"	l
d20	user/sh.asm	/^     d20:	00048513          	mv	a0,s1$/;"	l
d20	user/usertests.asm	/^     d20:	00090593          	mv	a1,s2$/;"	l
d20	user/wc.asm	/^ d20:	00053783          	ld	a5,0(a0)$/;"	l
d24	user/cat.asm	/^ d24:	e39ff0ef          	jal	ra,b5c <free>$/;"	l
d24	user/grep.asm	/^ d24:	00d43423          	sd	a3,8(s0)$/;"	l
d24	user/grind.asm	/^     d24:	00090593          	mv	a1,s2$/;"	l
d24	user/ls.asm	/^ d24:	00813423          	sd	s0,8(sp)$/;"	l
d24	user/matmul.asm	/^ d24:	4137073b          	subw	a4,a4,s3$/;"	l
d24	user/sh.asm	/^     d24:	510000ef          	jal	ra,1234 <open>$/;"	l
d24	user/usertests.asm	/^     d24:	00098513          	mv	a0,s3$/;"	l
d24	user/wc.asm	/^ d24:	0087a703          	lw	a4,8(a5)$/;"	l
d28	user/cat.asm	/^ d28:	00093503          	ld	a0,0(s2)$/;"	l
d28	user/grep.asm	/^ d28:	00e43823          	sd	a4,16(s0)$/;"	l
d28	user/grind.asm	/^     d28:	230000ef          	jal	ra,f58 <fstat>$/;"	l
d28	user/ls.asm	/^ d28:	01010413          	addi	s0,sp,16$/;"	l
d28	user/matmul.asm	/^ d28:	00e7a423          	sw	a4,8(a5)$/;"	l
d28	user/sh.asm	/^     d28:	00054863          	bltz	a0,d38 <main+0x48>$/;"	l
d28	user/usertests.asm	/^     d28:	280050ef          	jal	ra,5fa8 <write>$/;"	l
d28	user/wc.asm	/^ d28:	04977663          	bgeu	a4,s1,d74 <malloc+0xa0>$/;"	l
d2c	user/cat.asm	/^ d2c:	fa050ee3          	beqz	a0,ce8 <malloc+0xcc>$/;"	l
d2c	user/grep.asm	/^ d2c:	00f43c23          	sd	a5,24(s0)$/;"	l
d2c	user/grind.asm	/^     d2c:	00050913          	mv	s2,a0$/;"	l
d2c	user/ls.asm	/^ d2c:	ff050693          	addi	a3,a0,-16$/;"	l
d2c	user/matmul.asm	/^ d2c:	02071713          	slli	a4,a4,0x20$/;"	l
d2c	user/sh.asm	/^     d2c:	00200793          	li	a5,2$/;"	l
d2c	user/usertests.asm	/^     d2c:	40000793          	li	a5,1024$/;"	l
d2c	user/wc.asm	/^ d2c:	00098a13          	mv	s4,s3$/;"	l
d30	user/cat.asm	/^ d30:	00053783          	ld	a5,0(a0)$/;"	l
d30	user/grep.asm	/^ d30:	03043023          	sd	a6,32(s0)$/;"	l
d30	user/grind.asm	/^     d30:	00048513          	mv	a0,s1$/;"	l
d30	user/ls.asm	/^ d30:	00000797          	auipc	a5,0x0$/;"	l
d30	user/matmul.asm	/^ d30:	02075713          	srli	a4,a4,0x20$/;"	l
d30	user/sh.asm	/^     d30:	fea7d6e3          	bge	a5,a0,d1c <main+0x2c>$/;"	l
d30	user/usertests.asm	/^     d30:	06f51e63          	bne	a0,a5,dac <writebig+0xe4>$/;"	l
d30	user/wc.asm	/^ d30:	0009871b          	sext.w	a4,s3$/;"	l
d34	user/cat.asm	/^ d34:	0087a703          	lw	a4,8(a5)$/;"	l
d34	user/grep.asm	/^ d34:	03143423          	sd	a7,40(s0)$/;"	l
d34	user/grind.asm	/^     d34:	1dc000ef          	jal	ra,f10 <close>$/;"	l
d34	user/ls.asm	/^ d34:	2d07b783          	ld	a5,720(a5) # 1000 <freep>$/;"	l
d34	user/matmul.asm	/^ d34:	00471713          	slli	a4,a4,0x4$/;"	l
d34	user/sh.asm	/^     d34:	4dc000ef          	jal	ra,1210 <close>$/;"	l
d34	user/usertests.asm	/^     d34:	0014849b          	addiw	s1,s1,1$/;"	l
d34	user/wc.asm	/^ d34:	000016b7          	lui	a3,0x1$/;"	l
d38	user/cat.asm	/^ d38:	f89772e3          	bgeu	a4,s1,cbc <malloc+0xa0>$/;"	l
d38	user/grep.asm	/^ d38:	fe843423          	sd	s0,-24(s0)$/;"	l
d38	user/grind.asm	/^     d38:	00090513          	mv	a0,s2$/;"	l
d38	user/ls.asm	/^ d38:	0480006f          	j	d80 <free+0x60>$/;"	l
d38	user/matmul.asm	/^ d38:	00e787b3          	add	a5,a5,a4$/;"	l
d38	user/sh.asm	/^     d38:	00001497          	auipc	s1,0x1$/;"	l
d38	user/usertests.asm	/^     d38:	ff4490e3          	bne	s1,s4,d18 <writebig+0x50>$/;"	l
d38	user/wc.asm	/^ d38:	00d77463          	bgeu	a4,a3,d40 <malloc+0x6c>$/;"	l
d3c	user/cat.asm	/^ d3c:	00093703          	ld	a4,0(s2)$/;"	l
d3c	user/grep.asm	/^ d3c:	00040613          	mv	a2,s0$/;"	l
d3c	user/grind.asm	/^     d3c:	01813083          	ld	ra,24(sp)$/;"	l
d3c	user/ls.asm	/^ d3c:	00862703          	lw	a4,8(a2)$/;"	l
d3c	user/matmul.asm	/^ d3c:	0137a423          	sw	s3,8(a5)$/;"	l
d3c	user/sh.asm	/^     d3c:	2e848493          	addi	s1,s1,744 # 2020 <buf.1639>$/;"	l
d3c	user/usertests.asm	/^     d3c:	00098513          	mv	a0,s3$/;"	l
d3c	user/wc.asm	/^ d3c:	00001a37          	lui	s4,0x1$/;"	l
d4	user/cat.asm	/^  d4:	02099993          	slli	s3,s3,0x20$/;"	l
d4	user/echo.asm	/^  d4:	fff5c703          	lbu	a4,-1(a1)$/;"	l
d4	user/forktest.asm	/^  d4:	01813083          	ld	ra,24(sp)$/;"	l
d4	user/grep.asm	/^  d4:	01010113          	addi	sp,sp,16$/;"	l
d4	user/grind.asm	/^      d4:	00000513          	li	a0,0$/;"	l
d4	user/init.asm	/^  d4:	c7050513          	addi	a0,a0,-912 # d40 <malloc+0x184>$/;"	l
d4	user/kill.asm	/^  d4:	00f71a63          	bne	a4,a5,e8 <strcmp+0x2c>$/;"	l
d4	user/ln.asm	/^  d4:	00150513          	addi	a0,a0,1$/;"	l
d4	user/ls.asm	/^  d4:	f8dff06f          	j	60 <fmtname+0x60>$/;"	l
d4	user/matmul.asm	/^  d4:	0006a803          	lw	a6,0(a3)$/;"	l
d4	user/mkdir.asm	/^  d4:	00008067          	ret$/;"	l
d4	user/rm.asm	/^  d4:	00008067          	ret$/;"	l
d4	user/sh.asm	/^      d4:	fa1ff0ef          	jal	ra,74 <panic>$/;"	l
d4	user/stressfs.asm	/^  d4:	20000613          	li	a2,512$/;"	l
d4	user/usertests.asm	/^      d4:	00813023          	sd	s0,0(sp)$/;"	l
d4	user/wc.asm	/^  d4:	02091913          	slli	s2,s2,0x20$/;"	l
d4	user/zombie.asm	/^  d4:	00100693          	li	a3,1$/;"	l
d40	user/cat.asm	/^ d40:	00078513          	mv	a0,a5$/;"	l
d40	user/grep.asm	/^ d40:	c41ff0ef          	jal	ra,980 <vprintf>$/;"	l
d40	user/grind.asm	/^     d40:	01013403          	ld	s0,16(sp)$/;"	l
d40	user/ls.asm	/^ d40:	00b705bb          	addw	a1,a4,a1$/;"	l
d40	user/matmul.asm	/^ d40:	00000717          	auipc	a4,0x0$/;"	l
d40	user/sh.asm	/^     d40:	06300913          	li	s2,99$/;"	l
d40	user/usertests.asm	/^     d40:	274050ef          	jal	ra,5fb4 <close>$/;"	l
d40	user/wc.asm	/^ d40:	000a0b1b          	sext.w	s6,s4$/;"	l
d44	user/cat.asm	/^ d44:	fef716e3          	bne	a4,a5,d30 <malloc+0x114>$/;"	l
d44	user/grep.asm	/^ d44:	01813083          	ld	ra,24(sp)$/;"	l
d44	user/grind.asm	/^     d44:	00813483          	ld	s1,8(sp)$/;"	l
d44	user/ls.asm	/^ d44:	feb52c23          	sw	a1,-8(a0)$/;"	l
d44	user/matmul.asm	/^ d44:	2ca73023          	sd	a0,704(a4) # 1000 <freep>$/;"	l
d44	user/sh.asm	/^     d44:	02000993          	li	s3,32$/;"	l
d44	user/usertests.asm	/^     d44:	00000593          	li	a1,0$/;"	l
d44	user/wc.asm	/^ d44:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
d48	user/cat.asm	/^ d48:	000a0513          	mv	a0,s4$/;"	l
d48	user/grep.asm	/^ d48:	01013403          	ld	s0,16(sp)$/;"	l
d48	user/grind.asm	/^     d48:	00013903          	ld	s2,0(sp)$/;"	l
d48	user/ls.asm	/^ d48:	0007b703          	ld	a4,0(a5)$/;"	l
d48	user/matmul.asm	/^ d48:	01078513          	addi	a0,a5,16$/;"	l
d48	user/sh.asm	/^     d48:	00001a17          	auipc	s4,0x1$/;"	l
d48	user/usertests.asm	/^     d48:	00006517          	auipc	a0,0x6$/;"	l
d48	user/wc.asm	/^ d48:	00000917          	auipc	s2,0x0$/;"	l
d4c	user/cat.asm	/^ d4c:	8adff0ef          	jal	ra,5f8 <sbrk>$/;"	l
d4c	user/grep.asm	/^ d4c:	05010113          	addi	sp,sp,80$/;"	l
d4c	user/grind.asm	/^     d4c:	02010113          	addi	sp,sp,32$/;"	l
d4c	user/ls.asm	/^ d4c:	00073703          	ld	a4,0(a4)$/;"	l
d4c	user/matmul.asm	/^ d4c:	03813083          	ld	ra,56(sp)$/;"	l
d4c	user/sh.asm	/^     d4c:	2dba0a13          	addi	s4,s4,731 # 2023 <buf.1639+0x3>$/;"	l
d4c	user/usertests.asm	/^     d4c:	ec850513          	addi	a0,a0,-312 # 6c10 <malloc+0x5a8>$/;"	l
d4c	user/wc.asm	/^ d4c:	2b890913          	addi	s2,s2,696 # 1000 <freep>$/;"	l
d50	user/cat.asm	/^ d50:	fd5516e3          	bne	a0,s5,d1c <malloc+0x100>$/;"	l
d50	user/grep.asm	/^ d50:	00008067          	ret$/;"	l
d50	user/grind.asm	/^     d50:	00008067          	ret$/;"	l
d50	user/ls.asm	/^ d50:	fee53823          	sd	a4,-16(a0)$/;"	l
d50	user/matmul.asm	/^ d50:	03013403          	ld	s0,48(sp)$/;"	l
d50	user/sh.asm	/^     d50:	00001a97          	auipc	s5,0x1$/;"	l
d50	user/usertests.asm	/^     d50:	288050ef          	jal	ra,5fd8 <open>$/;"	l
d50	user/wc.asm	/^ d50:	fff00a93          	li	s5,-1$/;"	l
d54	user/cat.asm	/^ d54:	00000513          	li	a0,0$/;"	l
d54	user/grep.asm	/^ d54:	fa010113          	addi	sp,sp,-96$/;"	l
d54	user/grind.asm	/^     d54:	fff00913          	li	s2,-1$/;"	l
d54	user/ls.asm	/^ d54:	05c0006f          	j	db0 <free+0x90>$/;"	l
d54	user/matmul.asm	/^ d54:	02813483          	ld	s1,40(sp)$/;"	l
d54	user/sh.asm	/^     d54:	dc0a8a93          	addi	s5,s5,-576 # 1b10 <malloc+0x24c>$/;"	l
d54	user/usertests.asm	/^     d54:	00050993          	mv	s3,a0$/;"	l
d54	user/wc.asm	/^ d54:	0a00006f          	j	df4 <malloc+0x120>$/;"	l
d58	user/cat.asm	/^ d58:	f91ff06f          	j	ce8 <malloc+0xcc>$/;"	l
d58	user/grep.asm	/^ d58:	00113c23          	sd	ra,24(sp)$/;"	l
d58	user/grind.asm	/^     d58:	fe1ff06f          	j	d38 <stat+0x40>$/;"	l
d58	user/ls.asm	/^ d58:	ff852703          	lw	a4,-8(a0)$/;"	l
d58	user/matmul.asm	/^ d58:	02013903          	ld	s2,32(sp)$/;"	l
d58	user/sh.asm	/^     d58:	0140006f          	j	d6c <main+0x7c>$/;"	l
d58	user/usertests.asm	/^     d58:	00000493          	li	s1,0$/;"	l
d58	user/wc.asm	/^ d58:	00000797          	auipc	a5,0x0$/;"	l
d5c	user/grep.asm	/^ d5c:	00813823          	sd	s0,16(sp)$/;"	l
d5c	user/grind.asm	/^     d5c:	ff010113          	addi	sp,sp,-16$/;"	l
d5c	user/ls.asm	/^ d5c:	00c7063b          	addw	a2,a4,a2$/;"	l
d5c	user/matmul.asm	/^ d5c:	01813983          	ld	s3,24(sp)$/;"	l
d5c	user/sh.asm	/^     d5c:	b44ff0ef          	jal	ra,a0 <fork1>$/;"	l
d5c	user/usertests.asm	/^     d5c:	0000c917          	auipc	s2,0xc$/;"	l
d5c	user/wc.asm	/^ d5c:	4b878793          	addi	a5,a5,1208 # 1210 <base>$/;"	l
d60	user/grep.asm	/^ d60:	02010413          	addi	s0,sp,32$/;"	l
d60	user/grind.asm	/^     d60:	00813423          	sd	s0,8(sp)$/;"	l
d60	user/ls.asm	/^ d60:	00c7a423          	sw	a2,8(a5)$/;"	l
d60	user/matmul.asm	/^ d60:	01013a03          	ld	s4,16(sp)$/;"	l
d60	user/sh.asm	/^     d60:	06050a63          	beqz	a0,dd4 <main+0xe4>$/;"	l
d60	user/usertests.asm	/^     d60:	f1c90913          	addi	s2,s2,-228 # cc78 <buf>$/;"	l
d60	user/wc.asm	/^ d60:	00000717          	auipc	a4,0x0$/;"	l
d64	user/grep.asm	/^ d64:	00b43423          	sd	a1,8(s0)$/;"	l
d64	user/grind.asm	/^     d64:	01010413          	addi	s0,sp,16$/;"	l
d64	user/ls.asm	/^ d64:	ff053703          	ld	a4,-16(a0)$/;"	l
d64	user/matmul.asm	/^ d64:	00813a83          	ld	s5,8(sp)$/;"	l
d64	user/sh.asm	/^     d64:	00000513          	li	a0,0$/;"	l
d64	user/usertests.asm	/^     d64:	06054263          	bltz	a0,dc8 <writebig+0x100>$/;"	l
d64	user/wc.asm	/^ d64:	2af73023          	sd	a5,672(a4) # 1000 <freep>$/;"	l
d68	user/grep.asm	/^ d68:	00c43823          	sd	a2,16(s0)$/;"	l
d68	user/grind.asm	/^     d68:	00054603          	lbu	a2,0(a0)$/;"	l
d68	user/ls.asm	/^ d68:	00e7b023          	sd	a4,0(a5)$/;"	l
d68	user/matmul.asm	/^ d68:	00013b03          	ld	s6,0(sp)$/;"	l
d68	user/sh.asm	/^     d68:	478000ef          	jal	ra,11e0 <wait>$/;"	l
d68	user/usertests.asm	/^     d68:	40000613          	li	a2,1024$/;"	l
d68	user/wc.asm	/^ d68:	00f7b023          	sd	a5,0(a5)$/;"	l
d6c	user/grep.asm	/^ d6c:	00d43c23          	sd	a3,24(s0)$/;"	l
d6c	user/grind.asm	/^     d6c:	fd06079b          	addiw	a5,a2,-48$/;"	l
d6c	user/ls.asm	/^ d6c:	0600006f          	j	dcc <free+0xac>$/;"	l
d6c	user/matmul.asm	/^ d6c:	04010113          	addi	sp,sp,64$/;"	l
d6c	user/sh.asm	/^     d6c:	06400593          	li	a1,100$/;"	l
d6c	user/usertests.asm	/^     d6c:	00090593          	mv	a1,s2$/;"	l
d6c	user/wc.asm	/^ d6c:	0007a423          	sw	zero,8(a5)$/;"	l
d70	user/grep.asm	/^ d70:	02e43023          	sd	a4,32(s0)$/;"	l
d70	user/grind.asm	/^     d70:	0ff7f793          	andi	a5,a5,255$/;"	l
d70	user/ls.asm	/^ d70:	0007b703          	ld	a4,0(a5)$/;"	l
d70	user/matmul.asm	/^ d70:	00008067          	ret$/;"	l
d70	user/sh.asm	/^     d70:	00048513          	mv	a0,s1$/;"	l
d70	user/usertests.asm	/^     d70:	00098513          	mv	a0,s3$/;"	l
d70	user/wc.asm	/^ d70:	fbdff06f          	j	d2c <malloc+0x58>$/;"	l
d74	user/grep.asm	/^ d74:	02f43423          	sd	a5,40(s0)$/;"	l
d74	user/grind.asm	/^     d74:	00900713          	li	a4,9$/;"	l
d74	user/ls.asm	/^ d74:	00e7e463          	bltu	a5,a4,d7c <free+0x5c>$/;"	l
d74	user/matmul.asm	/^ d74:	0007b703          	ld	a4,0(a5)$/;"	l
d74	user/sh.asm	/^     d74:	a8cff0ef          	jal	ra,0 <getcmd>$/;"	l
d74	user/usertests.asm	/^     d74:	228050ef          	jal	ra,5f9c <read>$/;"	l
d74	user/wc.asm	/^ d74:	04e48a63          	beq	s1,a4,dc8 <malloc+0xf4>$/;"	l
d78	user/grep.asm	/^ d78:	03043823          	sd	a6,48(s0)$/;"	l
d78	user/grind.asm	/^     d78:	04f76263          	bltu	a4,a5,dbc <atoi+0x60>$/;"	l
d78	user/ls.asm	/^ d78:	00e6ec63          	bltu	a3,a4,d90 <free+0x70>$/;"	l
d78	user/matmul.asm	/^ d78:	00e53023          	sd	a4,0(a0)$/;"	l
d78	user/sh.asm	/^     d78:	06054663          	bltz	a0,de4 <main+0xf4>$/;"	l
d78	user/usertests.asm	/^     d78:	06050463          	beqz	a0,de0 <writebig+0x118>$/;"	l
d78	user/wc.asm	/^ d78:	4137073b          	subw	a4,a4,s3$/;"	l
d7c	user/grep.asm	/^ d7c:	03143c23          	sd	a7,56(s0)$/;"	l
d7c	user/grind.asm	/^     d7c:	00050693          	mv	a3,a0$/;"	l
d7c	user/ls.asm	/^ d7c:	00070793          	mv	a5,a4$/;"	l
d7c	user/matmul.asm	/^ d7c:	fc5ff06f          	j	d40 <malloc+0xc0>$/;"	l
d7c	user/sh.asm	/^     d7c:	0004c783          	lbu	a5,0(s1)$/;"	l
d7c	user/usertests.asm	/^     d7c:	40000793          	li	a5,1024$/;"	l
d7c	user/wc.asm	/^ d7c:	00e7a423          	sw	a4,8(a5)$/;"	l
d8	user/cat.asm	/^  d8:	0209d993          	srli	s3,s3,0x20$/;"	l
d8	user/echo.asm	/^  d8:	fee78fa3          	sb	a4,-1(a5)$/;"	l
d8	user/forktest.asm	/^  d8:	01013403          	ld	s0,16(sp)$/;"	l
d8	user/grep.asm	/^  d8:	00008067          	ret$/;"	l
d8	user/grind.asm	/^      d8:	6c9000ef          	jal	ra,fa0 <sbrk>$/;"	l
d8	user/init.asm	/^  d8:	1d5000ef          	jal	ra,aac <printf>$/;"	l
d8	user/kill.asm	/^  d8:	00150513          	addi	a0,a0,1$/;"	l
d8	user/ln.asm	/^  d8:	00158593          	addi	a1,a1,1$/;"	l
d8	user/ls.asm	/^  d8:	d9010113          	addi	sp,sp,-624$/;"	l
d8	user/matmul.asm	/^  d8:	00472303          	lw	t1,4(a4)$/;"	l
d8	user/mkdir.asm	/^  d8:	ff010113          	addi	sp,sp,-16$/;"	l
d8	user/rm.asm	/^  d8:	ff010113          	addi	sp,sp,-16$/;"	l
d8	user/sh.asm	/^      d8:	fd010113          	addi	sp,sp,-48$/;"	l
d8	user/stressfs.asm	/^  d8:	dd040593          	addi	a1,s0,-560$/;"	l
d8	user/usertests.asm	/^      d8:	01010413          	addi	s0,sp,16$/;"	l
d8	user/wc.asm	/^  d8:	02095913          	srli	s2,s2,0x20$/;"	l
d8	user/zombie.asm	/^  d8:	40a686bb          	subw	a3,a3,a0$/;"	l
d80	user/grep.asm	/^ d80:	00840613          	addi	a2,s0,8$/;"	l
d80	user/grind.asm	/^     d80:	00000513          	li	a0,0$/;"	l
d80	user/ls.asm	/^ d80:	fed7f8e3          	bgeu	a5,a3,d70 <free+0x50>$/;"	l
d80	user/matmul.asm	/^ d80:	01652423          	sw	s6,8(a0)$/;"	l
d80	user/sh.asm	/^     d80:	fd279ee3          	bne	a5,s2,d5c <main+0x6c>$/;"	l
d80	user/usertests.asm	/^     d80:	0cf51063          	bne	a0,a5,e40 <writebig+0x178>$/;"	l
d80	user/wc.asm	/^ d80:	02071713          	slli	a4,a4,0x20$/;"	l
d84	user/grep.asm	/^ d84:	fec43423          	sd	a2,-24(s0)$/;"	l
d84	user/grind.asm	/^     d84:	00900593          	li	a1,9$/;"	l
d84	user/ls.asm	/^ d84:	0007b703          	ld	a4,0(a5)$/;"	l
d84	user/matmul.asm	/^ d84:	01050513          	addi	a0,a0,16$/;"	l
d84	user/sh.asm	/^     d84:	0014c703          	lbu	a4,1(s1)$/;"	l
d84	user/usertests.asm	/^     d84:	00092683          	lw	a3,0(s2)$/;"	l
d84	user/wc.asm	/^ d84:	02075713          	srli	a4,a4,0x20$/;"	l
d88	user/grep.asm	/^ d88:	00050593          	mv	a1,a0$/;"	l
d88	user/grind.asm	/^     d88:	00168693          	addi	a3,a3,1$/;"	l
d88	user/ls.asm	/^ d88:	00e6e463          	bltu	a3,a4,d90 <free+0x70>$/;"	l
d88	user/matmul.asm	/^ d88:	e39ff0ef          	jal	ra,bc0 <free>$/;"	l
d88	user/sh.asm	/^     d88:	06400793          	li	a5,100$/;"	l
d88	user/usertests.asm	/^     d88:	0c969a63          	bne	a3,s1,e5c <writebig+0x194>$/;"	l
d88	user/wc.asm	/^ d88:	00471713          	slli	a4,a4,0x4$/;"	l
d8c	user/grep.asm	/^ d8c:	00100513          	li	a0,1$/;"	l
d8c	user/grind.asm	/^     d8c:	0025179b          	slliw	a5,a0,0x2$/;"	l
d8c	user/ls.asm	/^ d8c:	fee7e8e3          	bltu	a5,a4,d7c <free+0x5c>$/;"	l
d8c	user/matmul.asm	/^ d8c:	00093503          	ld	a0,0(s2)$/;"	l
d8c	user/sh.asm	/^     d8c:	fcf718e3          	bne	a4,a5,d5c <main+0x6c>$/;"	l
d8c	user/usertests.asm	/^     d8c:	0014849b          	addiw	s1,s1,1$/;"	l
d8c	user/wc.asm	/^ d8c:	00e787b3          	add	a5,a5,a4$/;"	l
d90	user/grep.asm	/^ d90:	bf1ff0ef          	jal	ra,980 <vprintf>$/;"	l
d90	user/grind.asm	/^     d90:	00a787bb          	addw	a5,a5,a0$/;"	l
d90	user/ls.asm	/^ d90:	ff852583          	lw	a1,-8(a0)$/;"	l
d90	user/matmul.asm	/^ d90:	fa050ee3          	beqz	a0,d4c <malloc+0xcc>$/;"	l
d90	user/sh.asm	/^     d90:	0024c783          	lbu	a5,2(s1)$/;"	l
d90	user/usertests.asm	/^     d90:	fd9ff06f          	j	d68 <writebig+0xa0>$/;"	l
d90	user/wc.asm	/^ d90:	0137a423          	sw	s3,8(a5)$/;"	l
d94	user/grep.asm	/^ d94:	01813083          	ld	ra,24(sp)$/;"	l
d94	user/grind.asm	/^     d94:	0017979b          	slliw	a5,a5,0x1$/;"	l
d94	user/ls.asm	/^ d94:	0007b603          	ld	a2,0(a5)$/;"	l
d94	user/matmul.asm	/^ d94:	00053783          	ld	a5,0(a0)$/;"	l
d94	user/sh.asm	/^     d94:	fd3794e3          	bne	a5,s3,d5c <main+0x6c>$/;"	l
d94	user/usertests.asm	/^     d94:	000a8593          	mv	a1,s5$/;"	l
d94	user/wc.asm	/^ d94:	00000717          	auipc	a4,0x0$/;"	l
d98	user/grep.asm	/^ d98:	01013403          	ld	s0,16(sp)$/;"	l
d98	user/grind.asm	/^     d98:	00c787bb          	addw	a5,a5,a2$/;"	l
d98	user/ls.asm	/^ d98:	02059713          	slli	a4,a1,0x20$/;"	l
d98	user/matmul.asm	/^ d98:	0087a703          	lw	a4,8(a5)$/;"	l
d98	user/sh.asm	/^     d98:	00048513          	mv	a0,s1$/;"	l
d98	user/usertests.asm	/^     d98:	00006517          	auipc	a0,0x6$/;"	l
d98	user/wc.asm	/^ d98:	26a73623          	sd	a0,620(a4) # 1000 <freep>$/;"	l
d9c	user/grep.asm	/^ d9c:	06010113          	addi	sp,sp,96$/;"	l
d9c	user/grind.asm	/^     d9c:	fd07851b          	addiw	a0,a5,-48$/;"	l
d9c	user/ls.asm	/^ d9c:	02075713          	srli	a4,a4,0x20$/;"	l
d9c	user/matmul.asm	/^ d9c:	f89772e3          	bgeu	a4,s1,d20 <malloc+0xa0>$/;"	l
d9c	user/sh.asm	/^     d9c:	0dc000ef          	jal	ra,e78 <strlen>$/;"	l
d9c	user/usertests.asm	/^     d9c:	e8050513          	addi	a0,a0,-384 # 6c18 <malloc+0x5b0>$/;"	l
d9c	user/wc.asm	/^ d9c:	01078513          	addi	a0,a5,16$/;"	l
da0	user/grep.asm	/^ da0:	00008067          	ret$/;"	l
da0	user/grind.asm	/^     da0:	0006c603          	lbu	a2,0(a3)$/;"	l
da0	user/ls.asm	/^ da0:	00471713          	slli	a4,a4,0x4$/;"	l
da0	user/matmul.asm	/^ da0:	00093703          	ld	a4,0(s2)$/;"	l
da0	user/sh.asm	/^     da0:	fff5079b          	addiw	a5,a0,-1$/;"	l
da0	user/usertests.asm	/^     da0:	7b8050ef          	jal	ra,6558 <printf>$/;"	l
da0	user/wc.asm	/^ da0:	03813083          	ld	ra,56(sp)$/;"	l
da4	user/grep.asm	/^ da4:	ff010113          	addi	sp,sp,-16$/;"	l
da4	user/grind.asm	/^     da4:	fd06071b          	addiw	a4,a2,-48$/;"	l
da4	user/ls.asm	/^ da4:	00e68733          	add	a4,a3,a4$/;"	l
da4	user/matmul.asm	/^ da4:	00078513          	mv	a0,a5$/;"	l
da4	user/sh.asm	/^     da4:	02079793          	slli	a5,a5,0x20$/;"	l
da4	user/usertests.asm	/^     da4:	00100513          	li	a0,1$/;"	l
da4	user/wc.asm	/^ da4:	03013403          	ld	s0,48(sp)$/;"	l
da8	user/grep.asm	/^ da8:	00813423          	sd	s0,8(sp)$/;"	l
da8	user/grind.asm	/^     da8:	0ff77713          	andi	a4,a4,255$/;"	l
da8	user/ls.asm	/^ da8:	f8e60ae3          	beq	a2,a4,d3c <free+0x1c>$/;"	l
da8	user/matmul.asm	/^ da8:	fef716e3          	bne	a4,a5,d94 <malloc+0x114>$/;"	l
da8	user/sh.asm	/^     da8:	0207d793          	srli	a5,a5,0x20$/;"	l
da8	user/usertests.asm	/^     da8:	1d0050ef          	jal	ra,5f78 <exit>$/;"	l
da8	user/wc.asm	/^ da8:	02813483          	ld	s1,40(sp)$/;"	l
dac	user/grep.asm	/^ dac:	01010413          	addi	s0,sp,16$/;"	l
dac	user/grind.asm	/^     dac:	fce5fee3          	bgeu	a1,a4,d88 <atoi+0x2c>$/;"	l
dac	user/ls.asm	/^ dac:	fec53823          	sd	a2,-16(a0)$/;"	l
dac	user/matmul.asm	/^ dac:	000a0513          	mv	a0,s4$/;"	l
dac	user/sh.asm	/^     dac:	00f487b3          	add	a5,s1,a5$/;"	l
dac	user/usertests.asm	/^     dac:	00048613          	mv	a2,s1$/;"	l
dac	user/wc.asm	/^ dac:	02013903          	ld	s2,32(sp)$/;"	l
data	kernel/buf.h	/^  uchar data[BSIZE];$/;"	m	struct:buf
data	kernel/pipe.c	/^  char data[PIPESIZE];$/;"	m	struct:pipe	file:
db0	user/grep.asm	/^ db0:	ff050693          	addi	a3,a0,-16$/;"	l
db0	user/grind.asm	/^     db0:	00813403          	ld	s0,8(sp)$/;"	l
db0	user/ls.asm	/^ db0:	0087a603          	lw	a2,8(a5)$/;"	l
db0	user/matmul.asm	/^ db0:	8adff0ef          	jal	ra,65c <sbrk>$/;"	l
db0	user/sh.asm	/^     db0:	00078023          	sb	zero,0(a5)$/;"	l
db0	user/usertests.asm	/^     db0:	000a8593          	mv	a1,s5$/;"	l
db0	user/wc.asm	/^ db0:	01813983          	ld	s3,24(sp)$/;"	l
db4	user/grep.asm	/^ db4:	00001797          	auipc	a5,0x1$/;"	l
db4	user/grind.asm	/^     db4:	01010113          	addi	sp,sp,16$/;"	l
db4	user/ls.asm	/^ db4:	02061713          	slli	a4,a2,0x20$/;"	l
db4	user/matmul.asm	/^ db4:	fd5516e3          	bne	a0,s5,d80 <malloc+0x100>$/;"	l
db4	user/sh.asm	/^     db4:	000a0513          	mv	a0,s4$/;"	l
db4	user/usertests.asm	/^     db4:	00006517          	auipc	a0,0x6$/;"	l
db4	user/wc.asm	/^ db4:	01013a03          	ld	s4,16(sp)$/;"	l
db8	user/grep.asm	/^ db8:	24c7b783          	ld	a5,588(a5) # 2000 <freep>$/;"	l
db8	user/grind.asm	/^     db8:	00008067          	ret$/;"	l
db8	user/ls.asm	/^ db8:	02075713          	srli	a4,a4,0x20$/;"	l
db8	user/matmul.asm	/^ db8:	00000513          	li	a0,0$/;"	l
db8	user/sh.asm	/^     db8:	4c4000ef          	jal	ra,127c <chdir>$/;"	l
db8	user/usertests.asm	/^     db8:	e8450513          	addi	a0,a0,-380 # 6c38 <malloc+0x5d0>$/;"	l
db8	user/wc.asm	/^ db8:	00813a83          	ld	s5,8(sp)$/;"	l
dbc	user/grep.asm	/^ dbc:	0480006f          	j	e04 <free+0x60>$/;"	l
dbc	user/grind.asm	/^     dbc:	00000513          	li	a0,0$/;"	l
dbc	user/ls.asm	/^ dbc:	00471713          	slli	a4,a4,0x4$/;"	l
dbc	user/matmul.asm	/^ dbc:	f91ff06f          	j	d4c <malloc+0xcc>$/;"	l
dbc	user/sh.asm	/^     dbc:	fa0558e3          	bgez	a0,d6c <main+0x7c>$/;"	l
dbc	user/usertests.asm	/^     dbc:	79c050ef          	jal	ra,6558 <printf>$/;"	l
dbc	user/wc.asm	/^ dbc:	00013b03          	ld	s6,0(sp)$/;"	l
dc	user/cat.asm	/^  dc:	00399993          	slli	s3,s3,0x3$/;"	l
dc	user/echo.asm	/^  dc:	fe0718e3          	bnez	a4,cc <strcpy+0x10>$/;"	l
dc	user/forktest.asm	/^  dc:	00813483          	ld	s1,8(sp)$/;"	l
dc	user/grep.asm	/^  dc:	00058613          	mv	a2,a1$/;"	l
dc	user/grind.asm	/^      dc:	00050a93          	mv	s5,a0$/;"	l
dc	user/init.asm	/^  dc:	00100513          	li	a0,1$/;"	l
dc	user/kill.asm	/^  dc:	00158593          	addi	a1,a1,1$/;"	l
dc	user/ln.asm	/^  dc:	00054783          	lbu	a5,0(a0)$/;"	l
dc	user/ls.asm	/^  dc:	26113423          	sd	ra,616(sp)$/;"	l
dc	user/matmul.asm	/^  dc:	00080513          	mv	a0,a6$/;"	l
dc	user/mkdir.asm	/^  dc:	00813423          	sd	s0,8(sp)$/;"	l
dc	user/rm.asm	/^  dc:	00813423          	sd	s0,8(sp)$/;"	l
dc	user/sh.asm	/^      dc:	02113423          	sd	ra,40(sp)$/;"	l
dc	user/stressfs.asm	/^  dc:	00090513          	mv	a0,s2$/;"	l
dc	user/usertests.asm	/^      dc:	00050593          	mv	a1,a0$/;"	l
dc	user/wc.asm	/^  dc:	01b90933          	add	s2,s2,s11$/;"	l
dc	user/zombie.asm	/^  dc:	00f6853b          	addw	a0,a3,a5$/;"	l
dc0	user/grep.asm	/^ dc0:	00862703          	lw	a4,8(a2)$/;"	l
dc0	user/grind.asm	/^     dc0:	ff1ff06f          	j	db0 <atoi+0x54>$/;"	l
dc0	user/ls.asm	/^ dc0:	00e78733          	add	a4,a5,a4$/;"	l
dc0	user/sh.asm	/^     dc0:	000a0613          	mv	a2,s4$/;"	l
dc0	user/usertests.asm	/^     dc0:	00100513          	li	a0,1$/;"	l
dc0	user/wc.asm	/^ dc0:	04010113          	addi	sp,sp,64$/;"	l
dc4	user/grep.asm	/^ dc4:	00b705bb          	addw	a1,a4,a1$/;"	l
dc4	user/grind.asm	/^     dc4:	ff010113          	addi	sp,sp,-16$/;"	l
dc4	user/ls.asm	/^ dc4:	f8e68ae3          	beq	a3,a4,d58 <free+0x38>$/;"	l
dc4	user/sh.asm	/^     dc4:	000a8593          	mv	a1,s5$/;"	l
dc4	user/usertests.asm	/^     dc4:	1b4050ef          	jal	ra,5f78 <exit>$/;"	l
dc4	user/wc.asm	/^ dc4:	00008067          	ret$/;"	l
dc8	user/grep.asm	/^ dc8:	feb52c23          	sw	a1,-8(a0)$/;"	l
dc8	user/grind.asm	/^     dc8:	00813423          	sd	s0,8(sp)$/;"	l
dc8	user/ls.asm	/^ dc8:	00d7b023          	sd	a3,0(a5)$/;"	l
dc8	user/sh.asm	/^     dc8:	00200513          	li	a0,2$/;"	l
dc8	user/usertests.asm	/^     dc8:	000a8593          	mv	a1,s5$/;"	l
dc8	user/wc.asm	/^ dc8:	0007b703          	ld	a4,0(a5)$/;"	l
dcc	user/grep.asm	/^ dcc:	0007b703          	ld	a4,0(a5)$/;"	l
dcc	user/grind.asm	/^     dcc:	01010413          	addi	s0,sp,16$/;"	l
dcc	user/ls.asm	/^ dcc:	00000717          	auipc	a4,0x0$/;"	l
dcc	user/sh.asm	/^     dcc:	1a5000ef          	jal	ra,1770 <fprintf>$/;"	l
dcc	user/usertests.asm	/^     dcc:	00006517          	auipc	a0,0x6$/;"	l
dcc	user/wc.asm	/^ dcc:	00e53023          	sd	a4,0(a0)$/;"	l
dd0	user/grep.asm	/^ dd0:	00073703          	ld	a4,0(a4)$/;"	l
dd0	user/grind.asm	/^     dd0:	04b57063          	bgeu	a0,a1,e10 <memmove+0x4c>$/;"	l
dd0	user/ls.asm	/^ dd0:	22f73a23          	sd	a5,564(a4) # 1000 <freep>$/;"	l
dd0	user/sh.asm	/^     dd0:	f9dff06f          	j	d6c <main+0x7c>$/;"	l
dd0	user/usertests.asm	/^     dd0:	e9450513          	addi	a0,a0,-364 # 6c60 <malloc+0x5f8>$/;"	l
dd0	user/wc.asm	/^ dd0:	fc5ff06f          	j	d94 <malloc+0xc0>$/;"	l
dd4	user/grep.asm	/^ dd4:	fee53823          	sd	a4,-16(a0)$/;"	l
dd4	user/grind.asm	/^     dd4:	02c05863          	blez	a2,e04 <memmove+0x40>$/;"	l
dd4	user/ls.asm	/^ dd4:	00813403          	ld	s0,8(sp)$/;"	l
dd4	user/sh.asm	/^     dd4:	00001517          	auipc	a0,0x1$/;"	l
dd4	user/usertests.asm	/^     dd4:	784050ef          	jal	ra,6558 <printf>$/;"	l
dd4	user/wc.asm	/^ dd4:	01652423          	sw	s6,8(a0)$/;"	l
dd8	user/grep.asm	/^ dd8:	05c0006f          	j	e34 <free+0x90>$/;"	l
dd8	user/grind.asm	/^     dd8:	fff6079b          	addiw	a5,a2,-1$/;"	l
dd8	user/ls.asm	/^ dd8:	01010113          	addi	sp,sp,16$/;"	l
dd8	user/sh.asm	/^     dd8:	24c50513          	addi	a0,a0,588 # 2020 <buf.1639>$/;"	l
dd8	user/usertests.asm	/^     dd8:	00100513          	li	a0,1$/;"	l
dd8	user/wc.asm	/^ dd8:	01050513          	addi	a0,a0,16$/;"	l
ddc	user/grep.asm	/^ ddc:	ff852703          	lw	a4,-8(a0)$/;"	l
ddc	user/grind.asm	/^     ddc:	02079793          	slli	a5,a5,0x20$/;"	l
ddc	user/ls.asm	/^ ddc:	00008067          	ret$/;"	l
ddc	user/sh.asm	/^     ddc:	e79ff0ef          	jal	ra,c54 <parsecmd>$/;"	l
ddc	user/usertests.asm	/^     ddc:	19c050ef          	jal	ra,5f78 <exit>$/;"	l
ddc	user/wc.asm	/^ ddc:	e39ff0ef          	jal	ra,c14 <free>$/;"	l
de0	user/grep.asm	/^ de0:	00c7063b          	addw	a2,a4,a2$/;"	l
de0	user/grind.asm	/^     de0:	0207d793          	srli	a5,a5,0x20$/;"	l
de0	user/ls.asm	/^ de0:	fc010113          	addi	sp,sp,-64$/;"	l
de0	user/sh.asm	/^     de0:	af8ff0ef          	jal	ra,d8 <runcmd>$/;"	l
de0	user/usertests.asm	/^     de0:	10c00793          	li	a5,268$/;"	l
de0	user/wc.asm	/^ de0:	00093503          	ld	a0,0(s2)$/;"	l
de4	user/grep.asm	/^ de4:	00c7a423          	sw	a2,8(a5)$/;"	l
de4	user/grind.asm	/^     de4:	00178793          	addi	a5,a5,1$/;"	l
de4	user/ls.asm	/^ de4:	02113c23          	sd	ra,56(sp)$/;"	l
de4	user/sh.asm	/^     de4:	00000513          	li	a0,0$/;"	l
de4	user/usertests.asm	/^     de4:	04f49063          	bne	s1,a5,e24 <writebig+0x15c>$/;"	l
de4	user/wc.asm	/^ de4:	fa050ee3          	beqz	a0,da0 <malloc+0xcc>$/;"	l
de8	user/grep.asm	/^ de8:	ff053703          	ld	a4,-16(a0)$/;"	l
de8	user/grind.asm	/^     de8:	00f507b3          	add	a5,a0,a5$/;"	l
de8	user/ls.asm	/^ de8:	02813823          	sd	s0,48(sp)$/;"	l
de8	user/sh.asm	/^     de8:	3ec000ef          	jal	ra,11d4 <exit>$/;"	l
de8	user/usertests.asm	/^     de8:	00098513          	mv	a0,s3$/;"	l
de8	user/wc.asm	/^ de8:	00053783          	ld	a5,0(a0)$/;"	l
dec	user/grep.asm	/^ dec:	00e7b023          	sd	a4,0(a5)$/;"	l
dec	user/grind.asm	/^     dec:	00050713          	mv	a4,a0$/;"	l
dec	user/ls.asm	/^ dec:	02913423          	sd	s1,40(sp)$/;"	l
dec	user/sh.asm	/^     dec:	ff010113          	addi	sp,sp,-16$/;"	l
dec	user/usertests.asm	/^     dec:	1c8050ef          	jal	ra,5fb4 <close>$/;"	l
dec	user/wc.asm	/^ dec:	0087a703          	lw	a4,8(a5)$/;"	l
desc	kernel/virtio_disk.c	/^  struct virtq_desc *desc;$/;"	m	struct:disk	typeref:struct:disk::virtq_desc	file:
dev	kernel/buf.h	/^  uint dev;$/;"	m	struct:buf
dev	kernel/file.h	/^  uint dev;           \/\/ Device number$/;"	m	struct:inode
dev	kernel/log.c	/^  int dev;$/;"	m	struct:log	file:
dev	kernel/stat.h	/^  int dev;     \/\/ File system's disk device$/;"	m	struct:stat
devintr	kernel/trap.c	/^devintr()$/;"	f
devsw	kernel/file.c	/^struct devsw devsw[NDEV];$/;"	v	typeref:struct:devsw
devsw	kernel/file.h	/^struct devsw {$/;"	s
df0	user/grep.asm	/^ df0:	0600006f          	j	e50 <free+0xac>$/;"	l
df0	user/grind.asm	/^     df0:	00158593          	addi	a1,a1,1$/;"	l
df0	user/ls.asm	/^ df0:	03213023          	sd	s2,32(sp)$/;"	l
df0	user/sh.asm	/^     df0:	00113423          	sd	ra,8(sp)$/;"	l
df0	user/usertests.asm	/^     df0:	00006517          	auipc	a0,0x6$/;"	l
df0	user/wc.asm	/^ df0:	f89772e3          	bgeu	a4,s1,d74 <malloc+0xa0>$/;"	l
df4	user/grep.asm	/^ df4:	0007b703          	ld	a4,0(a5)$/;"	l
df4	user/grind.asm	/^     df4:	00170713          	addi	a4,a4,1$/;"	l
df4	user/ls.asm	/^ df4:	01313c23          	sd	s3,24(sp)$/;"	l
df4	user/sh.asm	/^     df4:	00813023          	sd	s0,0(sp)$/;"	l
df4	user/usertests.asm	/^     df4:	e2050513          	addi	a0,a0,-480 # 6c10 <malloc+0x5a8>$/;"	l
df4	user/wc.asm	/^ df4:	00093703          	ld	a4,0(s2)$/;"	l
df8	user/grep.asm	/^ df8:	00e7e463          	bltu	a5,a4,e00 <free+0x5c>$/;"	l
df8	user/grind.asm	/^     df8:	fff5c683          	lbu	a3,-1(a1)$/;"	l
df8	user/ls.asm	/^ df8:	01413823          	sd	s4,16(sp)$/;"	l
df8	user/sh.asm	/^     df8:	01010413          	addi	s0,sp,16$/;"	l
df8	user/usertests.asm	/^     df8:	1f8050ef          	jal	ra,5ff0 <unlink>$/;"	l
df8	user/wc.asm	/^ df8:	00078513          	mv	a0,a5$/;"	l
dfc	user/grep.asm	/^ dfc:	00e6ec63          	bltu	a3,a4,e14 <free+0x70>$/;"	l
dfc	user/grind.asm	/^     dfc:	fed70fa3          	sb	a3,-1(a4)$/;"	l
dfc	user/ls.asm	/^ dfc:	01513423          	sd	s5,8(sp)$/;"	l
dfc	user/sh.asm	/^     dfc:	ef5ff0ef          	jal	ra,cf0 <main>$/;"	l
dfc	user/usertests.asm	/^     dfc:	06054e63          	bltz	a0,e78 <writebig+0x1b0>$/;"	l
dfc	user/wc.asm	/^ dfc:	fef716e3          	bne	a4,a5,de8 <malloc+0x114>$/;"	l
die	mkfs/mkfs.c	/^die(const char *s)$/;"	f
digits	kernel/printf.c	/^static char digits[] = "0123456789abcdef";$/;"	v	file:
digits	user/printf.c	/^static char digits[] = "0123456789ABCDEF";$/;"	v	file:
dinode	kernel/fs.h	/^struct dinode {$/;"	s
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^    dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dip	kernel/kernel.asm	/^  dip = (struct dinode*)bp->data + ip->inum%IPB;$/;"	d
dirent	kernel/fs.h	/^struct dirent {$/;"	s
dirfile	user/usertests.c	/^dirfile(char *s)$/;"	f
dirlink	kernel/fs.c	/^dirlink(struct inode *dp, char *name, uint inum)$/;"	f
dirlookup	kernel/fs.c	/^dirlookup(struct inode *dp, char *name, uint *poff)$/;"	f
dirtest	user/usertests.c	/^void dirtest(char *s)$/;"	f
disk	kernel/buf.h	/^  int disk;    \/\/ does disk "own" buf?$/;"	m	struct:buf
disk	kernel/virtio_disk.c	/^static struct disk {$/;"	s	file:
disk	kernel/virtio_disk.c	/^} disk;$/;"	v	typeref:struct:disk	file:
diskfull	user/usertests.c	/^diskfull(char *s)$/;"	f
do_commit	kernel/kernel.asm	/^    do_commit = 1;$/;"	d
do_rand	user/grind.c	/^do_rand(unsigned long *ctx)$/;"	f
drivetests	user/usertests.c	/^drivetests(int quick, int continuous, char *justone) {$/;"	f
dst	user/cat.asm	/^  dst = vdst;$/;"	d
dst	user/echo.asm	/^  dst = vdst;$/;"	d
dst	user/forktest.asm	/^  dst = vdst;$/;"	d
dst	user/grep.asm	/^  dst = vdst;$/;"	d
dst	user/grind.asm	/^  dst = vdst;$/;"	d
dst	user/init.asm	/^  dst = vdst;$/;"	d
dst	user/kill.asm	/^  dst = vdst;$/;"	d
dst	user/ln.asm	/^  dst = vdst;$/;"	d
dst	user/ls.asm	/^  dst = vdst;$/;"	d
dst	user/matmul.asm	/^  dst = vdst;$/;"	d
dst	user/mkdir.asm	/^  dst = vdst;$/;"	d
dst	user/rm.asm	/^  dst = vdst;$/;"	d
dst	user/sh.asm	/^  dst = vdst;$/;"	d
dst	user/stressfs.asm	/^  dst = vdst;$/;"	d
dst	user/usertests.asm	/^  dst = vdst;$/;"	d
dst	user/wc.asm	/^  dst = vdst;$/;"	d
dst	user/zombie.asm	/^  dst = vdst;$/;"	d
dstva	kernel/kernel.asm	/^    dstva = va0 + PGSIZE;$/;"	d
dup	user/cat.asm	/^dup:$/;"	l
dup	user/echo.asm	/^dup:$/;"	l
dup	user/forktest.asm	/^dup:$/;"	l
dup	user/grep.asm	/^dup:$/;"	l
dup	user/grind.asm	/^dup:$/;"	l
dup	user/init.asm	/^dup:$/;"	l
dup	user/kill.asm	/^dup:$/;"	l
dup	user/ln.asm	/^dup:$/;"	l
dup	user/ls.asm	/^dup:$/;"	l
dup	user/matmul.asm	/^dup:$/;"	l
dup	user/mkdir.asm	/^dup:$/;"	l
dup	user/rm.asm	/^dup:$/;"	l
dup	user/sh.asm	/^dup:$/;"	l
dup	user/stressfs.asm	/^dup:$/;"	l
dup	user/usertests.asm	/^dup:$/;"	l
dup	user/usys.S	/^dup:$/;"	l
dup	user/wc.asm	/^dup:$/;"	l
dup	user/zombie.asm	/^dup:$/;"	l
e	kernel/console.c	/^  uint e;  \/\/ Edit index$/;"	m	struct:__anon3	file:
e0	user/cat.asm	/^  e0:	01058593          	addi	a1,a1,16$/;"	l
e0	user/echo.asm	/^  e0:	00813403          	ld	s0,8(sp)$/;"	l
e0	user/forktest.asm	/^  e0:	00013903          	ld	s2,0(sp)$/;"	l
e0	user/grep.asm	/^  e0:	00250593          	addi	a1,a0,2$/;"	l
e0	user/grind.asm	/^      e0:	00001517          	auipc	a0,0x1$/;"	l
e0	user/init.asm	/^  e0:	3ec000ef          	jal	ra,4cc <exit>$/;"	l
e0	user/kill.asm	/^  e0:	00054783          	lbu	a5,0(a0)$/;"	l
e0	user/ln.asm	/^  e0:	fe0796e3          	bnez	a5,cc <strcmp+0x14>$/;"	l
e0	user/ls.asm	/^  e0:	26813023          	sd	s0,608(sp)$/;"	l
e0	user/matmul.asm	/^  e0:	00030593          	mv	a1,t1$/;"	l
e0	user/mkdir.asm	/^  e0:	01010413          	addi	s0,sp,16$/;"	l
e0	user/rm.asm	/^  e0:	01010413          	addi	s0,sp,16$/;"	l
e0	user/sh.asm	/^      e0:	02813023          	sd	s0,32(sp)$/;"	l
e0	user/stressfs.asm	/^  e0:	430000ef          	jal	ra,510 <read>$/;"	l
e0	user/usertests.asm	/^      e0:	00006517          	auipc	a0,0x6$/;"	l
e0	user/wc.asm	/^  e0:	fa9ff06f          	j	88 <wc+0x88>$/;"	l
e0	user/zombie.asm	/^  e0:	00178793          	addi	a5,a5,1$/;"	l
e00	user/grep.asm	/^ e00:	00070793          	mv	a5,a4$/;"	l
e00	user/grind.asm	/^     e00:	fee798e3          	bne	a5,a4,df0 <memmove+0x2c>$/;"	l
e00	user/ls.asm	/^ e00:	01613023          	sd	s6,0(sp)$/;"	l
e00	user/sh.asm	/^     e00:	00000513          	li	a0,0$/;"	l
e00	user/usertests.asm	/^     e00:	03813083          	ld	ra,56(sp)$/;"	l
e00	user/wc.asm	/^ e00:	000a0513          	mv	a0,s4$/;"	l
e04	user/grep.asm	/^ e04:	fed7f8e3          	bgeu	a5,a3,df4 <free+0x50>$/;"	l
e04	user/grind.asm	/^     e04:	00813403          	ld	s0,8(sp)$/;"	l
e04	user/ls.asm	/^ e04:	04010413          	addi	s0,sp,64$/;"	l
e04	user/sh.asm	/^     e04:	3d0000ef          	jal	ra,11d4 <exit>$/;"	l
e04	user/usertests.asm	/^     e04:	03013403          	ld	s0,48(sp)$/;"	l
e04	user/wc.asm	/^ e04:	8adff0ef          	jal	ra,6b0 <sbrk>$/;"	l
e08	user/grep.asm	/^ e08:	0007b703          	ld	a4,0(a5)$/;"	l
e08	user/grind.asm	/^     e08:	01010113          	addi	sp,sp,16$/;"	l
e08	user/ls.asm	/^ e08:	02051493          	slli	s1,a0,0x20$/;"	l
e08	user/sh.asm	/^     e08:	ff010113          	addi	sp,sp,-16$/;"	l
e08	user/usertests.asm	/^     e08:	02813483          	ld	s1,40(sp)$/;"	l
e08	user/wc.asm	/^ e08:	fd5516e3          	bne	a0,s5,dd4 <malloc+0x100>$/;"	l
e0c	user/grep.asm	/^ e0c:	00e6e463          	bltu	a3,a4,e14 <free+0x70>$/;"	l
e0c	user/grind.asm	/^     e0c:	00008067          	ret$/;"	l
e0c	user/ls.asm	/^ e0c:	0204d493          	srli	s1,s1,0x20$/;"	l
e0c	user/sh.asm	/^     e0c:	00813423          	sd	s0,8(sp)$/;"	l
e0c	user/usertests.asm	/^     e0c:	02013903          	ld	s2,32(sp)$/;"	l
e0c	user/wc.asm	/^ e0c:	00000513          	li	a0,0$/;"	l
e10	user/grep.asm	/^ e10:	fee7e8e3          	bltu	a5,a4,e00 <free+0x5c>$/;"	l
e10	user/grind.asm	/^     e10:	00c50733          	add	a4,a0,a2$/;"	l
e10	user/ls.asm	/^ e10:	00f48493          	addi	s1,s1,15$/;"	l
e10	user/sh.asm	/^     e10:	01010413          	addi	s0,sp,16$/;"	l
e10	user/usertests.asm	/^     e10:	01813983          	ld	s3,24(sp)$/;"	l
e10	user/wc.asm	/^ e10:	f91ff06f          	j	da0 <malloc+0xcc>$/;"	l
e14	user/grep.asm	/^ e14:	ff852583          	lw	a1,-8(a0)$/;"	l
e14	user/grind.asm	/^     e14:	00c585b3          	add	a1,a1,a2$/;"	l
e14	user/ls.asm	/^ e14:	0044d493          	srli	s1,s1,0x4$/;"	l
e14	user/sh.asm	/^     e14:	00050793          	mv	a5,a0$/;"	l
e14	user/usertests.asm	/^     e14:	01013a03          	ld	s4,16(sp)$/;"	l
e18	user/grep.asm	/^ e18:	0007b603          	ld	a2,0(a5)$/;"	l
e18	user/grind.asm	/^     e18:	fec056e3          	blez	a2,e04 <memmove+0x40>$/;"	l
e18	user/ls.asm	/^ e18:	0014899b          	addiw	s3,s1,1$/;"	l
e18	user/sh.asm	/^     e18:	00158593          	addi	a1,a1,1$/;"	l
e18	user/usertests.asm	/^     e18:	00813a83          	ld	s5,8(sp)$/;"	l
e1c	user/grep.asm	/^ e1c:	02059713          	slli	a4,a1,0x20$/;"	l
e1c	user/grind.asm	/^     e1c:	fff6079b          	addiw	a5,a2,-1$/;"	l
e1c	user/ls.asm	/^ e1c:	00148493          	addi	s1,s1,1$/;"	l
e1c	user/sh.asm	/^     e1c:	00178793          	addi	a5,a5,1$/;"	l
e1c	user/usertests.asm	/^     e1c:	04010113          	addi	sp,sp,64$/;"	l
e20	user/grep.asm	/^ e20:	02075713          	srli	a4,a4,0x20$/;"	l
e20	user/grind.asm	/^     e20:	02079793          	slli	a5,a5,0x20$/;"	l
e20	user/ls.asm	/^ e20:	00000517          	auipc	a0,0x0$/;"	l
e20	user/sh.asm	/^     e20:	fff5c703          	lbu	a4,-1(a1)$/;"	l
e20	user/usertests.asm	/^     e20:	00008067          	ret$/;"	l
e24	user/grep.asm	/^ e24:	00471713          	slli	a4,a4,0x4$/;"	l
e24	user/grind.asm	/^     e24:	0207d793          	srli	a5,a5,0x20$/;"	l
e24	user/ls.asm	/^ e24:	1e053503          	ld	a0,480(a0) # 1000 <freep>$/;"	l
e24	user/sh.asm	/^     e24:	fee78fa3          	sb	a4,-1(a5)$/;"	l
e24	user/usertests.asm	/^     e24:	00048613          	mv	a2,s1$/;"	l
e28	user/grep.asm	/^ e28:	00e68733          	add	a4,a3,a4$/;"	l
e28	user/grind.asm	/^     e28:	fff7c793          	not	a5,a5$/;"	l
e28	user/ls.asm	/^ e28:	02050e63          	beqz	a0,e64 <malloc+0x84>$/;"	l
e28	user/sh.asm	/^     e28:	fe0718e3          	bnez	a4,e18 <strcpy+0x10>$/;"	l
e28	user/usertests.asm	/^     e28:	000a8593          	mv	a1,s5$/;"	l
e2c	user/grep.asm	/^ e2c:	f8e60ae3          	beq	a2,a4,dc0 <free+0x1c>$/;"	l
e2c	user/grind.asm	/^     e2c:	00f707b3          	add	a5,a4,a5$/;"	l
e2c	user/ls.asm	/^ e2c:	00053783          	ld	a5,0(a0)$/;"	l
e2c	user/sh.asm	/^     e2c:	00813403          	ld	s0,8(sp)$/;"	l
e2c	user/usertests.asm	/^     e2c:	00006517          	auipc	a0,0x6$/;"	l
e30	user/grep.asm	/^ e30:	fec53823          	sd	a2,-16(a0)$/;"	l
e30	user/grind.asm	/^     e30:	fff58593          	addi	a1,a1,-1$/;"	l
e30	user/ls.asm	/^ e30:	0087a703          	lw	a4,8(a5)$/;"	l
e30	user/sh.asm	/^     e30:	01010113          	addi	sp,sp,16$/;"	l
e30	user/usertests.asm	/^     e30:	e5450513          	addi	a0,a0,-428 # 6c80 <malloc+0x618>$/;"	l
e34	user/grep.asm	/^ e34:	0087a603          	lw	a2,8(a5)$/;"	l
e34	user/grind.asm	/^     e34:	fff70713          	addi	a4,a4,-1$/;"	l
e34	user/ls.asm	/^ e34:	04977663          	bgeu	a4,s1,e80 <malloc+0xa0>$/;"	l
e34	user/sh.asm	/^     e34:	00008067          	ret$/;"	l
e34	user/usertests.asm	/^     e34:	724050ef          	jal	ra,6558 <printf>$/;"	l
e38	user/grep.asm	/^ e38:	02061713          	slli	a4,a2,0x20$/;"	l
e38	user/grind.asm	/^     e38:	0005c683          	lbu	a3,0(a1)$/;"	l
e38	user/ls.asm	/^ e38:	00098a13          	mv	s4,s3$/;"	l
e38	user/sh.asm	/^     e38:	ff010113          	addi	sp,sp,-16$/;"	l
e38	user/usertests.asm	/^     e38:	00100513          	li	a0,1$/;"	l
e3c	user/grep.asm	/^ e3c:	02075713          	srli	a4,a4,0x20$/;"	l
e3c	user/grind.asm	/^     e3c:	00d70023          	sb	a3,0(a4)$/;"	l
e3c	user/ls.asm	/^ e3c:	0009871b          	sext.w	a4,s3$/;"	l
e3c	user/sh.asm	/^     e3c:	00813423          	sd	s0,8(sp)$/;"	l
e3c	user/usertests.asm	/^     e3c:	13c050ef          	jal	ra,5f78 <exit>$/;"	l
e4	user/cat.asm	/^  e4:	00b989b3          	add	s3,s3,a1$/;"	l
e4	user/echo.asm	/^  e4:	01010113          	addi	sp,sp,16$/;"	l
e4	user/forktest.asm	/^  e4:	02010113          	addi	sp,sp,32$/;"	l
e4	user/grep.asm	/^  e4:	00070513          	mv	a0,a4$/;"	l
e4	user/grind.asm	/^      e4:	63050513          	addi	a0,a0,1584 # 1710 <malloc+0x14c>$/;"	l
e4	user/init.asm	/^  e4:	ff010113          	addi	sp,sp,-16$/;"	l
e4	user/kill.asm	/^  e4:	fe0796e3          	bnez	a5,d0 <strcmp+0x14>$/;"	l
e4	user/ln.asm	/^  e4:	0005c503          	lbu	a0,0(a1)$/;"	l
e4	user/ls.asm	/^  e4:	24913c23          	sd	s1,600(sp)$/;"	l
e4	user/matmul.asm	/^  e4:	00078613          	mv	a2,a5$/;"	l
e4	user/mkdir.asm	/^  e4:	00054783          	lbu	a5,0(a0)$/;"	l
e4	user/rm.asm	/^  e4:	00054783          	lbu	a5,0(a0)$/;"	l
e4	user/sh.asm	/^      e4:	00913c23          	sd	s1,24(sp)$/;"	l
e4	user/stressfs.asm	/^  e4:	fff4849b          	addiw	s1,s1,-1$/;"	l
e4	user/usertests.asm	/^      e4:	71050513          	addi	a0,a0,1808 # 67f0 <malloc+0x188>$/;"	l
e4	user/wc.asm	/^  e4:	04054e63          	bltz	a0,140 <wc+0x140>$/;"	l
e4	user/zombie.asm	/^  e4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
e40	user/grep.asm	/^ e40:	00471713          	slli	a4,a4,0x4$/;"	l
e40	user/grind.asm	/^     e40:	fee798e3          	bne	a5,a4,e30 <memmove+0x6c>$/;"	l
e40	user/ls.asm	/^ e40:	000016b7          	lui	a3,0x1$/;"	l
e40	user/sh.asm	/^     e40:	01010413          	addi	s0,sp,16$/;"	l
e40	user/usertests.asm	/^     e40:	00050613          	mv	a2,a0$/;"	l
e44	user/grep.asm	/^ e44:	00e78733          	add	a4,a5,a4$/;"	l
e44	user/grind.asm	/^     e44:	fc1ff06f          	j	e04 <memmove+0x40>$/;"	l
e44	user/ls.asm	/^ e44:	00d77463          	bgeu	a4,a3,e4c <malloc+0x6c>$/;"	l
e44	user/sh.asm	/^     e44:	00054783          	lbu	a5,0(a0)$/;"	l
e44	user/usertests.asm	/^     e44:	000a8593          	mv	a1,s5$/;"	l
e48	user/grep.asm	/^ e48:	f8e68ae3          	beq	a3,a4,ddc <free+0x38>$/;"	l
e48	user/grind.asm	/^     e48:	ff010113          	addi	sp,sp,-16$/;"	l
e48	user/ls.asm	/^ e48:	00001a37          	lui	s4,0x1$/;"	l
e48	user/sh.asm	/^     e48:	00078e63          	beqz	a5,e64 <strcmp+0x2c>$/;"	l
e48	user/usertests.asm	/^     e48:	00006517          	auipc	a0,0x6$/;"	l
e4c	user/grep.asm	/^ e4c:	00d7b023          	sd	a3,0(a5)$/;"	l
e4c	user/grind.asm	/^     e4c:	00813423          	sd	s0,8(sp)$/;"	l
e4c	user/ls.asm	/^ e4c:	000a0b1b          	sext.w	s6,s4$/;"	l
e4c	user/sh.asm	/^     e4c:	0005c703          	lbu	a4,0(a1)$/;"	l
e4c	user/usertests.asm	/^     e4c:	e6050513          	addi	a0,a0,-416 # 6ca8 <malloc+0x640>$/;"	l
e50	user/grep.asm	/^ e50:	00001717          	auipc	a4,0x1$/;"	l
e50	user/grind.asm	/^     e50:	01010413          	addi	s0,sp,16$/;"	l
e50	user/ls.asm	/^ e50:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
e50	user/sh.asm	/^     e50:	00f71a63          	bne	a4,a5,e64 <strcmp+0x2c>$/;"	l
e50	user/usertests.asm	/^     e50:	708050ef          	jal	ra,6558 <printf>$/;"	l
e54	user/grep.asm	/^ e54:	1af73823          	sd	a5,432(a4) # 2000 <freep>$/;"	l
e54	user/grind.asm	/^     e54:	04060463          	beqz	a2,e9c <memcmp+0x54>$/;"	l
e54	user/ls.asm	/^ e54:	00000917          	auipc	s2,0x0$/;"	l
e54	user/sh.asm	/^     e54:	00150513          	addi	a0,a0,1$/;"	l
e54	user/usertests.asm	/^     e54:	00100513          	li	a0,1$/;"	l
e58	user/grep.asm	/^ e58:	00813403          	ld	s0,8(sp)$/;"	l
e58	user/grind.asm	/^     e58:	fff6069b          	addiw	a3,a2,-1$/;"	l
e58	user/ls.asm	/^ e58:	1ac90913          	addi	s2,s2,428 # 1000 <freep>$/;"	l
e58	user/sh.asm	/^     e58:	00158593          	addi	a1,a1,1$/;"	l
e58	user/usertests.asm	/^     e58:	120050ef          	jal	ra,5f78 <exit>$/;"	l
e5c	user/grep.asm	/^ e5c:	01010113          	addi	sp,sp,16$/;"	l
e5c	user/grind.asm	/^     e5c:	02069693          	slli	a3,a3,0x20$/;"	l
e5c	user/ls.asm	/^ e5c:	fff00a93          	li	s5,-1$/;"	l
e5c	user/sh.asm	/^     e5c:	00054783          	lbu	a5,0(a0)$/;"	l
e5c	user/usertests.asm	/^     e5c:	00048613          	mv	a2,s1$/;"	l
e60	user/grep.asm	/^ e60:	00008067          	ret$/;"	l
e60	user/grind.asm	/^     e60:	0206d693          	srli	a3,a3,0x20$/;"	l
e60	user/ls.asm	/^ e60:	0a00006f          	j	f00 <malloc+0x120>$/;"	l
e60	user/sh.asm	/^     e60:	fe0796e3          	bnez	a5,e4c <strcmp+0x14>$/;"	l
e60	user/usertests.asm	/^     e60:	000a8593          	mv	a1,s5$/;"	l
e64	user/grep.asm	/^ e64:	fc010113          	addi	sp,sp,-64$/;"	l
e64	user/grind.asm	/^     e64:	00168693          	addi	a3,a3,1$/;"	l
e64	user/ls.asm	/^ e64:	00000797          	auipc	a5,0x0$/;"	l
e64	user/sh.asm	/^     e64:	0005c503          	lbu	a0,0(a1)$/;"	l
e64	user/usertests.asm	/^     e64:	00006517          	auipc	a0,0x6$/;"	l
e68	user/grep.asm	/^ e68:	02113c23          	sd	ra,56(sp)$/;"	l
e68	user/grind.asm	/^     e68:	00d506b3          	add	a3,a0,a3$/;"	l
e68	user/ls.asm	/^ e68:	1bc78793          	addi	a5,a5,444 # 1020 <base>$/;"	l
e68	user/sh.asm	/^     e68:	40a7853b          	subw	a0,a5,a0$/;"	l
e68	user/usertests.asm	/^     e68:	e5c50513          	addi	a0,a0,-420 # 6cc0 <malloc+0x658>$/;"	l
e6c	user/grep.asm	/^ e6c:	02813823          	sd	s0,48(sp)$/;"	l
e6c	user/grind.asm	/^     e6c:	00054783          	lbu	a5,0(a0)$/;"	l
e6c	user/ls.asm	/^ e6c:	00000717          	auipc	a4,0x0$/;"	l
e6c	user/sh.asm	/^     e6c:	00813403          	ld	s0,8(sp)$/;"	l
e6c	user/usertests.asm	/^     e6c:	6ec050ef          	jal	ra,6558 <printf>$/;"	l
e70	user/grep.asm	/^ e70:	02913423          	sd	s1,40(sp)$/;"	l
e70	user/grind.asm	/^     e70:	0005c703          	lbu	a4,0(a1)$/;"	l
e70	user/ls.asm	/^ e70:	18f73a23          	sd	a5,404(a4) # 1000 <freep>$/;"	l
e70	user/sh.asm	/^     e70:	01010113          	addi	sp,sp,16$/;"	l
e70	user/usertests.asm	/^     e70:	00100513          	li	a0,1$/;"	l
e74	user/grep.asm	/^ e74:	03213023          	sd	s2,32(sp)$/;"	l
e74	user/grind.asm	/^     e74:	00e79c63          	bne	a5,a4,e8c <memcmp+0x44>$/;"	l
e74	user/ls.asm	/^ e74:	00f7b023          	sd	a5,0(a5)$/;"	l
e74	user/sh.asm	/^     e74:	00008067          	ret$/;"	l
e74	user/usertests.asm	/^     e74:	104050ef          	jal	ra,5f78 <exit>$/;"	l
e78	user/grep.asm	/^ e78:	01313c23          	sd	s3,24(sp)$/;"	l
e78	user/grind.asm	/^     e78:	00150513          	addi	a0,a0,1$/;"	l
e78	user/ls.asm	/^ e78:	0007a423          	sw	zero,8(a5)$/;"	l
e78	user/sh.asm	/^     e78:	ff010113          	addi	sp,sp,-16$/;"	l
e78	user/usertests.asm	/^     e78:	000a8593          	mv	a1,s5$/;"	l
e7c	user/grep.asm	/^ e7c:	01413823          	sd	s4,16(sp)$/;"	l
e7c	user/grind.asm	/^     e7c:	00158593          	addi	a1,a1,1$/;"	l
e7c	user/ls.asm	/^ e7c:	fbdff06f          	j	e38 <malloc+0x58>$/;"	l
e7c	user/sh.asm	/^     e7c:	00813423          	sd	s0,8(sp)$/;"	l
e7c	user/usertests.asm	/^     e7c:	00006517          	auipc	a0,0x6$/;"	l
e8	user/cat.asm	/^  e8:	00000593          	li	a1,0$/;"	l
e8	user/echo.asm	/^  e8:	00008067          	ret$/;"	l
e8	user/forktest.asm	/^  e8:	00008067          	ret$/;"	l
e8	user/grep.asm	/^  e8:	f19ff0ef          	jal	ra,0 <matchstar>$/;"	l
e8	user/grind.asm	/^      e8:	689000ef          	jal	ra,f70 <mkdir>$/;"	l
e8	user/init.asm	/^  e8:	00113423          	sd	ra,8(sp)$/;"	l
e8	user/kill.asm	/^  e8:	0005c503          	lbu	a0,0(a1)$/;"	l
e8	user/ln.asm	/^  e8:	40a7853b          	subw	a0,a5,a0$/;"	l
e8	user/ls.asm	/^  e8:	25213823          	sd	s2,592(sp)$/;"	l
e8	user/matmul.asm	/^  e8:	0316a50b          	0x316a50b$/;"	l
e8	user/mkdir.asm	/^  e8:	00078e63          	beqz	a5,104 <strcmp+0x2c>$/;"	l
e8	user/rm.asm	/^  e8:	00078e63          	beqz	a5,104 <strcmp+0x2c>$/;"	l
e8	user/sh.asm	/^      e8:	03010413          	addi	s0,sp,48$/;"	l
e8	user/stressfs.asm	/^  e8:	fe0496e3          	bnez	s1,d4 <main+0xd4>$/;"	l
e8	user/usertests.asm	/^      e8:	470060ef          	jal	ra,6558 <printf>$/;"	l
e8	user/wc.asm	/^  e8:	f8043703          	ld	a4,-128(s0)$/;"	l
e8	user/zombie.asm	/^  e8:	fe071ae3          	bnez	a4,dc <strlen+0x24>$/;"	l
e80	user/grep.asm	/^ e80:	01513423          	sd	s5,8(sp)$/;"	l
e80	user/grind.asm	/^     e80:	fed516e3          	bne	a0,a3,e6c <memcmp+0x24>$/;"	l
e80	user/ls.asm	/^ e80:	04e48a63          	beq	s1,a4,ed4 <malloc+0xf4>$/;"	l
e80	user/sh.asm	/^     e80:	01010413          	addi	s0,sp,16$/;"	l
e80	user/usertests.asm	/^     e80:	e6c50513          	addi	a0,a0,-404 # 6ce8 <malloc+0x680>$/;"	l
e84	user/grep.asm	/^ e84:	01613023          	sd	s6,0(sp)$/;"	l
e84	user/grind.asm	/^     e84:	00000513          	li	a0,0$/;"	l
e84	user/ls.asm	/^ e84:	4137073b          	subw	a4,a4,s3$/;"	l
e84	user/sh.asm	/^     e84:	00054783          	lbu	a5,0(a0)$/;"	l
e84	user/usertests.asm	/^     e84:	6d4050ef          	jal	ra,6558 <printf>$/;"	l
e88	user/grep.asm	/^ e88:	04010413          	addi	s0,sp,64$/;"	l
e88	user/grind.asm	/^     e88:	0080006f          	j	e90 <memcmp+0x48>$/;"	l
e88	user/ls.asm	/^ e88:	00e7a423          	sw	a4,8(a5)$/;"	l
e88	user/sh.asm	/^     e88:	02078863          	beqz	a5,eb8 <strlen+0x40>$/;"	l
e88	user/usertests.asm	/^     e88:	00100513          	li	a0,1$/;"	l
e8c	user/grep.asm	/^ e8c:	02051493          	slli	s1,a0,0x20$/;"	l
e8c	user/grind.asm	/^     e8c:	40e7853b          	subw	a0,a5,a4$/;"	l
e8c	user/ls.asm	/^ e8c:	02071713          	slli	a4,a4,0x20$/;"	l
e8c	user/sh.asm	/^     e8c:	00150513          	addi	a0,a0,1$/;"	l
e8c	user/usertests.asm	/^     e8c:	0ec050ef          	jal	ra,5f78 <exit>$/;"	l
e90	user/grep.asm	/^ e90:	0204d493          	srli	s1,s1,0x20$/;"	l
e90	user/grind.asm	/^     e90:	00813403          	ld	s0,8(sp)$/;"	l
e90	user/ls.asm	/^ e90:	02075713          	srli	a4,a4,0x20$/;"	l
e90	user/sh.asm	/^     e90:	00050793          	mv	a5,a0$/;"	l
e90	user/usertests.asm	/^     e90:	fd010113          	addi	sp,sp,-48$/;"	l
e94	user/grep.asm	/^ e94:	00f48493          	addi	s1,s1,15$/;"	l
e94	user/grind.asm	/^     e94:	01010113          	addi	sp,sp,16$/;"	l
e94	user/ls.asm	/^ e94:	00471713          	slli	a4,a4,0x4$/;"	l
e94	user/sh.asm	/^     e94:	00100693          	li	a3,1$/;"	l
e94	user/usertests.asm	/^     e94:	02113423          	sd	ra,40(sp)$/;"	l
e98	user/grep.asm	/^ e98:	0044d493          	srli	s1,s1,0x4$/;"	l
e98	user/grind.asm	/^     e98:	00008067          	ret$/;"	l
e98	user/ls.asm	/^ e98:	00e787b3          	add	a5,a5,a4$/;"	l
e98	user/sh.asm	/^     e98:	40a686bb          	subw	a3,a3,a0$/;"	l
e98	user/usertests.asm	/^     e98:	02813023          	sd	s0,32(sp)$/;"	l
e9c	user/grep.asm	/^ e9c:	0014899b          	addiw	s3,s1,1$/;"	l
e9c	user/grind.asm	/^     e9c:	00000513          	li	a0,0$/;"	l
e9c	user/ls.asm	/^ e9c:	0137a423          	sw	s3,8(a5)$/;"	l
e9c	user/sh.asm	/^     e9c:	00f6853b          	addw	a0,a3,a5$/;"	l
e9c	user/usertests.asm	/^     e9c:	00913c23          	sd	s1,24(sp)$/;"	l
ea0	user/grep.asm	/^ ea0:	00148493          	addi	s1,s1,1$/;"	l
ea0	user/grind.asm	/^     ea0:	ff1ff06f          	j	e90 <memcmp+0x48>$/;"	l
ea0	user/ls.asm	/^ ea0:	00000717          	auipc	a4,0x0$/;"	l
ea0	user/sh.asm	/^     ea0:	00178793          	addi	a5,a5,1$/;"	l
ea0	user/usertests.asm	/^     ea0:	01213823          	sd	s2,16(sp)$/;"	l
ea4	user/grep.asm	/^ ea4:	00001517          	auipc	a0,0x1$/;"	l
ea4	user/grind.asm	/^     ea4:	ff010113          	addi	sp,sp,-16$/;"	l
ea4	user/ls.asm	/^ ea4:	16a73023          	sd	a0,352(a4) # 1000 <freep>$/;"	l
ea4	user/sh.asm	/^     ea4:	fff7c703          	lbu	a4,-1(a5)$/;"	l
ea4	user/usertests.asm	/^     ea4:	01313423          	sd	s3,8(sp)$/;"	l
ea8	user/grep.asm	/^ ea8:	15c53503          	ld	a0,348(a0) # 2000 <freep>$/;"	l
ea8	user/grind.asm	/^     ea8:	00113423          	sd	ra,8(sp)$/;"	l
ea8	user/ls.asm	/^ ea8:	01078513          	addi	a0,a5,16$/;"	l
ea8	user/sh.asm	/^     ea8:	fe071ae3          	bnez	a4,e9c <strlen+0x24>$/;"	l
ea8	user/usertests.asm	/^     ea8:	03010413          	addi	s0,sp,48$/;"	l
eac	user/grep.asm	/^ eac:	02050e63          	beqz	a0,ee8 <malloc+0x84>$/;"	l
eac	user/grind.asm	/^     eac:	00813023          	sd	s0,0(sp)$/;"	l
eac	user/ls.asm	/^ eac:	03813083          	ld	ra,56(sp)$/;"	l
eac	user/sh.asm	/^     eac:	00813403          	ld	s0,8(sp)$/;"	l
eac	user/usertests.asm	/^     eac:	00050993          	mv	s3,a0$/;"	l
eargv	user/sh.c	/^  char *eargv[MAXARGS];$/;"	m	struct:execcmd	file:
eb0	user/grep.asm	/^ eb0:	00053783          	ld	a5,0(a0)$/;"	l
eb0	user/grind.asm	/^     eb0:	01010413          	addi	s0,sp,16$/;"	l
eb0	user/ls.asm	/^ eb0:	03013403          	ld	s0,48(sp)$/;"	l
eb0	user/sh.asm	/^     eb0:	01010113          	addi	sp,sp,16$/;"	l
eb0	user/usertests.asm	/^     eb0:	20200593          	li	a1,514$/;"	l
eb4	user/grep.asm	/^ eb4:	0087a703          	lw	a4,8(a5)$/;"	l
eb4	user/grind.asm	/^     eb4:	f11ff0ef          	jal	ra,dc4 <memmove>$/;"	l
eb4	user/ls.asm	/^ eb4:	02813483          	ld	s1,40(sp)$/;"	l
eb4	user/sh.asm	/^     eb4:	00008067          	ret$/;"	l
eb4	user/usertests.asm	/^     eb4:	00006517          	auipc	a0,0x6$/;"	l
eb8	user/grep.asm	/^ eb8:	04977663          	bgeu	a4,s1,f04 <malloc+0xa0>$/;"	l
eb8	user/grind.asm	/^     eb8:	00813083          	ld	ra,8(sp)$/;"	l
eb8	user/ls.asm	/^ eb8:	02013903          	ld	s2,32(sp)$/;"	l
eb8	user/sh.asm	/^     eb8:	00000513          	li	a0,0$/;"	l
eb8	user/usertests.asm	/^     eb8:	e4c50513          	addi	a0,a0,-436 # 6d00 <malloc+0x698>$/;"	l
ebc	user/grep.asm	/^ ebc:	00098a13          	mv	s4,s3$/;"	l
ebc	user/grind.asm	/^     ebc:	00013403          	ld	s0,0(sp)$/;"	l
ebc	user/ls.asm	/^ ebc:	01813983          	ld	s3,24(sp)$/;"	l
ebc	user/sh.asm	/^     ebc:	ff1ff06f          	j	eac <strlen+0x34>$/;"	l
ebc	user/usertests.asm	/^     ebc:	11c050ef          	jal	ra,5fd8 <open>$/;"	l
ec	user/cat.asm	/^  ec:	00093503          	ld	a0,0(s2)$/;"	l
ec	user/echo.asm	/^  ec:	ff010113          	addi	sp,sp,-16$/;"	l
ec	user/forktest.asm	/^  ec:	00000517          	auipc	a0,0x0$/;"	l
ec	user/grep.asm	/^  ec:	fe1ff06f          	j	cc <matchhere+0x4c>$/;"	l
ec	user/grind.asm	/^      ec:	00001517          	auipc	a0,0x1$/;"	l
ec	user/init.asm	/^  ec:	00813023          	sd	s0,0(sp)$/;"	l
ec	user/kill.asm	/^  ec:	40a7853b          	subw	a0,a5,a0$/;"	l
ec	user/ln.asm	/^  ec:	00813403          	ld	s0,8(sp)$/;"	l
ec	user/ls.asm	/^  ec:	25313423          	sd	s3,584(sp)$/;"	l
ec	user/matmul.asm	/^  ec:	00050793          	mv	a5,a0$/;"	l
ec	user/mkdir.asm	/^  ec:	0005c703          	lbu	a4,0(a1)$/;"	l
ec	user/rm.asm	/^  ec:	0005c703          	lbu	a4,0(a1)$/;"	l
ec	user/sh.asm	/^      ec:	02050a63          	beqz	a0,120 <runcmd+0x48>$/;"	l
ec	user/stressfs.asm	/^  ec:	00090513          	mv	a0,s2$/;"	l
ec	user/usertests.asm	/^      ec:	00100513          	li	a0,1$/;"	l
ec	user/wc.asm	/^  ec:	000c8693          	mv	a3,s9$/;"	l
ec	user/zombie.asm	/^  ec:	00813403          	ld	s0,8(sp)$/;"	l
ec0	user/grep.asm	/^ ec0:	0009871b          	sext.w	a4,s3$/;"	l
ec0	user/grind.asm	/^     ec0:	01010113          	addi	sp,sp,16$/;"	l
ec0	user/ls.asm	/^ ec0:	01013a03          	ld	s4,16(sp)$/;"	l
ec0	user/sh.asm	/^     ec0:	ff010113          	addi	sp,sp,-16$/;"	l
ec0	user/usertests.asm	/^     ec0:	0e054663          	bltz	a0,fac <unlinkread+0x11c>$/;"	l
ec4	user/grep.asm	/^ ec4:	000016b7          	lui	a3,0x1$/;"	l
ec4	user/grind.asm	/^     ec4:	00008067          	ret$/;"	l
ec4	user/ls.asm	/^ ec4:	00813a83          	ld	s5,8(sp)$/;"	l
ec4	user/sh.asm	/^     ec4:	00813423          	sd	s0,8(sp)$/;"	l
ec4	user/usertests.asm	/^     ec4:	00050493          	mv	s1,a0$/;"	l
ec8	user/grep.asm	/^ ec8:	00d77463          	bgeu	a4,a3,ed0 <malloc+0x6c>$/;"	l
ec8	user/grind.asm	/^     ec8:	00100893          	li	a7,1$/;"	l
ec8	user/ls.asm	/^ ec8:	00013b03          	ld	s6,0(sp)$/;"	l
ec8	user/sh.asm	/^     ec8:	01010413          	addi	s0,sp,16$/;"	l
ec8	user/usertests.asm	/^     ec8:	00500613          	li	a2,5$/;"	l
ecc	user/grep.asm	/^ ecc:	00001a37          	lui	s4,0x1$/;"	l
ecc	user/grind.asm	/^     ecc:	00000073          	ecall$/;"	l
ecc	user/ls.asm	/^ ecc:	04010113          	addi	sp,sp,64$/;"	l
ecc	user/sh.asm	/^     ecc:	02060463          	beqz	a2,ef4 <memset+0x34>$/;"	l
ecc	user/usertests.asm	/^     ecc:	00006597          	auipc	a1,0x6$/;"	l
ecmd	user/sh.asm	/^    ecmd = (struct execcmd*)cmd;$/;"	d
ed0	user/grep.asm	/^ ed0:	000a0b1b          	sext.w	s6,s4$/;"	l
ed0	user/grind.asm	/^     ed0:	00008067          	ret$/;"	l
ed0	user/ls.asm	/^ ed0:	00008067          	ret$/;"	l
ed0	user/sh.asm	/^     ed0:	00050793          	mv	a5,a0$/;"	l
ed0	user/usertests.asm	/^     ed0:	e6458593          	addi	a1,a1,-412 # 6d30 <malloc+0x6c8>$/;"	l
ed4	user/grep.asm	/^ ed4:	004a1a1b          	slliw	s4,s4,0x4$/;"	l
ed4	user/grind.asm	/^     ed4:	00200893          	li	a7,2$/;"	l
ed4	user/ls.asm	/^ ed4:	0007b703          	ld	a4,0(a5)$/;"	l
ed4	user/sh.asm	/^     ed4:	fff6071b          	addiw	a4,a2,-1$/;"	l
ed4	user/usertests.asm	/^     ed4:	0d4050ef          	jal	ra,5fa8 <write>$/;"	l
ed8	user/grep.asm	/^ ed8:	00001917          	auipc	s2,0x1$/;"	l
ed8	user/grind.asm	/^     ed8:	00000073          	ecall$/;"	l
ed8	user/ls.asm	/^ ed8:	00e53023          	sd	a4,0(a0)$/;"	l
ed8	user/sh.asm	/^     ed8:	02071713          	slli	a4,a4,0x20$/;"	l
ed8	user/usertests.asm	/^     ed8:	00048513          	mv	a0,s1$/;"	l
edc	user/grep.asm	/^ edc:	12890913          	addi	s2,s2,296 # 2000 <freep>$/;"	l
edc	user/grind.asm	/^     edc:	00008067          	ret$/;"	l
edc	user/ls.asm	/^ edc:	fc5ff06f          	j	ea0 <malloc+0xc0>$/;"	l
edc	user/sh.asm	/^     edc:	02075713          	srli	a4,a4,0x20$/;"	l
edc	user/usertests.asm	/^     edc:	0d8050ef          	jal	ra,5fb4 <close>$/;"	l
ee0	user/grep.asm	/^ ee0:	fff00a93          	li	s5,-1$/;"	l
ee0	user/grind.asm	/^     ee0:	00300893          	li	a7,3$/;"	l
ee0	user/ls.asm	/^ ee0:	01652423          	sw	s6,8(a0)$/;"	l
ee0	user/sh.asm	/^     ee0:	00170713          	addi	a4,a4,1$/;"	l
ee0	user/usertests.asm	/^     ee0:	00200593          	li	a1,2$/;"	l
ee4	user/grep.asm	/^ ee4:	0a00006f          	j	f84 <malloc+0x120>$/;"	l
ee4	user/grind.asm	/^     ee4:	00000073          	ecall$/;"	l
ee4	user/ls.asm	/^ ee4:	01050513          	addi	a0,a0,16$/;"	l
ee4	user/sh.asm	/^     ee4:	00a70733          	add	a4,a4,a0$/;"	l
ee4	user/usertests.asm	/^     ee4:	00006517          	auipc	a0,0x6$/;"	l
ee8	user/grep.asm	/^ ee8:	00001797          	auipc	a5,0x1$/;"	l
ee8	user/grind.asm	/^     ee8:	00008067          	ret$/;"	l
ee8	user/ls.asm	/^ ee8:	e39ff0ef          	jal	ra,d20 <free>$/;"	l
ee8	user/sh.asm	/^     ee8:	00b78023          	sb	a1,0(a5)$/;"	l
ee8	user/usertests.asm	/^     ee8:	e1c50513          	addi	a0,a0,-484 # 6d00 <malloc+0x698>$/;"	l
eec	user/grep.asm	/^ eec:	52878793          	addi	a5,a5,1320 # 2410 <base>$/;"	l
eec	user/grind.asm	/^     eec:	00400893          	li	a7,4$/;"	l
eec	user/ls.asm	/^ eec:	00093503          	ld	a0,0(s2)$/;"	l
eec	user/sh.asm	/^     eec:	00178793          	addi	a5,a5,1$/;"	l
eec	user/usertests.asm	/^     eec:	0ec050ef          	jal	ra,5fd8 <open>$/;"	l
ef0	user/grep.asm	/^ ef0:	00001717          	auipc	a4,0x1$/;"	l
ef0	user/grind.asm	/^     ef0:	00000073          	ecall$/;"	l
ef0	user/ls.asm	/^ ef0:	fa050ee3          	beqz	a0,eac <malloc+0xcc>$/;"	l
ef0	user/sh.asm	/^     ef0:	fee79ce3          	bne	a5,a4,ee8 <memset+0x28>$/;"	l
ef0	user/usertests.asm	/^     ef0:	00050493          	mv	s1,a0$/;"	l
ef4	user/grep.asm	/^ ef4:	10f73823          	sd	a5,272(a4) # 2000 <freep>$/;"	l
ef4	user/grind.asm	/^     ef4:	00008067          	ret$/;"	l
ef4	user/ls.asm	/^ ef4:	00053783          	ld	a5,0(a0)$/;"	l
ef4	user/sh.asm	/^     ef4:	00813403          	ld	s0,8(sp)$/;"	l
ef4	user/usertests.asm	/^     ef4:	0c054863          	bltz	a0,fc4 <unlinkread+0x134>$/;"	l
ef8	user/grep.asm	/^ ef8:	00f7b023          	sd	a5,0(a5)$/;"	l
ef8	user/grind.asm	/^     ef8:	00500893          	li	a7,5$/;"	l
ef8	user/ls.asm	/^ ef8:	0087a703          	lw	a4,8(a5)$/;"	l
ef8	user/sh.asm	/^     ef8:	01010113          	addi	sp,sp,16$/;"	l
ef8	user/usertests.asm	/^     ef8:	00006517          	auipc	a0,0x6$/;"	l
efc	user/grep.asm	/^ efc:	0007a423          	sw	zero,8(a5)$/;"	l
efc	user/grind.asm	/^     efc:	00000073          	ecall$/;"	l
efc	user/ls.asm	/^ efc:	f89772e3          	bgeu	a4,s1,e80 <malloc+0xa0>$/;"	l
efc	user/sh.asm	/^     efc:	00008067          	ret$/;"	l
efc	user/usertests.asm	/^     efc:	e0850513          	addi	a0,a0,-504 # 6d00 <malloc+0x698>$/;"	l
efile	user/sh.c	/^  char *efile;$/;"	m	struct:redircmd	file:
ehsize	kernel/elf.h	/^  ushort ehsize;$/;"	m	struct:elfhdr
either_copyin	kernel/proc.c	/^either_copyin(void *dst, int user_src, uint64 src, uint64 len)$/;"	f
either_copyout	kernel/proc.c	/^either_copyout(int user_dst, uint64 dst, void *src, uint64 len)$/;"	f
elf	kernel/elf.h	/^  uchar elf[12];$/;"	m	struct:elfhdr
elfhdr	kernel/elf.h	/^struct elfhdr {$/;"	s
empty	kernel/kernel.asm	/^  empty = 0;$/;"	d
end_op	kernel/log.c	/^end_op(void)$/;"	f
entry	kernel/elf.h	/^  uint64 entry;$/;"	m	struct:elfhdr
entry	user/usys.pl	/^sub entry {$/;"	s
epc	kernel/proc.h	/^  \/*  24 *\/ uint64 epc;           \/\/ saved user program counter$/;"	m	struct:trapframe
err	kernel/kernel.asm	/^ err:$/;"	l
es	user/sh.asm	/^  es = s + strlen(s);$/;"	d
exec	kernel/exec.c	/^exec(char *path, char **argv)$/;"	f
exec	user/cat.asm	/^exec:$/;"	l
exec	user/echo.asm	/^exec:$/;"	l
exec	user/forktest.asm	/^exec:$/;"	l
exec	user/grep.asm	/^exec:$/;"	l
exec	user/grind.asm	/^exec:$/;"	l
exec	user/init.asm	/^exec:$/;"	l
exec	user/kill.asm	/^exec:$/;"	l
exec	user/ln.asm	/^exec:$/;"	l
exec	user/ls.asm	/^exec:$/;"	l
exec	user/matmul.asm	/^exec:$/;"	l
exec	user/mkdir.asm	/^exec:$/;"	l
exec	user/rm.asm	/^exec:$/;"	l
exec	user/sh.asm	/^exec:$/;"	l
exec	user/stressfs.asm	/^exec:$/;"	l
exec	user/usertests.asm	/^exec:$/;"	l
exec	user/usys.S	/^exec:$/;"	l
exec	user/wc.asm	/^exec:$/;"	l
exec	user/zombie.asm	/^exec:$/;"	l
execcmd	user/sh.c	/^execcmd(void)$/;"	f
execcmd	user/sh.c	/^struct execcmd {$/;"	s	file:
execout	user/usertests.c	/^execout(char *s)$/;"	f
exectest	user/usertests.c	/^exectest(char *s)$/;"	f
exit	kernel/proc.c	/^exit(int status)$/;"	f
exit	user/cat.asm	/^exit:$/;"	l
exit	user/echo.asm	/^exit:$/;"	l
exit	user/forktest.asm	/^exit:$/;"	l
exit	user/grep.asm	/^exit:$/;"	l
exit	user/grind.asm	/^exit:$/;"	l
exit	user/init.asm	/^exit:$/;"	l
exit	user/initcode.S	/^exit:$/;"	l
exit	user/initcode.asm	/^exit:$/;"	l
exit	user/kill.asm	/^exit:$/;"	l
exit	user/ln.asm	/^exit:$/;"	l
exit	user/ls.asm	/^exit:$/;"	l
exit	user/matmul.asm	/^exit:$/;"	l
exit	user/mkdir.asm	/^exit:$/;"	l
exit	user/rm.asm	/^exit:$/;"	l
exit	user/sh.asm	/^exit:$/;"	l
exit	user/stressfs.asm	/^exit:$/;"	l
exit	user/usertests.asm	/^exit:$/;"	l
exit	user/usys.S	/^exit:$/;"	l
exit	user/wc.asm	/^exit:$/;"	l
exit	user/zombie.asm	/^exit:$/;"	l
exitiputtest	user/usertests.c	/^exitiputtest(char *s)$/;"	f
exitwait	user/usertests.c	/^exitwait(char *s)$/;"	f
f	user/usertests.c	/^  void (*f)(char *);$/;"	m	struct:test	file:
f0	user/cat.asm	/^  f0:	49c000ef          	jal	ra,58c <open>$/;"	l
f0	user/echo.asm	/^  f0:	00813423          	sd	s0,8(sp)$/;"	l
f0	user/forktest.asm	/^  f0:	54c50513          	addi	a0,a0,1356 # 638 <uptime+0x3c>$/;"	l
f0	user/grep.asm	/^  f0:	00068a63          	beqz	a3,104 <matchhere+0x84>$/;"	l
f0	user/grind.asm	/^      f0:	62450513          	addi	a0,a0,1572 # 1710 <malloc+0x14c>$/;"	l
f0	user/init.asm	/^  f0:	01010413          	addi	s0,sp,16$/;"	l
f0	user/kill.asm	/^  f0:	00813403          	ld	s0,8(sp)$/;"	l
f0	user/ln.asm	/^  f0:	01010113          	addi	sp,sp,16$/;"	l
f0	user/ls.asm	/^  f0:	25413023          	sd	s4,576(sp)$/;"	l
f0	user/matmul.asm	/^  f0:	0007879b          	sext.w	a5,a5$/;"	l
f0	user/mkdir.asm	/^  f0:	00f71a63          	bne	a4,a5,104 <strcmp+0x2c>$/;"	l
f0	user/rm.asm	/^  f0:	00f71a63          	bne	a4,a5,104 <strcmp+0x2c>$/;"	l
f0	user/sh.asm	/^      f0:	00050493          	mv	s1,a0$/;"	l
f0	user/stressfs.asm	/^  f0:	438000ef          	jal	ra,528 <close>$/;"	l
f0	user/usertests.asm	/^      f0:	689050ef          	jal	ra,5f78 <exit>$/;"	l
f0	user/wc.asm	/^  f0:	000c0613          	mv	a2,s8$/;"	l
f0	user/zombie.asm	/^  f0:	01010113          	addi	sp,sp,16$/;"	l
f00	user/grep.asm	/^ f00:	fbdff06f          	j	ebc <malloc+0x58>$/;"	l
f00	user/grind.asm	/^     f00:	00008067          	ret$/;"	l
f00	user/ls.asm	/^ f00:	00093703          	ld	a4,0(s2)$/;"	l
f00	user/sh.asm	/^     f00:	ff010113          	addi	sp,sp,-16$/;"	l
f00	user/usertests.asm	/^     f00:	0f0050ef          	jal	ra,5ff0 <unlink>$/;"	l
f04	user/grep.asm	/^ f04:	04e48a63          	beq	s1,a4,f58 <malloc+0xf4>$/;"	l
f04	user/grind.asm	/^     f04:	01000893          	li	a7,16$/;"	l
f04	user/ls.asm	/^ f04:	00078513          	mv	a0,a5$/;"	l
f04	user/sh.asm	/^     f04:	00813423          	sd	s0,8(sp)$/;"	l
f04	user/usertests.asm	/^     f04:	0c051c63          	bnez	a0,fdc <unlinkread+0x14c>$/;"	l
f08	user/grep.asm	/^ f08:	4137073b          	subw	a4,a4,s3$/;"	l
f08	user/grind.asm	/^     f08:	00000073          	ecall$/;"	l
f08	user/ls.asm	/^ f08:	fef716e3          	bne	a4,a5,ef4 <malloc+0x114>$/;"	l
f08	user/sh.asm	/^     f08:	01010413          	addi	s0,sp,16$/;"	l
f08	user/usertests.asm	/^     f08:	20200593          	li	a1,514$/;"	l
f0c	user/grep.asm	/^ f0c:	00e7a423          	sw	a4,8(a5)$/;"	l
f0c	user/grind.asm	/^     f0c:	00008067          	ret$/;"	l
f0c	user/ls.asm	/^ f0c:	000a0513          	mv	a0,s4$/;"	l
f0c	user/sh.asm	/^     f0c:	00054783          	lbu	a5,0(a0)$/;"	l
f0c	user/usertests.asm	/^     f0c:	00006517          	auipc	a0,0x6$/;"	l
f10	user/grep.asm	/^ f10:	02071713          	slli	a4,a4,0x20$/;"	l
f10	user/grind.asm	/^     f10:	01500893          	li	a7,21$/;"	l
f10	user/ls.asm	/^ f10:	8adff0ef          	jal	ra,7bc <sbrk>$/;"	l
f10	user/sh.asm	/^     f10:	02078263          	beqz	a5,f34 <strchr+0x34>$/;"	l
f10	user/usertests.asm	/^     f10:	df450513          	addi	a0,a0,-524 # 6d00 <malloc+0x698>$/;"	l
f14	user/grep.asm	/^ f14:	02075713          	srli	a4,a4,0x20$/;"	l
f14	user/grind.asm	/^     f14:	00000073          	ecall$/;"	l
f14	user/ls.asm	/^ f14:	fd5516e3          	bne	a0,s5,ee0 <malloc+0x100>$/;"	l
f14	user/sh.asm	/^     f14:	00f58a63          	beq	a1,a5,f28 <strchr+0x28>$/;"	l
f14	user/usertests.asm	/^     f14:	0c4050ef          	jal	ra,5fd8 <open>$/;"	l
f18	user/grep.asm	/^ f18:	00471713          	slli	a4,a4,0x4$/;"	l
f18	user/grind.asm	/^     f18:	00008067          	ret$/;"	l
f18	user/ls.asm	/^ f18:	00000513          	li	a0,0$/;"	l
f18	user/sh.asm	/^     f18:	00150513          	addi	a0,a0,1$/;"	l
f18	user/usertests.asm	/^     f18:	00050913          	mv	s2,a0$/;"	l
f1c	user/grep.asm	/^ f1c:	00e787b3          	add	a5,a5,a4$/;"	l
f1c	user/grind.asm	/^     f1c:	00600893          	li	a7,6$/;"	l
f1c	user/ls.asm	/^ f1c:	f91ff06f          	j	eac <malloc+0xcc>$/;"	l
f1c	user/sh.asm	/^     f1c:	00054783          	lbu	a5,0(a0)$/;"	l
f1c	user/usertests.asm	/^     f1c:	00300613          	li	a2,3$/;"	l
f20	user/grep.asm	/^ f20:	0137a423          	sw	s3,8(a5)$/;"	l
f20	user/grind.asm	/^     f20:	00000073          	ecall$/;"	l
f20	user/sh.asm	/^     f20:	fe079ae3          	bnez	a5,f14 <strchr+0x14>$/;"	l
f20	user/usertests.asm	/^     f20:	00006597          	auipc	a1,0x6$/;"	l
f24	user/grep.asm	/^ f24:	00001717          	auipc	a4,0x1$/;"	l
f24	user/grind.asm	/^     f24:	00008067          	ret$/;"	l
f24	user/sh.asm	/^     f24:	00000513          	li	a0,0$/;"	l
f24	user/usertests.asm	/^     f24:	e5858593          	addi	a1,a1,-424 # 6d78 <malloc+0x710>$/;"	l
f28	user/grep.asm	/^ f28:	0ca73e23          	sd	a0,220(a4) # 2000 <freep>$/;"	l
f28	user/grind.asm	/^     f28:	00700893          	li	a7,7$/;"	l
f28	user/sh.asm	/^     f28:	00813403          	ld	s0,8(sp)$/;"	l
f28	user/usertests.asm	/^     f28:	080050ef          	jal	ra,5fa8 <write>$/;"	l
f2c	user/grep.asm	/^ f2c:	01078513          	addi	a0,a5,16$/;"	l
f2c	user/grind.asm	/^     f2c:	00000073          	ecall$/;"	l
f2c	user/sh.asm	/^     f2c:	01010113          	addi	sp,sp,16$/;"	l
f2c	user/usertests.asm	/^     f2c:	00090513          	mv	a0,s2$/;"	l
f30	user/grep.asm	/^ f30:	03813083          	ld	ra,56(sp)$/;"	l
f30	user/grind.asm	/^     f30:	00008067          	ret$/;"	l
f30	user/sh.asm	/^     f30:	00008067          	ret$/;"	l
f30	user/usertests.asm	/^     f30:	084050ef          	jal	ra,5fb4 <close>$/;"	l
f34	user/grep.asm	/^ f34:	03013403          	ld	s0,48(sp)$/;"	l
f34	user/grind.asm	/^     f34:	00f00893          	li	a7,15$/;"	l
f34	user/sh.asm	/^     f34:	00000513          	li	a0,0$/;"	l
f34	user/usertests.asm	/^     f34:	00003637          	lui	a2,0x3$/;"	l
f38	user/grep.asm	/^ f38:	02813483          	ld	s1,40(sp)$/;"	l
f38	user/grind.asm	/^     f38:	00000073          	ecall$/;"	l
f38	user/sh.asm	/^     f38:	ff1ff06f          	j	f28 <strchr+0x28>$/;"	l
f38	user/usertests.asm	/^     f38:	0000c597          	auipc	a1,0xc$/;"	l
f3c	user/grep.asm	/^ f3c:	02013903          	ld	s2,32(sp)$/;"	l
f3c	user/grind.asm	/^     f3c:	00008067          	ret$/;"	l
f3c	user/sh.asm	/^     f3c:	fa010113          	addi	sp,sp,-96$/;"	l
f3c	user/usertests.asm	/^     f3c:	d4058593          	addi	a1,a1,-704 # cc78 <buf>$/;"	l
f4	user/cat.asm	/^  f4:	00050493          	mv	s1,a0$/;"	l
f4	user/echo.asm	/^  f4:	01010413          	addi	s0,sp,16$/;"	l
f4	user/forktest.asm	/^  f4:	f0dff0ef          	jal	ra,0 <print>$/;"	l
f4	user/grep.asm	/^  f4:	0005c683          	lbu	a3,0(a1)$/;"	l
f4	user/grind.asm	/^      f4:	689000ef          	jal	ra,f7c <chdir>$/;"	l
f4	user/init.asm	/^  f4:	f0dff0ef          	jal	ra,0 <main>$/;"	l
f4	user/kill.asm	/^  f4:	01010113          	addi	sp,sp,16$/;"	l
f4	user/ln.asm	/^  f4:	00008067          	ret$/;"	l
f4	user/ls.asm	/^  f4:	23513c23          	sd	s5,568(sp)$/;"	l
f4	user/matmul.asm	/^  f4:	00468693          	addi	a3,a3,4$/;"	l
f4	user/mkdir.asm	/^  f4:	00150513          	addi	a0,a0,1$/;"	l
f4	user/rm.asm	/^  f4:	00150513          	addi	a0,a0,1$/;"	l
f4	user/sh.asm	/^      f4:	00052703          	lw	a4,0(a0)$/;"	l
f4	user/stressfs.asm	/^  f4:	00000513          	li	a0,0$/;"	l
f4	user/usertests.asm	/^      f4:	fe010113          	addi	sp,sp,-32$/;"	l
f4	user/wc.asm	/^  f4:	000b8593          	mv	a1,s7$/;"	l
f4	user/zombie.asm	/^  f4:	00008067          	ret$/;"	l
f40	user/grep.asm	/^ f40:	01813983          	ld	s3,24(sp)$/;"	l
f40	user/grind.asm	/^     f40:	01100893          	li	a7,17$/;"	l
f40	user/sh.asm	/^     f40:	04113c23          	sd	ra,88(sp)$/;"	l
f40	user/usertests.asm	/^     f40:	00048513          	mv	a0,s1$/;"	l
f44	user/grep.asm	/^ f44:	01013a03          	ld	s4,16(sp)$/;"	l
f44	user/grind.asm	/^     f44:	00000073          	ecall$/;"	l
f44	user/sh.asm	/^     f44:	04813823          	sd	s0,80(sp)$/;"	l
f44	user/usertests.asm	/^     f44:	058050ef          	jal	ra,5f9c <read>$/;"	l
f48	user/grep.asm	/^ f48:	00813a83          	ld	s5,8(sp)$/;"	l
f48	user/grind.asm	/^     f48:	00008067          	ret$/;"	l
f48	user/sh.asm	/^     f48:	04913423          	sd	s1,72(sp)$/;"	l
f48	user/usertests.asm	/^     f48:	00500793          	li	a5,5$/;"	l
f4c	user/grep.asm	/^ f4c:	00013b03          	ld	s6,0(sp)$/;"	l
f4c	user/grind.asm	/^     f4c:	01200893          	li	a7,18$/;"	l
f4c	user/sh.asm	/^     f4c:	05213023          	sd	s2,64(sp)$/;"	l
f4c	user/usertests.asm	/^     f4c:	0af51463          	bne	a0,a5,ff4 <unlinkread+0x164>$/;"	l
f50	user/grep.asm	/^ f50:	04010113          	addi	sp,sp,64$/;"	l
f50	user/grind.asm	/^     f50:	00000073          	ecall$/;"	l
f50	user/sh.asm	/^     f50:	03313c23          	sd	s3,56(sp)$/;"	l
f50	user/usertests.asm	/^     f50:	0000c717          	auipc	a4,0xc$/;"	l
f54	user/grep.asm	/^ f54:	00008067          	ret$/;"	l
f54	user/grind.asm	/^     f54:	00008067          	ret$/;"	l
f54	user/sh.asm	/^     f54:	03413823          	sd	s4,48(sp)$/;"	l
f54	user/usertests.asm	/^     f54:	d2874703          	lbu	a4,-728(a4) # cc78 <buf>$/;"	l
f58	user/grep.asm	/^ f58:	0007b703          	ld	a4,0(a5)$/;"	l
f58	user/grind.asm	/^     f58:	00800893          	li	a7,8$/;"	l
f58	user/sh.asm	/^     f58:	03513423          	sd	s5,40(sp)$/;"	l
f58	user/usertests.asm	/^     f58:	06800793          	li	a5,104$/;"	l
f5c	user/grep.asm	/^ f5c:	00e53023          	sd	a4,0(a0)$/;"	l
f5c	user/grind.asm	/^     f5c:	00000073          	ecall$/;"	l
f5c	user/sh.asm	/^     f5c:	03613023          	sd	s6,32(sp)$/;"	l
f5c	user/usertests.asm	/^     f5c:	0af71863          	bne	a4,a5,100c <unlinkread+0x17c>$/;"	l
f60	user/grep.asm	/^ f60:	fc5ff06f          	j	f24 <malloc+0xc0>$/;"	l
f60	user/grind.asm	/^     f60:	00008067          	ret$/;"	l
f60	user/sh.asm	/^     f60:	01713c23          	sd	s7,24(sp)$/;"	l
f60	user/usertests.asm	/^     f60:	00a00613          	li	a2,10$/;"	l
f64	user/grep.asm	/^ f64:	01652423          	sw	s6,8(a0)$/;"	l
f64	user/grind.asm	/^     f64:	01300893          	li	a7,19$/;"	l
f64	user/sh.asm	/^     f64:	06010413          	addi	s0,sp,96$/;"	l
f64	user/usertests.asm	/^     f64:	0000c597          	auipc	a1,0xc$/;"	l
f68	user/grep.asm	/^ f68:	01050513          	addi	a0,a0,16$/;"	l
f68	user/grind.asm	/^     f68:	00000073          	ecall$/;"	l
f68	user/sh.asm	/^     f68:	00050b93          	mv	s7,a0$/;"	l
f68	user/usertests.asm	/^     f68:	d1458593          	addi	a1,a1,-748 # cc78 <buf>$/;"	l
f6c	user/grep.asm	/^ f6c:	e39ff0ef          	jal	ra,da4 <free>$/;"	l
f6c	user/grind.asm	/^     f6c:	00008067          	ret$/;"	l
f6c	user/sh.asm	/^     f6c:	00058a13          	mv	s4,a1$/;"	l
f6c	user/usertests.asm	/^     f6c:	00048513          	mv	a0,s1$/;"	l
f70	user/grep.asm	/^ f70:	00093503          	ld	a0,0(s2)$/;"	l
f70	user/grind.asm	/^     f70:	01400893          	li	a7,20$/;"	l
f70	user/sh.asm	/^     f70:	00050913          	mv	s2,a0$/;"	l
f70	user/usertests.asm	/^     f70:	038050ef          	jal	ra,5fa8 <write>$/;"	l
f74	user/grep.asm	/^ f74:	fa050ee3          	beqz	a0,f30 <malloc+0xcc>$/;"	l
f74	user/grind.asm	/^     f74:	00000073          	ecall$/;"	l
f74	user/sh.asm	/^     f74:	00000493          	li	s1,0$/;"	l
f74	user/usertests.asm	/^     f74:	00a00793          	li	a5,10$/;"	l
f78	user/grep.asm	/^ f78:	00053783          	ld	a5,0(a0)$/;"	l
f78	user/grind.asm	/^     f78:	00008067          	ret$/;"	l
f78	user/sh.asm	/^     f78:	00a00a93          	li	s5,10$/;"	l
f78	user/usertests.asm	/^     f78:	0af51663          	bne	a0,a5,1024 <unlinkread+0x194>$/;"	l
f7c	user/grep.asm	/^ f7c:	0087a703          	lw	a4,8(a5)$/;"	l
f7c	user/grind.asm	/^     f7c:	00900893          	li	a7,9$/;"	l
f7c	user/sh.asm	/^     f7c:	00d00b13          	li	s6,13$/;"	l
f7c	user/usertests.asm	/^     f7c:	00048513          	mv	a0,s1$/;"	l
f8	user/cat.asm	/^  f8:	02054863          	bltz	a0,128 <main+0x84>$/;"	l
f8	user/echo.asm	/^  f8:	00054783          	lbu	a5,0(a0)$/;"	l
f8	user/forktest.asm	/^  f8:	00100513          	li	a0,1$/;"	l
f8	user/grep.asm	/^  f8:	fc0696e3          	bnez	a3,c4 <matchhere+0x44>$/;"	l
f8	user/grind.asm	/^      f8:	00050c63          	beqz	a0,110 <go+0x6c>$/;"	l
f8	user/init.asm	/^  f8:	00000513          	li	a0,0$/;"	l
f8	user/kill.asm	/^  f8:	00008067          	ret$/;"	l
f8	user/ln.asm	/^  f8:	ff010113          	addi	sp,sp,-16$/;"	l
f8	user/ls.asm	/^  f8:	27010413          	addi	s0,sp,624$/;"	l
f8	user/matmul.asm	/^  f8:	00870713          	addi	a4,a4,8$/;"	l
f8	user/mkdir.asm	/^  f8:	00158593          	addi	a1,a1,1$/;"	l
f8	user/rm.asm	/^  f8:	00158593          	addi	a1,a1,1$/;"	l
f8	user/sh.asm	/^      f8:	00500793          	li	a5,5$/;"	l
f8	user/stressfs.asm	/^  f8:	400000ef          	jal	ra,4f8 <wait>$/;"	l
f8	user/usertests.asm	/^      f8:	00113c23          	sd	ra,24(sp)$/;"	l
f8	user/wc.asm	/^  f8:	00001517          	auipc	a0,0x1$/;"	l
f8	user/zombie.asm	/^  f8:	00000513          	li	a0,0$/;"	l
f80	user/grep.asm	/^ f80:	f89772e3          	bgeu	a4,s1,f04 <malloc+0xa0>$/;"	l
f80	user/grind.asm	/^     f80:	00000073          	ecall$/;"	l
f80	user/sh.asm	/^     f80:	00048993          	mv	s3,s1$/;"	l
f80	user/usertests.asm	/^     f80:	034050ef          	jal	ra,5fb4 <close>$/;"	l
f84	user/grep.asm	/^ f84:	00093703          	ld	a4,0(s2)$/;"	l
f84	user/grind.asm	/^     f84:	00008067          	ret$/;"	l
f84	user/sh.asm	/^     f84:	0014849b          	addiw	s1,s1,1$/;"	l
f84	user/usertests.asm	/^     f84:	00006517          	auipc	a0,0x6$/;"	l
f88	user/grep.asm	/^ f88:	00078513          	mv	a0,a5$/;"	l
f88	user/grind.asm	/^     f88:	00a00893          	li	a7,10$/;"	l
f88	user/sh.asm	/^     f88:	0344dc63          	bge	s1,s4,fc0 <gets+0x84>$/;"	l
f88	user/usertests.asm	/^     f88:	d7c50513          	addi	a0,a0,-644 # 6d00 <malloc+0x698>$/;"	l
f8c	user/grep.asm	/^ f8c:	fef716e3          	bne	a4,a5,f78 <malloc+0x114>$/;"	l
f8c	user/grind.asm	/^     f8c:	00000073          	ecall$/;"	l
f8c	user/sh.asm	/^     f8c:	00100613          	li	a2,1$/;"	l
f8c	user/usertests.asm	/^     f8c:	064050ef          	jal	ra,5ff0 <unlink>$/;"	l
f90	user/grep.asm	/^ f90:	000a0513          	mv	a0,s4$/;"	l
f90	user/grind.asm	/^     f90:	00008067          	ret$/;"	l
f90	user/sh.asm	/^     f90:	faf40593          	addi	a1,s0,-81$/;"	l
f90	user/usertests.asm	/^     f90:	02813083          	ld	ra,40(sp)$/;"	l
f94	user/grep.asm	/^ f94:	8adff0ef          	jal	ra,840 <sbrk>$/;"	l
f94	user/grind.asm	/^     f94:	00b00893          	li	a7,11$/;"	l
f94	user/sh.asm	/^     f94:	00000513          	li	a0,0$/;"	l
f94	user/usertests.asm	/^     f94:	02013403          	ld	s0,32(sp)$/;"	l
f98	user/grep.asm	/^ f98:	fd5516e3          	bne	a0,s5,f64 <malloc+0x100>$/;"	l
f98	user/grind.asm	/^     f98:	00000073          	ecall$/;"	l
f98	user/sh.asm	/^     f98:	260000ef          	jal	ra,11f8 <read>$/;"	l
f98	user/usertests.asm	/^     f98:	01813483          	ld	s1,24(sp)$/;"	l
f9c	user/grep.asm	/^ f9c:	00000513          	li	a0,0$/;"	l
f9c	user/grind.asm	/^     f9c:	00008067          	ret$/;"	l
f9c	user/sh.asm	/^     f9c:	02a05263          	blez	a0,fc0 <gets+0x84>$/;"	l
f9c	user/usertests.asm	/^     f9c:	01013903          	ld	s2,16(sp)$/;"	l
fa0	user/grep.asm	/^ fa0:	f91ff06f          	j	f30 <malloc+0xcc>$/;"	l
fa0	user/grind.asm	/^     fa0:	00c00893          	li	a7,12$/;"	l
fa0	user/sh.asm	/^     fa0:	faf44783          	lbu	a5,-81(s0)$/;"	l
fa0	user/usertests.asm	/^     fa0:	00813983          	ld	s3,8(sp)$/;"	l
fa4	user/grind.asm	/^     fa4:	00000073          	ecall$/;"	l
fa4	user/sh.asm	/^     fa4:	00f90023          	sb	a5,0(s2)$/;"	l
fa4	user/usertests.asm	/^     fa4:	03010113          	addi	sp,sp,48$/;"	l
fa8	user/grind.asm	/^     fa8:	00008067          	ret$/;"	l
fa8	user/sh.asm	/^     fa8:	01578a63          	beq	a5,s5,fbc <gets+0x80>$/;"	l
fa8	user/usertests.asm	/^     fa8:	00008067          	ret$/;"	l
fac	user/grind.asm	/^     fac:	00d00893          	li	a7,13$/;"	l
fac	user/sh.asm	/^     fac:	00190913          	addi	s2,s2,1$/;"	l
fac	user/usertests.asm	/^     fac:	00098593          	mv	a1,s3$/;"	l
fb0	user/grind.asm	/^     fb0:	00000073          	ecall$/;"	l
fb0	user/sh.asm	/^     fb0:	fd6798e3          	bne	a5,s6,f80 <gets+0x44>$/;"	l
fb0	user/usertests.asm	/^     fb0:	00006517          	auipc	a0,0x6$/;"	l
fb4	user/grind.asm	/^     fb4:	00008067          	ret$/;"	l
fb4	user/sh.asm	/^     fb4:	00048993          	mv	s3,s1$/;"	l
fb4	user/usertests.asm	/^     fb4:	d6050513          	addi	a0,a0,-672 # 6d10 <malloc+0x6a8>$/;"	l
fb8	user/grind.asm	/^     fb8:	00e00893          	li	a7,14$/;"	l
fb8	user/sh.asm	/^     fb8:	0080006f          	j	fc0 <gets+0x84>$/;"	l
fb8	user/usertests.asm	/^     fb8:	5a0050ef          	jal	ra,6558 <printf>$/;"	l
fbc	user/grind.asm	/^     fbc:	00000073          	ecall$/;"	l
fbc	user/sh.asm	/^     fbc:	00048993          	mv	s3,s1$/;"	l
fbc	user/usertests.asm	/^     fbc:	00100513          	li	a0,1$/;"	l
fc	user/cat.asm	/^  fc:	f05ff0ef          	jal	ra,0 <cat>$/;"	l
fc	user/echo.asm	/^  fc:	00078e63          	beqz	a5,118 <strcmp+0x2c>$/;"	l
fc	user/forktest.asm	/^  fc:	41c000ef          	jal	ra,518 <exit>$/;"	l
fc	user/grep.asm	/^  fc:	00000513          	li	a0,0$/;"	l
fc	user/grind.asm	/^      fc:	00001517          	auipc	a0,0x1$/;"	l
fc	user/init.asm	/^  fc:	3d0000ef          	jal	ra,4cc <exit>$/;"	l
fc	user/kill.asm	/^  fc:	ff010113          	addi	sp,sp,-16$/;"	l
fc	user/ln.asm	/^  fc:	00813423          	sd	s0,8(sp)$/;"	l
fc	user/ls.asm	/^  fc:	00050913          	mv	s2,a0$/;"	l
fc	user/matmul.asm	/^  fc:	fce89ce3          	bne	a7,a4,d4 <main+0xd4>$/;"	l
fc	user/mkdir.asm	/^  fc:	00054783          	lbu	a5,0(a0)$/;"	l
fc	user/rm.asm	/^  fc:	00054783          	lbu	a5,0(a0)$/;"	l
fc	user/sh.asm	/^      fc:	02e7e663          	bltu	a5,a4,128 <runcmd+0x50>$/;"	l
fc	user/stressfs.asm	/^  fc:	00000513          	li	a0,0$/;"	l
fc	user/usertests.asm	/^      fc:	00813823          	sd	s0,16(sp)$/;"	l
fc	user/wc.asm	/^  fc:	d4050513          	addi	a0,a0,-704 # e38 <malloc+0x164>$/;"	l
fc	user/zombie.asm	/^  fc:	ff1ff06f          	j	ec <strlen+0x34>$/;"	l
fc0	user/grind.asm	/^     fc0:	00008067          	ret$/;"	l
fc0	user/sh.asm	/^     fc0:	013b89b3          	add	s3,s7,s3$/;"	l
fc0	user/usertests.asm	/^     fc0:	7b9040ef          	jal	ra,5f78 <exit>$/;"	l
fc4	user/grind.asm	/^     fc4:	fe010113          	addi	sp,sp,-32$/;"	l
fc4	user/sh.asm	/^     fc4:	00098023          	sb	zero,0(s3)$/;"	l
fc4	user/usertests.asm	/^     fc4:	00098593          	mv	a1,s3$/;"	l
fc8	user/grind.asm	/^     fc8:	00113c23          	sd	ra,24(sp)$/;"	l
fc8	user/sh.asm	/^     fc8:	000b8513          	mv	a0,s7$/;"	l
fc8	user/usertests.asm	/^     fc8:	00006517          	auipc	a0,0x6$/;"	l
fcc	user/grind.asm	/^     fcc:	00813823          	sd	s0,16(sp)$/;"	l
fcc	user/sh.asm	/^     fcc:	05813083          	ld	ra,88(sp)$/;"	l
fcc	user/usertests.asm	/^     fcc:	d7050513          	addi	a0,a0,-656 # 6d38 <malloc+0x6d0>$/;"	l
fd	user/cat.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/echo.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/forktest.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grep.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/grind.asm	/^        fd = open("x", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/.\/grindir\/.\/..\/b", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^      fd = open("\/grindir\/..\/a", O_CREATE|O_RDWR);$/;"	d
fd	user/grind.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/init.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/kill.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ln.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/ls.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/matmul.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/mkdir.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/rm.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/sh.c	/^  int fd;$/;"	m	struct:redircmd	file:
fd	user/stressfs.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_CREATE | O_RDWR);$/;"	d
fd	user/stressfs.asm	/^  fd = open(path, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^        fd = open(name, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open("truncfile", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^      fd = open(file, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(fname, O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^      fd = open(name, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open("", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigarg-ok", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open("bigwrite", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^    fd = open("echo-ok", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^    fd = open("xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^    fd = open(fname, 0);$/;"	d
fd	user/usertests.asm	/^    fd = open(name, O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open(".", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("123456789012345\/123456789012345\/123456789012345", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("12345678901234\/12345678901234\/12345678901234", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("README", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bd", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("big", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigarg-ok", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("bigfile.dat", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/..\/ff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/dd\/ffff", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dd\/ff", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("dirfile\/xx", O_CREATE);$/;"	d
fd	user/usertests.asm	/^  fd = open("doesnotexist", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("echo-ok", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("init", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf1", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("lf2", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("rwsbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sbrk", O_CREATE|O_WRONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", 0);$/;"	d
fd	user/usertests.asm	/^  fd = open("sharedfd", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_CREATE|O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("small", O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open("unlinkread", O_RDWR);$/;"	d
fd	user/usertests.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/usertests.asm	/^  fd = open(p, O_RDWR);$/;"	d
fd	user/wc.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd	user/zombie.asm	/^  fd = open(n, O_RDONLY);$/;"	d
fd0	kernel/kernel.asm	/^  fd0 = -1;$/;"	d
fd0	user/grind.asm	/^     fd0:	02010413          	addi	s0,sp,32$/;"	l
fd0	user/sh.asm	/^     fd0:	05013403          	ld	s0,80(sp)$/;"	l
fd0	user/usertests.asm	/^     fd0:	588050ef          	jal	ra,6558 <printf>$/;"	l
fd1	user/usertests.asm	/^  fd1 = open("truncfile", O_WRONLY|O_TRUNC);$/;"	d
fd1	user/usertests.asm	/^  fd1 = open("unlinkread", O_CREATE | O_RDWR);$/;"	d
fd4	user/grind.asm	/^     fd4:	feb407a3          	sb	a1,-17(s0)$/;"	l
fd4	user/sh.asm	/^     fd4:	04813483          	ld	s1,72(sp)$/;"	l
fd4	user/usertests.asm	/^     fd4:	00100513          	li	a0,1$/;"	l
fd8	user/grind.asm	/^     fd8:	00100613          	li	a2,1$/;"	l
fd8	user/sh.asm	/^     fd8:	04013903          	ld	s2,64(sp)$/;"	l
fd8	user/usertests.asm	/^     fd8:	7a1040ef          	jal	ra,5f78 <exit>$/;"	l
fdalloc	kernel/sysfile.c	/^fdalloc(struct file *f)$/;"	f	file:
fdc	user/grind.asm	/^     fdc:	fef40593          	addi	a1,s0,-17$/;"	l
fdc	user/sh.asm	/^     fdc:	03813983          	ld	s3,56(sp)$/;"	l
fdc	user/usertests.asm	/^     fdc:	00098593          	mv	a1,s3$/;"	l
fe0	user/grind.asm	/^     fe0:	f25ff0ef          	jal	ra,f04 <write>$/;"	l
fe0	user/sh.asm	/^     fe0:	03013a03          	ld	s4,48(sp)$/;"	l
fe0	user/usertests.asm	/^     fe0:	00006517          	auipc	a0,0x6$/;"	l
fe4	user/grind.asm	/^     fe4:	01813083          	ld	ra,24(sp)$/;"	l
fe4	user/sh.asm	/^     fe4:	02813a83          	ld	s5,40(sp)$/;"	l
fe4	user/usertests.asm	/^     fe4:	d7850513          	addi	a0,a0,-648 # 6d58 <malloc+0x6f0>$/;"	l
fe8	user/grind.asm	/^     fe8:	01013403          	ld	s0,16(sp)$/;"	l
fe8	user/sh.asm	/^     fe8:	02013b03          	ld	s6,32(sp)$/;"	l
fe8	user/usertests.asm	/^     fe8:	570050ef          	jal	ra,6558 <printf>$/;"	l
fec	user/grind.asm	/^     fec:	02010113          	addi	sp,sp,32$/;"	l
fec	user/sh.asm	/^     fec:	01813b83          	ld	s7,24(sp)$/;"	l
fec	user/usertests.asm	/^     fec:	00100513          	li	a0,1$/;"	l
fetchaddr	kernel/syscall.c	/^fetchaddr(uint64 addr, uint64 *ip)$/;"	f
fetchstr	kernel/syscall.c	/^fetchstr(uint64 addr, char *buf, int max)$/;"	f
ff	kernel/kernel.asm	/^  ff = *f;$/;"	d
ff0	user/grind.asm	/^     ff0:	00008067          	ret$/;"	l
ff0	user/sh.asm	/^     ff0:	06010113          	addi	sp,sp,96$/;"	l
ff0	user/usertests.asm	/^     ff0:	789040ef          	jal	ra,5f78 <exit>$/;"	l
ff4	user/grind.asm	/^     ff4:	fc010113          	addi	sp,sp,-64$/;"	l
ff4	user/sh.asm	/^     ff4:	00008067          	ret$/;"	l
ff4	user/usertests.asm	/^     ff4:	00098593          	mv	a1,s3$/;"	l
ff8	user/grind.asm	/^     ff8:	02113c23          	sd	ra,56(sp)$/;"	l
ff8	user/sh.asm	/^     ff8:	fe010113          	addi	sp,sp,-32$/;"	l
ff8	user/usertests.asm	/^     ff8:	00006517          	auipc	a0,0x6$/;"	l
ffc	user/grind.asm	/^     ffc:	02813823          	sd	s0,48(sp)$/;"	l
ffc	user/sh.asm	/^     ffc:	00113c23          	sd	ra,24(sp)$/;"	l
ffc	user/usertests.asm	/^     ffc:	d8850513          	addi	a0,a0,-632 # 6d80 <malloc+0x718>$/;"	l
file	kernel/file.c	/^  struct file file[NFILE];$/;"	m	struct:__anon7	typeref:struct:__anon7::file	file:
file	kernel/file.h	/^struct file {$/;"	s
file	user/sh.c	/^  char *file;$/;"	m	struct:redircmd	file:
filealloc	kernel/file.c	/^filealloc(void)$/;"	f
fileclose	kernel/file.c	/^fileclose(struct file *f)$/;"	f
filedup	kernel/file.c	/^filedup(struct file *f)$/;"	f
fileinit	kernel/file.c	/^fileinit(void)$/;"	f
fileread	kernel/file.c	/^fileread(struct file *f, uint64 addr, int n)$/;"	f
filestat	kernel/file.c	/^filestat(struct file *f, uint64 addr)$/;"	f
filesz	kernel/elf.h	/^  uint64 filesz;$/;"	m	struct:proghdr
filewrite	kernel/file.c	/^filewrite(struct file *f, uint64 addr, int n)$/;"	f
first	kernel/kernel.asm	/^    first = 0;$/;"	d
flags	kernel/elf.h	/^  uint flags;$/;"	m	struct:elfhdr
flags	kernel/elf.h	/^  uint32 flags;$/;"	m	struct:proghdr
flags	kernel/kernel.asm	/^    flags = PTE_FLAGS(*pte);$/;"	d
flags	kernel/virtio.h	/^  uint16 flags; \/\/ always zero$/;"	m	struct:virtq_avail
flags	kernel/virtio.h	/^  uint16 flags; \/\/ always zero$/;"	m	struct:virtq_used
flags	kernel/virtio.h	/^  uint16 flags;$/;"	m	struct:virtq_desc
flags2perm	kernel/exec.c	/^int flags2perm(int flags)$/;"	f
fmtname	user/ls.c	/^fmtname(char *path)$/;"	f
fname	user/usertests.asm	/^    fname = names[i];$/;"	d
fname	user/usertests.asm	/^    fname = names[pi];$/;"	d
fork	kernel/proc.c	/^fork(void)$/;"	f
fork	user/cat.asm	/^fork:$/;"	l
fork	user/echo.asm	/^fork:$/;"	l
fork	user/forktest.asm	/^fork:$/;"	l
fork	user/grep.asm	/^fork:$/;"	l
fork	user/grind.asm	/^fork:$/;"	l
fork	user/init.asm	/^fork:$/;"	l
fork	user/kill.asm	/^fork:$/;"	l
fork	user/ln.asm	/^fork:$/;"	l
fork	user/ls.asm	/^fork:$/;"	l
fork	user/matmul.asm	/^fork:$/;"	l
fork	user/mkdir.asm	/^fork:$/;"	l
fork	user/rm.asm	/^fork:$/;"	l
fork	user/sh.asm	/^fork:$/;"	l
fork	user/stressfs.asm	/^fork:$/;"	l
fork	user/usertests.asm	/^fork:$/;"	l
fork	user/usys.S	/^fork:$/;"	l
fork	user/wc.asm	/^fork:$/;"	l
fork	user/zombie.asm	/^fork:$/;"	l
fork1	user/sh.c	/^fork1(void)$/;"	f
forkfork	user/usertests.c	/^forkfork(char *s)$/;"	f
forkforkfork	user/usertests.c	/^forkforkfork(char *s)$/;"	f
forkret	kernel/proc.c	/^forkret(void)$/;"	f
forktest	user/forktest.c	/^forktest(void)$/;"	f
forktest	user/usertests.c	/^forktest(char *s)$/;"	f
found	kernel/kernel.asm	/^        found = 1;$/;"	d
fourfiles	user/usertests.c	/^fourfiles(char *s)$/;"	f
fourteen	user/usertests.c	/^fourteen(char *s)$/;"	f
fprintf	user/printf.c	/^fprintf(int fd, const char *fmt, ...)$/;"	f
free	kernel/virtio_disk.c	/^  char free[NUM];  \/\/ is a descriptor free?$/;"	m	struct:disk	file:
free	user/umalloc.c	/^free(void *ap)$/;"	f
free_chain	kernel/virtio_disk.c	/^free_chain(int i)$/;"	f	file:
free_desc	kernel/virtio_disk.c	/^free_desc(int i)$/;"	f	file:
freeblock	mkfs/mkfs.c	/^uint freeblock;$/;"	v
freeinode	mkfs/mkfs.c	/^uint freeinode = 1;$/;"	v
freelist	kernel/kalloc.c	/^  struct run *freelist;$/;"	m	struct:__anon9	typeref:struct:__anon9::run	file:
freep	user/cat.asm	/^      freep = prevp;$/;"	d
freep	user/cat.asm	/^  freep = p;$/;"	d
freep	user/echo.asm	/^      freep = prevp;$/;"	d
freep	user/echo.asm	/^  freep = p;$/;"	d
freep	user/grep.asm	/^      freep = prevp;$/;"	d
freep	user/grep.asm	/^  freep = p;$/;"	d
freep	user/grind.asm	/^      freep = prevp;$/;"	d
freep	user/grind.asm	/^  freep = p;$/;"	d
freep	user/init.asm	/^      freep = prevp;$/;"	d
freep	user/init.asm	/^  freep = p;$/;"	d
freep	user/kill.asm	/^      freep = prevp;$/;"	d
freep	user/kill.asm	/^  freep = p;$/;"	d
freep	user/ln.asm	/^      freep = prevp;$/;"	d
freep	user/ln.asm	/^  freep = p;$/;"	d
freep	user/ls.asm	/^      freep = prevp;$/;"	d
freep	user/ls.asm	/^  freep = p;$/;"	d
freep	user/matmul.asm	/^      freep = prevp;$/;"	d
freep	user/matmul.asm	/^  freep = p;$/;"	d
freep	user/mkdir.asm	/^      freep = prevp;$/;"	d
freep	user/mkdir.asm	/^  freep = p;$/;"	d
freep	user/rm.asm	/^      freep = prevp;$/;"	d
freep	user/rm.asm	/^  freep = p;$/;"	d
freep	user/sh.asm	/^      freep = prevp;$/;"	d
freep	user/sh.asm	/^  freep = p;$/;"	d
freep	user/stressfs.asm	/^      freep = prevp;$/;"	d
freep	user/stressfs.asm	/^  freep = p;$/;"	d
freep	user/umalloc.c	/^static Header *freep;$/;"	v	file:
freep	user/usertests.asm	/^      freep = prevp;$/;"	d
freep	user/usertests.asm	/^  freep = p;$/;"	d
freep	user/wc.asm	/^      freep = prevp;$/;"	d
freep	user/wc.asm	/^  freep = p;$/;"	d
freep	user/zombie.asm	/^      freep = prevp;$/;"	d
freep	user/zombie.asm	/^  freep = p;$/;"	d
freeproc	kernel/proc.c	/^freeproc(struct proc *p)$/;"	f	file:
freerange	kernel/kalloc.c	/^freerange(void *pa_start, void *pa_end)$/;"	f
freewalk	kernel/vm.c	/^freewalk(pagetable_t pagetable)$/;"	f
fsfd	mkfs/mkfs.c	/^int fsfd;$/;"	v
fsfull	user/usertests.c	/^fsfull()$/;"	f
fsinit	kernel/fs.c	/^fsinit(int dev) {$/;"	f
fstat	user/cat.asm	/^fstat:$/;"	l
fstat	user/echo.asm	/^fstat:$/;"	l
fstat	user/forktest.asm	/^fstat:$/;"	l
fstat	user/grep.asm	/^fstat:$/;"	l
fstat	user/grind.asm	/^fstat:$/;"	l
fstat	user/init.asm	/^fstat:$/;"	l
fstat	user/kill.asm	/^fstat:$/;"	l
fstat	user/ln.asm	/^fstat:$/;"	l
fstat	user/ls.asm	/^fstat:$/;"	l
fstat	user/matmul.asm	/^fstat:$/;"	l
fstat	user/mkdir.asm	/^fstat:$/;"	l
fstat	user/rm.asm	/^fstat:$/;"	l
fstat	user/sh.asm	/^fstat:$/;"	l
fstat	user/stressfs.asm	/^fstat:$/;"	l
fstat	user/usertests.asm	/^fstat:$/;"	l
fstat	user/usys.S	/^fstat:$/;"	l
fstat	user/wc.asm	/^fstat:$/;"	l
fstat	user/zombie.asm	/^fstat:$/;"	l
ftable	kernel/file.c	/^} ftable;$/;"	v	typeref:struct:__anon7
getcmd	user/sh.c	/^getcmd(char *buf, int nbuf)$/;"	f
getpid	user/cat.asm	/^getpid:$/;"	l
getpid	user/echo.asm	/^getpid:$/;"	l
getpid	user/forktest.asm	/^getpid:$/;"	l
getpid	user/grep.asm	/^getpid:$/;"	l
getpid	user/grind.asm	/^getpid:$/;"	l
getpid	user/init.asm	/^getpid:$/;"	l
getpid	user/kill.asm	/^getpid:$/;"	l
getpid	user/ln.asm	/^getpid:$/;"	l
getpid	user/ls.asm	/^getpid:$/;"	l
getpid	user/matmul.asm	/^getpid:$/;"	l
getpid	user/mkdir.asm	/^getpid:$/;"	l
getpid	user/rm.asm	/^getpid:$/;"	l
getpid	user/sh.asm	/^getpid:$/;"	l
getpid	user/stressfs.asm	/^getpid:$/;"	l
getpid	user/usertests.asm	/^getpid:$/;"	l
getpid	user/usys.S	/^getpid:$/;"	l
getpid	user/wc.asm	/^getpid:$/;"	l
getpid	user/zombie.asm	/^getpid:$/;"	l
gets	user/ulib.c	/^gets(char *buf, int max)$/;"	f
gettoken	user/sh.c	/^gettoken(char **ps, char *es, char **q, char **eq)$/;"	f
go	user/grind.c	/^go(int which_child)$/;"	f
gp	kernel/proc.h	/^  \/*  56 *\/ uint64 gp;$/;"	m	struct:trapframe
grep	user/grep.c	/^grep(char *pattern, int fd)$/;"	f
growproc	kernel/proc.c	/^growproc(int n)$/;"	f
havekids	kernel/kernel.asm	/^        havekids = 1;$/;"	d
havekids	kernel/kernel.asm	/^    havekids = 0;$/;"	d
head	kernel/bio.c	/^  struct buf head;$/;"	m	struct:__anon4	typeref:struct:__anon4::buf	file:
header	user/umalloc.c	/^union header {$/;"	u	file:
hi	user/grind.asm	/^    hi = x \/ 127773;$/;"	d
holding	kernel/spinlock.c	/^holding(struct spinlock *lk)$/;"	f
holdingsleep	kernel/sleeplock.c	/^holdingsleep(struct sleeplock *lk)$/;"	f
i	kernel/kernel.asm	/^  i = 0;$/;"	d
i	user/cat.asm	/^  i = 0;$/;"	d
i	user/echo.asm	/^  i = 0;$/;"	d
i	user/grep.asm	/^  i = 0;$/;"	d
i	user/grind.asm	/^  i = 0;$/;"	d
i	user/init.asm	/^  i = 0;$/;"	d
i	user/kill.asm	/^  i = 0;$/;"	d
i	user/ln.asm	/^  i = 0;$/;"	d
i	user/ls.asm	/^  i = 0;$/;"	d
i	user/matmul.asm	/^  i = 0;$/;"	d
i	user/mkdir.asm	/^  i = 0;$/;"	d
i	user/rm.asm	/^  i = 0;$/;"	d
i	user/sh.asm	/^  i = 0;$/;"	d
i	user/stressfs.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^      i = de.name[1] - '0';$/;"	d
i	user/usertests.asm	/^    i = read(fd, buf, BSIZE);$/;"	d
i	user/usertests.asm	/^  i = 0;$/;"	d
i	user/usertests.asm	/^  i = read(fd, buf, N*SZ*2);$/;"	d
i	user/wc.asm	/^  i = 0;$/;"	d
i	user/zombie.asm	/^  i = 0;$/;"	d
ialloc	kernel/fs.c	/^ialloc(uint dev, short type)$/;"	f
ialloc	mkfs/mkfs.c	/^ialloc(ushort type)$/;"	f
iappend	mkfs/mkfs.c	/^iappend(uint inum, void *xp, int n)$/;"	f
id	kernel/virtio.h	/^  uint32 id;   \/\/ index of start of completed descriptor chain$/;"	m	struct:virtq_used_elem
idup	kernel/fs.c	/^idup(struct inode *ip)$/;"	f
idx	kernel/virtio.h	/^  uint16 idx;   \/\/ device increments when it adds a ring[] entry$/;"	m	struct:virtq_used
idx	kernel/virtio.h	/^  uint16 idx;   \/\/ driver will write ring[idx] next$/;"	m	struct:virtq_avail
iget	kernel/fs.c	/^iget(uint dev, uint inum)$/;"	f	file:
iinit	kernel/fs.c	/^iinit()$/;"	f
ilock	kernel/fs.c	/^ilock(struct inode *ip)$/;"	f
info	kernel/virtio_disk.c	/^  } info[NUM];$/;"	m	struct:disk	typeref:struct:disk::__anon2	file:
init	user/initcode.S	/^init:$/;"	l
initcode	kernel/proc.c	/^uchar initcode[] = {$/;"	v
initlock	kernel/spinlock.c	/^initlock(struct spinlock *lk, char *name)$/;"	f
initlog	kernel/log.c	/^initlog(int dev, struct superblock *sb)$/;"	f
initproc	kernel/kernel.asm	/^  initproc = p;$/;"	d
initproc	kernel/proc.c	/^struct proc *initproc;$/;"	v	typeref:struct:proc
initsleeplock	kernel/sleeplock.c	/^initsleeplock(struct sleeplock *lk, char *name)$/;"	f
ino	kernel/stat.h	/^  uint ino;    \/\/ Inode number$/;"	m	struct:stat
inode	kernel/file.h	/^struct inode {$/;"	s
inode	kernel/fs.c	/^  struct inode inode[NINODE];$/;"	m	struct:__anon8	typeref:struct:__anon8::inode	file:
inodestart	kernel/fs.h	/^  uint inodestart;   \/\/ Block number of first inode block$/;"	m	struct:superblock
install_trans	kernel/log.c	/^install_trans(int recovering)$/;"	f	file:
int	kernel/kernel.asm	/^int flags2perm(int flags)$/;"	l
int	kernel/kernel.asm	/^int$/;"	l
int	user/cat.asm	/^int$/;"	l
int	user/echo.asm	/^int$/;"	l
int	user/forktest.asm	/^int$/;"	l
int	user/grep.asm	/^int matchstar(int c, char *re, char *text)$/;"	l
int	user/grep.asm	/^int$/;"	l
int	user/grind.asm	/^int$/;"	l
int	user/init.asm	/^int$/;"	l
int	user/kill.asm	/^int$/;"	l
int	user/ln.asm	/^int$/;"	l
int	user/ls.asm	/^int$/;"	l
int	user/matmul.asm	/^int main() {$/;"	l
int	user/matmul.asm	/^int$/;"	l
int	user/mkdir.asm	/^int$/;"	l
int	user/rm.asm	/^int$/;"	l
int	user/sh.asm	/^int$/;"	l
int	user/stressfs.asm	/^int$/;"	l
int	user/usertests.asm	/^int$/;"	l
int	user/wc.asm	/^int$/;"	l
int	user/zombie.asm	/^int$/;"	l
intena	kernel/kernel.asm	/^  intena = mycpu()->intena;$/;"	d
intena	kernel/proc.h	/^  int intena;                 \/\/ Were interrupts enabled before push_off()?$/;"	m	struct:cpu
intr_get	kernel/riscv.h	/^intr_get()$/;"	f
intr_off	kernel/riscv.h	/^intr_off()$/;"	f
intr_on	kernel/riscv.h	/^intr_on()$/;"	f
inum	kernel/file.h	/^  uint inum;          \/\/ Inode number$/;"	m	struct:inode
inum	kernel/fs.h	/^  ushort inum;$/;"	m	struct:dirent
inum	kernel/kernel.asm	/^      inum = de.inum;$/;"	d
inword	user/wc.asm	/^        inword = 0;$/;"	d
inword	user/wc.asm	/^        inword = 1;$/;"	d
inword	user/wc.asm	/^  inword = 0;$/;"	d
ip	kernel/file.h	/^  struct inode *ip;  \/\/ FD_INODE and FD_DEVICE$/;"	m	struct:file	typeref:struct:file::inode
ip	kernel/kernel.asm	/^    ip = create(path, T_FILE, 0, 0);$/;"	d
ip	kernel/kernel.asm	/^    ip = idup(myproc()->cwd);$/;"	d
ip	kernel/kernel.asm	/^    ip = iget(ROOTDEV, ROOTINO);$/;"	d
ip	kernel/kernel.asm	/^    ip = next;$/;"	d
ip	kernel/kernel.asm	/^  ip = 0;$/;"	d
iput	kernel/fs.c	/^iput(struct inode *ip)$/;"	f
iputtest	user/usertests.c	/^iputtest(char *s)$/;"	f
iref	user/usertests.c	/^iref(char *s)$/;"	f
isdirempty	kernel/sysfile.c	/^isdirempty(struct inode *dp)$/;"	f	file:
itable	kernel/fs.c	/^} itable;$/;"	v	typeref:struct:__anon8
iter	user/grind.c	/^iter()$/;"	f
itrunc	kernel/fs.c	/^itrunc(struct inode *ip)$/;"	f
iunlock	kernel/fs.c	/^iunlock(struct inode *ip)$/;"	f
iunlockput	kernel/fs.c	/^iunlockput(struct inode *ip)$/;"	f
iupdate	kernel/fs.c	/^iupdate(struct inode *ip)$/;"	f
justone	user/usertests.asm	/^    justone = argv[1];$/;"	d
k	kernel/kernel.asm	/^  k = p->killed;$/;"	d
kalloc	kernel/kalloc.c	/^kalloc(void)$/;"	f
kernel_hartid	kernel/proc.h	/^  \/*  32 *\/ uint64 kernel_hartid; \/\/ saved kernel tp$/;"	m	struct:trapframe
kernel_pagetable	kernel/kernel.asm	/^  kernel_pagetable = kvmmake();$/;"	d
kernel_pagetable	kernel/vm.c	/^pagetable_t kernel_pagetable;$/;"	v
kernel_satp	kernel/proc.h	/^  \/*   0 *\/ uint64 kernel_satp;   \/\/ kernel page table$/;"	m	struct:trapframe
kernel_sp	kernel/proc.h	/^  \/*   8 *\/ uint64 kernel_sp;     \/\/ top of process's kernel stack$/;"	m	struct:trapframe
kernel_trap	kernel/proc.h	/^  \/*  16 *\/ uint64 kernel_trap;   \/\/ usertrap()$/;"	m	struct:trapframe
kerneltrap	kernel/trap.c	/^kerneltrap()$/;"	f
kernelvec	kernel/kernelvec.S	/^kernelvec:$/;"	l
kernmem	user/usertests.c	/^kernmem(char *s)$/;"	f
kfree	kernel/kalloc.c	/^kfree(void *pa)$/;"	f
kill	kernel/proc.c	/^kill(int pid)$/;"	f
kill	user/cat.asm	/^kill:$/;"	l
kill	user/echo.asm	/^kill:$/;"	l
kill	user/forktest.asm	/^kill:$/;"	l
kill	user/grep.asm	/^kill:$/;"	l
kill	user/grind.asm	/^kill:$/;"	l
kill	user/init.asm	/^kill:$/;"	l
kill	user/kill.asm	/^kill:$/;"	l
kill	user/ln.asm	/^kill:$/;"	l
kill	user/ls.asm	/^kill:$/;"	l
kill	user/matmul.asm	/^kill:$/;"	l
kill	user/mkdir.asm	/^kill:$/;"	l
kill	user/rm.asm	/^kill:$/;"	l
kill	user/sh.asm	/^kill:$/;"	l
kill	user/stressfs.asm	/^kill:$/;"	l
kill	user/usertests.asm	/^kill:$/;"	l
kill	user/usys.S	/^kill:$/;"	l
kill	user/wc.asm	/^kill:$/;"	l
kill	user/zombie.asm	/^kill:$/;"	l
killed	kernel/proc.c	/^killed(struct proc *p)$/;"	f
killed	kernel/proc.h	/^  int killed;                  \/\/ If non-zero, have been killed$/;"	m	struct:proc
killstatus	user/usertests.c	/^killstatus(char *s)$/;"	f
kinit	kernel/kalloc.c	/^kinit()$/;"	f
kmem	kernel/kalloc.c	/^} kmem;$/;"	v	typeref:struct:__anon9
kpgtbl	kernel/kernel.asm	/^  kpgtbl = (pagetable_t) kalloc();$/;"	d
kstack	kernel/proc.h	/^  uint64 kstack;               \/\/ Virtual address of kernel stack$/;"	m	struct:proc
kvminit	kernel/vm.c	/^kvminit(void)$/;"	f
kvminithart	kernel/vm.c	/^kvminithart()$/;"	f
kvmmake	kernel/vm.c	/^kvmmake(void)$/;"	f
kvmmap	kernel/vm.c	/^kvmmap(pagetable_t kpgtbl, uint64 va, uint64 pa, uint64 sz, int perm)$/;"	f
l	user/wc.asm	/^  l = w = c = 0;$/;"	d
last	kernel/kernel.asm	/^      last = s+1;$/;"	d
last	kernel/kernel.asm	/^  last = va + size - PGSIZE;$/;"	d
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
left	user/sh.c	/^  struct cmd *left;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
len	kernel/kernel.asm	/^  len = path - s;$/;"	d
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:virtq_desc
len	kernel/virtio.h	/^  uint32 len;$/;"	m	struct:virtq_used_elem
lh	kernel/log.c	/^  struct logheader lh;$/;"	m	struct:log	typeref:struct:log::logheader	file:
link	user/cat.asm	/^link:$/;"	l
link	user/echo.asm	/^link:$/;"	l
link	user/forktest.asm	/^link:$/;"	l
link	user/grep.asm	/^link:$/;"	l
link	user/grind.asm	/^link:$/;"	l
link	user/init.asm	/^link:$/;"	l
link	user/kill.asm	/^link:$/;"	l
link	user/ln.asm	/^link:$/;"	l
link	user/ls.asm	/^link:$/;"	l
link	user/matmul.asm	/^link:$/;"	l
link	user/mkdir.asm	/^link:$/;"	l
link	user/rm.asm	/^link:$/;"	l
link	user/sh.asm	/^link:$/;"	l
link	user/stressfs.asm	/^link:$/;"	l
link	user/usertests.asm	/^link:$/;"	l
link	user/usys.S	/^link:$/;"	l
link	user/wc.asm	/^link:$/;"	l
link	user/zombie.asm	/^link:$/;"	l
linktest	user/usertests.c	/^linktest(char *s)$/;"	f
linkunlink	user/usertests.c	/^linkunlink(char *s)$/;"	f
listcmd	user/sh.c	/^listcmd(struct cmd *left, struct cmd *right)$/;"	f
listcmd	user/sh.c	/^struct listcmd {$/;"	s	file:
lk	kernel/sleeplock.h	/^  struct spinlock lk; \/\/ spinlock protecting this sleep lock$/;"	m	struct:sleeplock	typeref:struct:sleeplock::spinlock
lo	user/grind.asm	/^    lo = x % 127773;$/;"	d
loadseg	kernel/exec.c	/^loadseg(pagetable_t pagetable, uint64 va, struct inode *ip, uint offset, uint sz)$/;"	f	file:
lock	kernel/bio.c	/^  struct spinlock lock;$/;"	m	struct:__anon4	typeref:struct:__anon4::spinlock	file:
lock	kernel/buf.h	/^  struct sleeplock lock;$/;"	m	struct:buf	typeref:struct:buf::sleeplock
lock	kernel/console.c	/^  struct spinlock lock;$/;"	m	struct:__anon3	typeref:struct:__anon3::spinlock	file:
lock	kernel/file.c	/^  struct spinlock lock;$/;"	m	struct:__anon7	typeref:struct:__anon7::spinlock	file:
lock	kernel/file.h	/^  struct sleeplock lock; \/\/ protects everything below here$/;"	m	struct:inode	typeref:struct:inode::sleeplock
lock	kernel/fs.c	/^  struct spinlock lock;$/;"	m	struct:__anon8	typeref:struct:__anon8::spinlock	file:
lock	kernel/kalloc.c	/^  struct spinlock lock;$/;"	m	struct:__anon9	typeref:struct:__anon9::spinlock	file:
lock	kernel/log.c	/^  struct spinlock lock;$/;"	m	struct:log	typeref:struct:log::spinlock	file:
lock	kernel/pipe.c	/^  struct spinlock lock;$/;"	m	struct:pipe	typeref:struct:pipe::spinlock	file:
lock	kernel/printf.c	/^  struct spinlock lock;$/;"	m	struct:__anon5	typeref:struct:__anon5::spinlock	file:
lock	kernel/proc.h	/^  struct spinlock lock;$/;"	m	struct:proc	typeref:struct:proc::spinlock
locked	kernel/sleeplock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:sleeplock
locked	kernel/spinlock.h	/^  uint locked;       \/\/ Is the lock held?$/;"	m	struct:spinlock
locking	kernel/kernel.asm	/^  locking = pr.locking;$/;"	d
locking	kernel/printf.c	/^  int locking;$/;"	m	struct:__anon5	file:
log	kernel/log.c	/^struct log log;$/;"	v	typeref:struct:log
log	kernel/log.c	/^struct log {$/;"	s	file:
log_write	kernel/log.c	/^log_write(struct buf *b)$/;"	f
logheader	kernel/log.c	/^struct logheader {$/;"	s	file:
logstart	kernel/fs.h	/^  uint logstart;     \/\/ Block number of first log block$/;"	m	struct:superblock
ls	user/ls.c	/^ls(char *path)$/;"	f
m	kernel/kernel.asm	/^      m = 1 << (bi % 8);$/;"	d
m	kernel/kernel.asm	/^    m = min(n - tot, BSIZE - off%BSIZE);$/;"	d
m	kernel/kernel.asm	/^  m = 1 << (bi % 8);$/;"	d
m	user/grep.asm	/^  m = 0;$/;"	d
m1	user/usertests.asm	/^      m1 = m2;$/;"	d
m1	user/usertests.asm	/^    m1 = 0;$/;"	d
m1	user/usertests.asm	/^    m1 = malloc(1024*20);$/;"	d
m2	user/usertests.asm	/^      m2 = *(char**)m1;$/;"	d
mac	user/matmul.c	/^static inline __attribute__((always_inline)) int mac(int a, int b, int c) {$/;"	f	file:
machine	kernel/elf.h	/^  ushort machine;$/;"	m	struct:elfhdr
magic	kernel/elf.h	/^  uint magic;  \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
magic	kernel/fs.h	/^  uint magic;        \/\/ Must be FSMAGIC$/;"	m	struct:superblock
main	kernel/main.c	/^main()$/;"	f
main	mkfs/mkfs.c	/^main(int argc, char *argv[])$/;"	f
main	user/cat.c	/^main(int argc, char *argv[])$/;"	f
main	user/echo.c	/^main(int argc, char *argv[])$/;"	f
main	user/forktest.c	/^main(void)$/;"	f
main	user/grep.c	/^main(int argc, char *argv[])$/;"	f
main	user/grind.c	/^main()$/;"	f
main	user/init.c	/^main(void)$/;"	f
main	user/kill.c	/^main(int argc, char **argv)$/;"	f
main	user/ln.c	/^main(int argc, char *argv[])$/;"	f
main	user/ls.c	/^main(int argc, char *argv[])$/;"	f
main	user/matmul.c	/^int main() {$/;"	f
main	user/mkdir.c	/^main(int argc, char *argv[])$/;"	f
main	user/rm.c	/^main(int argc, char *argv[])$/;"	f
main	user/sh.c	/^main(void)$/;"	f
main	user/stressfs.c	/^main(int argc, char *argv[])$/;"	f
main	user/usertests.c	/^main(int argc, char *argv[])$/;"	f
main	user/wc.c	/^main(int argc, char *argv[])$/;"	f
main	user/zombie.c	/^main(void)$/;"	f
major	kernel/file.h	/^  short major;       \/\/ FD_DEVICE$/;"	m	struct:file
major	kernel/file.h	/^  short major;$/;"	m	struct:inode
major	kernel/file.h	12;"	d
major	kernel/fs.h	/^  short major;          \/\/ Major device number (T_DEVICE only)$/;"	m	struct:dinode
malloc	user/umalloc.c	/^malloc(uint nbytes)$/;"	f
manywrites	user/usertests.c	/^manywrites(char *s)$/;"	f
mappages	kernel/vm.c	/^mappages(pagetable_t pagetable, uint64 va, uint64 size, uint64 pa, int perm)$/;"	f
match	user/grep.c	/^match(char *re, char *text)$/;"	f
matchhere	user/grep.c	/^int matchhere(char *re, char *text)$/;"	f
matchstar	user/grep.c	/^int matchstar(int c, char *re, char *text)$/;"	f
mem	kernel/kernel.asm	/^    mem = kalloc();$/;"	d
mem	kernel/kernel.asm	/^  mem = kalloc();$/;"	d
mem	user/usertests.c	/^mem(char *s)$/;"	f
memcmp	kernel/string.c	/^memcmp(const void *v1, const void *v2, uint n)$/;"	f
memcmp	user/ulib.c	/^memcmp(const void *s1, const void *s2, uint n)$/;"	f
memcpy	kernel/string.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memcpy	user/ulib.c	/^memcpy(void *dst, const void *src, uint n)$/;"	f
memmove	kernel/string.c	/^memmove(void *dst, const void *src, uint n)$/;"	f
memmove	user/ulib.c	/^memmove(void *vdst, const void *vsrc, int n)$/;"	f
memset	kernel/string.c	/^memset(void *dst, int c, uint n)$/;"	f
memset	user/ulib.c	/^memset(void *dst, int c, uint n)$/;"	f
memsz	kernel/elf.h	/^  uint64 memsz;$/;"	m	struct:proghdr
min	kernel/fs.c	24;"	d	file:
min	mkfs/mkfs.c	252;"	d	file:
minor	kernel/file.h	/^  short minor;$/;"	m	struct:inode
minor	kernel/file.h	13;"	d
minor	kernel/fs.h	/^  short minor;          \/\/ Minor device number (T_DEVICE only)$/;"	m	struct:dinode
mkdev	kernel/file.h	14;"	d
mkdir	user/cat.asm	/^mkdir:$/;"	l
mkdir	user/echo.asm	/^mkdir:$/;"	l
mkdir	user/forktest.asm	/^mkdir:$/;"	l
mkdir	user/grep.asm	/^mkdir:$/;"	l
mkdir	user/grind.asm	/^mkdir:$/;"	l
mkdir	user/init.asm	/^mkdir:$/;"	l
mkdir	user/kill.asm	/^mkdir:$/;"	l
mkdir	user/ln.asm	/^mkdir:$/;"	l
mkdir	user/ls.asm	/^mkdir:$/;"	l
mkdir	user/matmul.asm	/^mkdir:$/;"	l
mkdir	user/mkdir.asm	/^mkdir:$/;"	l
mkdir	user/rm.asm	/^mkdir:$/;"	l
mkdir	user/sh.asm	/^mkdir:$/;"	l
mkdir	user/stressfs.asm	/^mkdir:$/;"	l
mkdir	user/usertests.asm	/^mkdir:$/;"	l
mkdir	user/usys.S	/^mkdir:$/;"	l
mkdir	user/wc.asm	/^mkdir:$/;"	l
mkdir	user/zombie.asm	/^mkdir:$/;"	l
mknod	user/cat.asm	/^mknod:$/;"	l
mknod	user/echo.asm	/^mknod:$/;"	l
mknod	user/forktest.asm	/^mknod:$/;"	l
mknod	user/grep.asm	/^mknod:$/;"	l
mknod	user/grind.asm	/^mknod:$/;"	l
mknod	user/init.asm	/^mknod:$/;"	l
mknod	user/kill.asm	/^mknod:$/;"	l
mknod	user/ln.asm	/^mknod:$/;"	l
mknod	user/ls.asm	/^mknod:$/;"	l
mknod	user/matmul.asm	/^mknod:$/;"	l
mknod	user/mkdir.asm	/^mknod:$/;"	l
mknod	user/rm.asm	/^mknod:$/;"	l
mknod	user/sh.asm	/^mknod:$/;"	l
mknod	user/stressfs.asm	/^mknod:$/;"	l
mknod	user/usertests.asm	/^mknod:$/;"	l
mknod	user/usys.S	/^mknod:$/;"	l
mknod	user/wc.asm	/^mknod:$/;"	l
mknod	user/zombie.asm	/^mknod:$/;"	l
mode	user/sh.c	/^  int mode;$/;"	m	struct:redircmd	file:
morecore	user/umalloc.c	/^morecore(uint nu)$/;"	f	file:
mycpu	kernel/proc.c	/^mycpu(void)$/;"	f
myproc	kernel/proc.c	/^myproc(void)$/;"	f
n	kernel/kernel.asm	/^      n = PGSIZE;$/;"	d
n	kernel/kernel.asm	/^      n = len;$/;"	d
n	kernel/kernel.asm	/^      n = max;$/;"	d
n	kernel/kernel.asm	/^      n = sz - i;$/;"	d
n	kernel/kernel.asm	/^    n = 0;$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (dstva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = PGSIZE - (srcva - va0);$/;"	d
n	kernel/kernel.asm	/^    n = ip->size - off;$/;"	d
n	kernel/log.c	/^  int n;$/;"	m	struct:logheader	file:
n	user/cat.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/cat.asm	/^  n = 0;$/;"	d
n	user/echo.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/echo.asm	/^  n = 0;$/;"	d
n	user/forktest.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/forktest.asm	/^  n = 0;$/;"	d
n	user/grep.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grep.asm	/^  n = 0;$/;"	d
n	user/grind.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/grind.asm	/^  n = 0;$/;"	d
n	user/init.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/init.asm	/^  n = 0;$/;"	d
n	user/kill.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/kill.asm	/^  n = 0;$/;"	d
n	user/ln.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ln.asm	/^  n = 0;$/;"	d
n	user/ls.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/ls.asm	/^  n = 0;$/;"	d
n	user/matmul.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/matmul.asm	/^  n = 0;$/;"	d
n	user/mkdir.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/mkdir.asm	/^  n = 0;$/;"	d
n	user/rm.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/rm.asm	/^  n = 0;$/;"	d
n	user/sh.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/sh.asm	/^  n = 0;$/;"	d
n	user/stressfs.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/stressfs.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/usertests.asm	/^    n = read(fds[0], (void*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(1, (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], "x", 1);$/;"	d
n	user/usertests.asm	/^    n = write(fds[1], (char*)addr, 8192);$/;"	d
n	user/usertests.asm	/^  n = 0;$/;"	d
n	user/usertests.asm	/^  n = read(fd, (void*)(a+4096), 10);$/;"	d
n	user/usertests.asm	/^  n = read(fd2, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = read(fd3, buf, sizeof(buf));$/;"	d
n	user/usertests.asm	/^  n = write(fd, (void*)(a+4096), 1024);$/;"	d
n	user/wc.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/wc.asm	/^  n = 0;$/;"	d
n	user/zombie.asm	/^    n = n*10 + *s++ - '0';$/;"	d
n	user/zombie.asm	/^  n = 0;$/;"	d
n1	kernel/kernel.asm	/^        n1 = max;$/;"	d
name	kernel/fs.h	/^  char name[DIRSIZ];$/;"	m	struct:dirent
name	kernel/proc.h	/^  char name[16];               \/\/ Process name (debugging)$/;"	m	struct:proc
name	kernel/sleeplock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:sleeplock
name	kernel/spinlock.h	/^  char *name;        \/\/ Name of lock.$/;"	m	struct:spinlock
namecmp	kernel/fs.c	/^namecmp(const char *s, const char *t)$/;"	f
namei	kernel/fs.c	/^namei(char *path)$/;"	f
nameiparent	kernel/fs.c	/^nameiparent(char *path, char *name)$/;"	f
namex	kernel/fs.c	/^namex(char *path, int nameiparent, char *name)$/;"	f	file:
nbitmap	mkfs/mkfs.c	/^int nbitmap = FSSIZE\/BPB + 1;$/;"	v
nblocks	kernel/fs.h	/^  uint nblocks;      \/\/ Number of data blocks$/;"	m	struct:superblock
nblocks	mkfs/mkfs.c	/^int nblocks;  \/\/ Number of data blocks$/;"	v
nc	user/usertests.asm	/^  nc = np = 0;$/;"	d
neg	user/cat.asm	/^    neg = 1;$/;"	d
neg	user/cat.asm	/^  neg = 0;$/;"	d
neg	user/echo.asm	/^    neg = 1;$/;"	d
neg	user/echo.asm	/^  neg = 0;$/;"	d
neg	user/grep.asm	/^    neg = 1;$/;"	d
neg	user/grep.asm	/^  neg = 0;$/;"	d
neg	user/grind.asm	/^    neg = 1;$/;"	d
neg	user/grind.asm	/^  neg = 0;$/;"	d
neg	user/init.asm	/^    neg = 1;$/;"	d
neg	user/init.asm	/^  neg = 0;$/;"	d
neg	user/kill.asm	/^    neg = 1;$/;"	d
neg	user/kill.asm	/^  neg = 0;$/;"	d
neg	user/ln.asm	/^    neg = 1;$/;"	d
neg	user/ln.asm	/^  neg = 0;$/;"	d
neg	user/ls.asm	/^    neg = 1;$/;"	d
neg	user/ls.asm	/^  neg = 0;$/;"	d
neg	user/matmul.asm	/^    neg = 1;$/;"	d
neg	user/matmul.asm	/^  neg = 0;$/;"	d
neg	user/mkdir.asm	/^    neg = 1;$/;"	d
neg	user/mkdir.asm	/^  neg = 0;$/;"	d
neg	user/rm.asm	/^    neg = 1;$/;"	d
neg	user/rm.asm	/^  neg = 0;$/;"	d
neg	user/sh.asm	/^    neg = 1;$/;"	d
neg	user/sh.asm	/^  neg = 0;$/;"	d
neg	user/stressfs.asm	/^    neg = 1;$/;"	d
neg	user/stressfs.asm	/^  neg = 0;$/;"	d
neg	user/usertests.asm	/^    neg = 1;$/;"	d
neg	user/usertests.asm	/^  neg = 0;$/;"	d
neg	user/wc.asm	/^    neg = 1;$/;"	d
neg	user/wc.asm	/^  neg = 0;$/;"	d
neg	user/zombie.asm	/^    neg = 1;$/;"	d
neg	user/zombie.asm	/^  neg = 0;$/;"	d
next	kernel/buf.h	/^  struct buf *next;$/;"	m	struct:buf	typeref:struct:buf::buf
next	kernel/kalloc.c	/^  struct run *next;$/;"	m	struct:run	typeref:struct:run::run	file:
next	kernel/virtio.h	/^  uint16 next;$/;"	m	struct:virtq_desc
nextpid	kernel/kernel.asm	/^  nextpid = nextpid + 1;$/;"	d
nextpid	kernel/proc.c	/^int nextpid = 1;$/;"	v
ninodeblocks	mkfs/mkfs.c	/^int ninodeblocks = NINODES \/ IPB + 1;$/;"	v
ninodes	kernel/fs.h	/^  uint ninodes;      \/\/ Number of inodes.$/;"	m	struct:superblock
nlink	kernel/file.h	/^  short nlink;$/;"	m	struct:inode
nlink	kernel/fs.h	/^  short nlink;          \/\/ Number of links to inode in file system$/;"	m	struct:dinode
nlink	kernel/stat.h	/^  short nlink; \/\/ Number of links to file$/;"	m	struct:stat
nlog	kernel/fs.h	/^  uint nlog;         \/\/ Number of log blocks$/;"	m	struct:superblock
nlog	mkfs/mkfs.c	/^int nlog = LOGSIZE;$/;"	v
nmeta	mkfs/mkfs.c	/^int nmeta;    \/\/ Number of meta blocks (boot, sb, nlog, inode, bitmap)$/;"	v
noff	kernel/proc.h	/^  int noff;                   \/\/ Depth of push_off() nesting.$/;"	m	struct:cpu
nowrite	user/usertests.c	/^nowrite(char *s)$/;"	f
nread	kernel/pipe.c	/^  uint nread;     \/\/ number of bytes read$/;"	m	struct:pipe	file:
nulterminate	user/sh.c	/^nulterminate(struct cmd *cmd)$/;"	f
num	kernel/kernel.asm	/^  num = p->trapframe->a7;$/;"	d
nunits	user/cat.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/echo.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grep.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/grind.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/init.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/kill.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ln.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/ls.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/matmul.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/mkdir.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/rm.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/sh.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/stressfs.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/usertests.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/wc.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nunits	user/zombie.asm	/^  nunits = (nbytes + sizeof(Header) - 1)\/sizeof(Header) + 1;$/;"	d
nwrite	kernel/pipe.c	/^  uint nwrite;    \/\/ number of bytes written$/;"	m	struct:pipe	file:
off	kernel/elf.h	/^  uint64 off;$/;"	m	struct:proghdr
off	kernel/file.h	/^  uint off;          \/\/ FD_INODE$/;"	m	struct:file
ofile	kernel/proc.h	/^  struct file *ofile[NOFILE];  \/\/ Open files$/;"	m	struct:proc	typeref:struct:proc::file
oldbrk	user/usertests.asm	/^  oldbrk = sbrk(0);$/;"	d
oldpagetable	kernel/kernel.asm	/^  oldpagetable = p->pagetable;$/;"	d
oldsz	kernel/kernel.asm	/^  oldsz = PGROUNDUP(oldsz);$/;"	d
open	user/cat.asm	/^open:$/;"	l
open	user/echo.asm	/^open:$/;"	l
open	user/forktest.asm	/^open:$/;"	l
open	user/grep.asm	/^open:$/;"	l
open	user/grind.asm	/^open:$/;"	l
open	user/init.asm	/^open:$/;"	l
open	user/kill.asm	/^open:$/;"	l
open	user/ln.asm	/^open:$/;"	l
open	user/ls.asm	/^open:$/;"	l
open	user/matmul.asm	/^open:$/;"	l
open	user/mkdir.asm	/^open:$/;"	l
open	user/rm.asm	/^open:$/;"	l
open	user/sh.asm	/^open:$/;"	l
open	user/stressfs.asm	/^open:$/;"	l
open	user/usertests.asm	/^open:$/;"	l
open	user/usys.S	/^open:$/;"	l
open	user/wc.asm	/^open:$/;"	l
open	user/zombie.asm	/^open:$/;"	l
openiputtest	user/usertests.c	/^openiputtest(char *s)$/;"	f
opentest	user/usertests.c	/^opentest(char *s)$/;"	f
ops	kernel/virtio_disk.c	/^  struct virtio_blk_req ops[NUM];$/;"	m	struct:disk	typeref:struct:disk::virtio_blk_req	file:
os	kernel/kernel.asm	/^  os = s;$/;"	d
os	user/cat.asm	/^  os = s;$/;"	d
os	user/echo.asm	/^  os = s;$/;"	d
os	user/forktest.asm	/^  os = s;$/;"	d
os	user/grep.asm	/^  os = s;$/;"	d
os	user/grind.asm	/^  os = s;$/;"	d
os	user/init.asm	/^  os = s;$/;"	d
os	user/kill.asm	/^  os = s;$/;"	d
os	user/ln.asm	/^  os = s;$/;"	d
os	user/ls.asm	/^  os = s;$/;"	d
os	user/matmul.asm	/^  os = s;$/;"	d
os	user/mkdir.asm	/^  os = s;$/;"	d
os	user/rm.asm	/^  os = s;$/;"	d
os	user/sh.asm	/^  os = s;$/;"	d
os	user/stressfs.asm	/^  os = s;$/;"	d
os	user/usertests.asm	/^  os = s;$/;"	d
os	user/wc.asm	/^  os = s;$/;"	d
os	user/zombie.asm	/^  os = s;$/;"	d
outofinodes	user/usertests.c	/^outofinodes(char *s)$/;"	f
outstanding	kernel/log.c	/^  int outstanding; \/\/ how many FS sys calls are executing.$/;"	m	struct:log	file:
p	kernel/kernel.asm	/^  p = (char*)PGROUNDUP((uint64)pa_start);$/;"	d
p	kernel/kernel.asm	/^  p = allocproc();$/;"	d
p	kernel/kernel.asm	/^  p = myproc();$/;"	d
p	user/cat.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/echo.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grep.asm	/^      p = q+1;$/;"	d
p	user/grep.asm	/^    p = buf;$/;"	d
p	user/grep.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/grind.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/init.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/kill.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ln.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/ls.asm	/^    p = buf+strlen(buf);$/;"	d
p	user/ls.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/matmul.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/mkdir.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/rm.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/sh.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/stressfs.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/usertests.asm	/^  p = sbrk(amt);$/;"	d
p	user/usertests.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/wc.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
p	user/zombie.asm	/^  p = sbrk(nu * sizeof(Header));$/;"	d
pa	kernel/kernel.asm	/^    pa = PTE2PA(*pte);$/;"	d
pa	kernel/kernel.asm	/^    pa = walkaddr(pagetable, va + i);$/;"	d
pa	kernel/kernel.asm	/^  pa = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = PTE2PA(*pte);$/;"	d
pa0	kernel/kernel.asm	/^    pa0 = walkaddr(pagetable, va0);$/;"	d
paddr	kernel/elf.h	/^  uint64 paddr;$/;"	m	struct:proghdr
pagetable	kernel/kernel.asm	/^      pagetable = (pagetable_t)PTE2PA(*pte);$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = (pagetable_t) kalloc();$/;"	d
pagetable	kernel/kernel.asm	/^  pagetable = uvmcreate();$/;"	d
pagetable	kernel/proc.h	/^  pagetable_t pagetable;       \/\/ User page table$/;"	m	struct:proc
pagetable_t	kernel/kernel.asm	/^pagetable_t$/;"	l
pagetable_t	kernel/riscv.h	/^typedef uint64 *pagetable_t; \/\/ 512 PTEs$/;"	t
panic	kernel/printf.c	/^panic(char *s)$/;"	f
panic	user/sh.c	/^panic(char *s)$/;"	f
panicked	kernel/kernel.asm	/^  panicked = 1; \/\/ freeze uart output from other CPUs$/;"	d
panicked	kernel/printf.c	/^volatile int panicked = 0;$/;"	v
parent	kernel/proc.h	/^  struct proc *parent;         \/\/ Parent process$/;"	m	struct:proc	typeref:struct:proc::proc
parseblock	user/sh.c	/^parseblock(char **ps, char *es)$/;"	f
parsecmd	user/sh.c	/^parsecmd(char *s)$/;"	f
parseexec	user/sh.c	/^parseexec(char **ps, char *es)$/;"	f
parseline	user/sh.c	/^parseline(char **ps, char *es)$/;"	f
parsepipe	user/sh.c	/^parsepipe(char **ps, char *es)$/;"	f
parseredirs	user/sh.c	/^parseredirs(struct cmd *cmd, char **ps, char *es)$/;"	f
pattern	user/grep.asm	/^  pattern = argv[1];$/;"	d
pde_t	kernel/types.h	/^typedef uint64 pde_t;$/;"	t
peek	user/sh.c	/^peek(char **ps, char *es, char *toks)$/;"	f
perm	kernel/kernel.asm	/^      perm = PTE_X;$/;"	d
pgbug	user/usertests.c	/^pgbug(char *s)$/;"	f
phentsize	kernel/elf.h	/^  ushort phentsize;$/;"	m	struct:elfhdr
phnum	kernel/elf.h	/^  ushort phnum;$/;"	m	struct:elfhdr
phoff	kernel/elf.h	/^  uint64 phoff;$/;"	m	struct:elfhdr
pi	kernel/kernel.asm	/^  pi = 0;$/;"	d
pid	kernel/kernel.asm	/^          pid = pp->pid;$/;"	d
pid	kernel/kernel.asm	/^  pid = nextpid;$/;"	d
pid	kernel/kernel.asm	/^  pid = np->pid;$/;"	d
pid	kernel/proc.h	/^  int pid;                     \/\/ Process ID$/;"	m	struct:proc
pid	kernel/sleeplock.h	/^  int pid;           \/\/ Process holding lock$/;"	m	struct:sleeplock
pid	user/forktest.asm	/^    pid = fork();$/;"	d
pid	user/init.asm	/^    pid = fork();$/;"	d
pid	user/sh.asm	/^  pid = fork();$/;"	d
pid	user/usertests.asm	/^    pid = fork();$/;"	d
pid	user/usertests.asm	/^  pid = fork();$/;"	d
pid1	user/usertests.asm	/^  pid1 = fork();$/;"	d
pid2	user/usertests.asm	/^  pid2 = fork();$/;"	d
pid3	user/usertests.asm	/^  pid3 = fork();$/;"	d
pid_lock	kernel/proc.c	/^struct spinlock pid_lock;$/;"	v	typeref:struct:spinlock
pipe	kernel/file.h	/^  struct pipe *pipe; \/\/ FD_PIPE$/;"	m	struct:file	typeref:struct:file::pipe
pipe	kernel/pipe.c	/^struct pipe {$/;"	s	file:
pipe	user/cat.asm	/^pipe:$/;"	l
pipe	user/echo.asm	/^pipe:$/;"	l
pipe	user/forktest.asm	/^pipe:$/;"	l
pipe	user/grep.asm	/^pipe:$/;"	l
pipe	user/grind.asm	/^pipe:$/;"	l
pipe	user/init.asm	/^pipe:$/;"	l
pipe	user/kill.asm	/^pipe:$/;"	l
pipe	user/ln.asm	/^pipe:$/;"	l
pipe	user/ls.asm	/^pipe:$/;"	l
pipe	user/matmul.asm	/^pipe:$/;"	l
pipe	user/mkdir.asm	/^pipe:$/;"	l
pipe	user/rm.asm	/^pipe:$/;"	l
pipe	user/sh.asm	/^pipe:$/;"	l
pipe	user/stressfs.asm	/^pipe:$/;"	l
pipe	user/usertests.asm	/^pipe:$/;"	l
pipe	user/usys.S	/^pipe:$/;"	l
pipe	user/wc.asm	/^pipe:$/;"	l
pipe	user/zombie.asm	/^pipe:$/;"	l
pipe1	user/usertests.c	/^pipe1(char *s)$/;"	f
pipealloc	kernel/pipe.c	/^pipealloc(struct file **f0, struct file **f1)$/;"	f
pipeclose	kernel/pipe.c	/^pipeclose(struct pipe *pi, int writable)$/;"	f
pipecmd	user/sh.c	/^pipecmd(struct cmd *left, struct cmd *right)$/;"	f
pipecmd	user/sh.c	/^struct pipecmd {$/;"	s	file:
piperead	kernel/pipe.c	/^piperead(struct pipe *pi, uint64 addr, int n)$/;"	f
pipewrite	kernel/pipe.c	/^pipewrite(struct pipe *pi, uint64 addr, int n)$/;"	f
plic_claim	kernel/plic.c	/^plic_claim(void)$/;"	f
plic_complete	kernel/plic.c	/^plic_complete(int irq)$/;"	f
plicinit	kernel/plic.c	/^plicinit(void)$/;"	f
plicinithart	kernel/plic.c	/^plicinithart(void)$/;"	f
pop_off	kernel/spinlock.c	/^pop_off(void)$/;"	f
pr	kernel/printf.c	/^} pr;$/;"	v	typeref:struct:__anon5	file:
preempt	user/usertests.c	/^preempt(char *s)$/;"	f
prev	kernel/buf.h	/^  struct buf *prev; \/\/ LRU cache list$/;"	m	struct:buf	typeref:struct:buf::buf
print	user/forktest.c	/^print(const char *s)$/;"	f
printf	kernel/printf.c	/^printf(char *fmt, ...)$/;"	f
printf	user/printf.c	/^printf(const char *fmt, ...)$/;"	f
printfinit	kernel/printf.c	/^printfinit(void)$/;"	f
printint	kernel/printf.c	/^printint(long long xx, int base, int sign)$/;"	f	file:
printint	user/printf.c	/^printint(int fd, int xx, int base, int sgn)$/;"	f	file:
printptr	kernel/printf.c	/^printptr(uint64 x)$/;"	f	file:
printptr	user/printf.c	/^printptr(int fd, uint64 x) {$/;"	f	file:
proc	kernel/proc.c	/^struct proc proc[NPROC];$/;"	v	typeref:struct:proc
proc	kernel/proc.h	/^  struct proc *proc;          \/\/ The process running on this cpu, or null.$/;"	m	struct:cpu	typeref:struct:cpu::proc
proc	kernel/proc.h	/^struct proc {$/;"	s
proc_freepagetable	kernel/proc.c	/^proc_freepagetable(pagetable_t pagetable, uint64 sz)$/;"	f
proc_mapstacks	kernel/proc.c	/^proc_mapstacks(pagetable_t kpgtbl)$/;"	f
proc_pagetable	kernel/proc.c	/^proc_pagetable(struct proc *p)$/;"	f
procdump	kernel/proc.c	/^procdump(void)$/;"	f
procinit	kernel/proc.c	/^procinit(void)$/;"	f
procstate	kernel/proc.h	/^enum procstate { UNUSED, USED, SLEEPING, RUNNABLE, RUNNING, ZOMBIE };$/;"	g
proghdr	kernel/elf.h	/^struct proghdr {$/;"	s
pte	kernel/kernel.asm	/^    pte = walk(pagetable, va0, 0);$/;"	d
pte	kernel/kernel.asm	/^  pte = walk(pagetable, va, 0);$/;"	d
pte_t	kernel/kernel.asm	/^pte_t *$/;"	l
pte_t	kernel/riscv.h	/^typedef uint64 pte_t;$/;"	t
ptr	user/umalloc.c	/^    union header *ptr;$/;"	m	struct:header::__anon1	typeref:union:header::__anon1::header	file:
push_off	kernel/spinlock.c	/^push_off(void)$/;"	f
putc	user/printf.c	/^putc(int fd, char c)$/;"	f	file:
quick	user/usertests.asm	/^    quick = 1;$/;"	d
quicktests	user/usertests.c	/^} quicktests[] = {$/;"	v	typeref:struct:test
r	kernel/console.c	/^  uint r;  \/\/ Read index$/;"	m	struct:__anon3	file:
r	kernel/kernel.asm	/^    r = devsw[f->major].read(1, addr, n);$/;"	d
r	kernel/kernel.asm	/^    r = piperead(f->pipe, addr, n);$/;"	d
r	kernel/kernel.asm	/^  r = (lk->locked && lk->cpu == mycpu());$/;"	d
r	kernel/kernel.asm	/^  r = (struct run*)pa;$/;"	d
r	kernel/kernel.asm	/^  r = kmem.freelist;$/;"	d
r	kernel/kernel.asm	/^  r = lk->locked && (lk->pid == myproc()->pid);$/;"	d
r	user/cat.asm	/^  r = fstat(fd, st);$/;"	d
r	user/echo.asm	/^  r = fstat(fd, st);$/;"	d
r	user/forktest.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grep.asm	/^  r = fstat(fd, st);$/;"	d
r	user/grind.asm	/^  r = fstat(fd, st);$/;"	d
r	user/init.asm	/^  r = fstat(fd, st);$/;"	d
r	user/kill.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ln.asm	/^  r = fstat(fd, st);$/;"	d
r	user/ls.asm	/^  r = fstat(fd, st);$/;"	d
r	user/matmul.asm	/^  r = fstat(fd, st);$/;"	d
r	user/mkdir.asm	/^  r = fstat(fd, st);$/;"	d
r	user/rm.asm	/^  r = fstat(fd, st);$/;"	d
r	user/sh.asm	/^  r = fstat(fd, st);$/;"	d
r	user/stressfs.asm	/^  r = fstat(fd, st);$/;"	d
r	user/usertests.asm	/^  r = fstat(fd, st);$/;"	d
r	user/wc.asm	/^  r = fstat(fd, st);$/;"	d
r	user/zombie.asm	/^  r = fstat(fd, st);$/;"	d
r_mcounteren	kernel/riscv.h	/^r_mcounteren()$/;"	f
r_medeleg	kernel/riscv.h	/^r_medeleg()$/;"	f
r_menvcfg	kernel/riscv.h	/^r_menvcfg()$/;"	f
r_mhartid	kernel/riscv.h	/^r_mhartid()$/;"	f
r_mideleg	kernel/riscv.h	/^r_mideleg()$/;"	f
r_mie	kernel/riscv.h	/^r_mie()$/;"	f
r_mstatus	kernel/riscv.h	/^r_mstatus()$/;"	f
r_ra	kernel/riscv.h	/^r_ra()$/;"	f
r_satp	kernel/riscv.h	/^r_satp()$/;"	f
r_scause	kernel/riscv.h	/^r_scause()$/;"	f
r_sepc	kernel/riscv.h	/^r_sepc()$/;"	f
r_sie	kernel/riscv.h	/^r_sie()$/;"	f
r_sip	kernel/riscv.h	/^r_sip()$/;"	f
r_sp	kernel/riscv.h	/^r_sp()$/;"	f
r_sstatus	kernel/riscv.h	/^r_sstatus()$/;"	f
r_stimecmp	kernel/riscv.h	/^r_stimecmp()$/;"	f
r_stval	kernel/riscv.h	/^r_stval()$/;"	f
r_stvec	kernel/riscv.h	/^r_stvec()$/;"	f
r_time	kernel/riscv.h	/^r_time()$/;"	f
r_tp	kernel/riscv.h	/^r_tp()$/;"	f
ra	kernel/proc.h	/^  \/*  40 *\/ uint64 ra;$/;"	m	struct:trapframe
ra	kernel/proc.h	/^  uint64 ra;$/;"	m	struct:context
rand	user/grind.c	/^rand(void)$/;"	f
rand_next	user/grind.c	/^unsigned long rand_next = 1;$/;"	v
rcmd	user/sh.asm	/^    rcmd = (struct redircmd*)cmd;$/;"	d
read	kernel/file.h	/^  int (*read)(int, uint64, int);$/;"	m	struct:devsw
read	user/cat.asm	/^read:$/;"	l
read	user/echo.asm	/^read:$/;"	l
read	user/forktest.asm	/^read:$/;"	l
read	user/grep.asm	/^read:$/;"	l
read	user/grind.asm	/^read:$/;"	l
read	user/init.asm	/^read:$/;"	l
read	user/kill.asm	/^read:$/;"	l
read	user/ln.asm	/^read:$/;"	l
read	user/ls.asm	/^read:$/;"	l
read	user/matmul.asm	/^read:$/;"	l
read	user/mkdir.asm	/^read:$/;"	l
read	user/rm.asm	/^read:$/;"	l
read	user/sh.asm	/^read:$/;"	l
read	user/stressfs.asm	/^read:$/;"	l
read	user/usertests.asm	/^read:$/;"	l
read	user/usys.S	/^read:$/;"	l
read	user/wc.asm	/^read:$/;"	l
read	user/zombie.asm	/^read:$/;"	l
read_head	kernel/log.c	/^read_head(void)$/;"	f	file:
readable	kernel/file.h	/^  char readable;$/;"	m	struct:file
readi	kernel/fs.c	/^readi(struct inode *ip, int user_dst, uint64 dst, uint off, uint n)$/;"	f
readopen	kernel/pipe.c	/^  int readopen;   \/\/ read fd is still open$/;"	m	struct:pipe	file:
readsb	kernel/fs.c	/^readsb(int dev, struct superblock *sb)$/;"	f	file:
recover_from_log	kernel/log.c	/^recover_from_log(void)$/;"	f	file:
redircmd	user/sh.c	/^redircmd(struct cmd *subcmd, char *file, char *efile, int mode, int fd)$/;"	f
redircmd	user/sh.c	/^struct redircmd {$/;"	s	file:
ref	kernel/file.h	/^  int ref;            \/\/ Reference count$/;"	m	struct:inode
ref	kernel/file.h	/^  int ref; \/\/ reference count$/;"	m	struct:file
refcnt	kernel/buf.h	/^  uint refcnt;$/;"	m	struct:buf
release	kernel/spinlock.c	/^release(struct spinlock *lk)$/;"	f
releasesleep	kernel/sleeplock.c	/^releasesleep(struct sleeplock *lk)$/;"	f
reparent	kernel/proc.c	/^reparent(struct proc *p)$/;"	f
reparent	user/usertests.c	/^reparent(char *s)$/;"	f
reparent2	user/usertests.c	/^reparent2(char *s)$/;"	f
reserved	kernel/virtio.h	/^  uint32 reserved;$/;"	m	struct:virtio_blk_req
result	user/matmul.asm	/^                result = mac(A[i][k], B[k][j], result);$/;"	d
ret	kernel/kernel.asm	/^    ret = (i == n ? n : -1);$/;"	d
ret	kernel/kernel.asm	/^    ret = devsw[f->major].write(1, addr, n);$/;"	d
ret	kernel/kernel.asm	/^    ret = pipewrite(f->pipe, addr, n);$/;"	d
ret	user/sh.asm	/^      ret = '+';$/;"	d
ret	user/sh.asm	/^    ret = 'a';$/;"	d
ret	user/sh.asm	/^    ret = parseredirs(ret, ps, es);$/;"	d
ret	user/sh.asm	/^  ret = *s;$/;"	d
ret	user/sh.asm	/^  ret = execcmd();$/;"	d
ret	user/sh.asm	/^  ret = parseredirs(ret, ps, es);$/;"	d
ret	user/usertests.asm	/^    ret = exec("echo", args2);$/;"	d
ret	user/usertests.asm	/^  ret = exec(b, args);$/;"	d
ret	user/usertests.asm	/^  ret = link(b, b);$/;"	d
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:listcmd	typeref:struct:listcmd::cmd	file:
right	user/sh.c	/^  struct cmd *right;$/;"	m	struct:pipecmd	typeref:struct:pipecmd::cmd	file:
ring	kernel/virtio.h	/^  struct virtq_used_elem ring[NUM];$/;"	m	struct:virtq_used	typeref:struct:virtq_used::virtq_used_elem
ring	kernel/virtio.h	/^  uint16 ring[NUM]; \/\/ descriptor numbers of chain heads$/;"	m	struct:virtq_avail
rinode	mkfs/mkfs.c	/^rinode(uint inum, struct dinode *ip)$/;"	f
rmdot	user/usertests.c	/^rmdot(char *s)$/;"	f
rsect	mkfs/mkfs.c	/^rsect(uint sec, void *buf)$/;"	f
run	kernel/kalloc.c	/^struct run {$/;"	s	file:
run	user/usertests.c	/^run(void f(char *), char *s) {$/;"	f
runcmd	user/sh.c	/^runcmd(struct cmd *cmd)$/;"	f
runtests	user/usertests.c	/^runtests(struct test *tests, char *justone, int continuous) {$/;"	f
rwsbrk	user/usertests.c	/^rwsbrk()$/;"	f
s	kernel/kernel.asm	/^        s = "(null)";$/;"	d
s	kernel/kernel.asm	/^  s = src;$/;"	d
s	user/cat.asm	/^          s = "(null)";$/;"	d
s	user/echo.asm	/^          s = "(null)";$/;"	d
s	user/grep.asm	/^          s = "(null)";$/;"	d
s	user/grind.asm	/^          s = "(null)";$/;"	d
s	user/init.asm	/^          s = "(null)";$/;"	d
s	user/kill.asm	/^          s = "(null)";$/;"	d
s	user/ln.asm	/^          s = "(null)";$/;"	d
s	user/ls.asm	/^          s = "(null)";$/;"	d
s	user/matmul.asm	/^          s = "(null)";$/;"	d
s	user/mkdir.asm	/^          s = "(null)";$/;"	d
s	user/rm.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^          s = "(null)";$/;"	d
s	user/sh.asm	/^  s = *ps;$/;"	d
s	user/stressfs.asm	/^          s = "(null)";$/;"	d
s	user/umalloc.c	/^  } s;$/;"	m	union:header	typeref:struct:header::__anon1	file:
s	user/usertests.asm	/^          s = "(null)";$/;"	d
s	user/usertests.c	/^  char *s;$/;"	m	struct:test	file:
s	user/wc.asm	/^          s = "(null)";$/;"	d
s	user/zombie.asm	/^          s = "(null)";$/;"	d
s0	kernel/proc.h	/^  \/*  96 *\/ uint64 s0;$/;"	m	struct:trapframe
s0	kernel/proc.h	/^  uint64 s0;$/;"	m	struct:context
s1	kernel/kernel.asm	/^  s1 = v1;$/;"	d
s1	kernel/proc.h	/^  \/* 104 *\/ uint64 s1;$/;"	m	struct:trapframe
s1	kernel/proc.h	/^  uint64 s1;$/;"	m	struct:context
s10	kernel/proc.h	/^  \/* 240 *\/ uint64 s10;$/;"	m	struct:trapframe
s10	kernel/proc.h	/^  uint64 s10;$/;"	m	struct:context
s11	kernel/proc.h	/^  \/* 248 *\/ uint64 s11;$/;"	m	struct:trapframe
s11	kernel/proc.h	/^  uint64 s11;$/;"	m	struct:context
s2	kernel/kernel.asm	/^  s2 = v2;$/;"	d
s2	kernel/proc.h	/^  \/* 176 *\/ uint64 s2;$/;"	m	struct:trapframe
s2	kernel/proc.h	/^  uint64 s2;$/;"	m	struct:context
s3	kernel/proc.h	/^  \/* 184 *\/ uint64 s3;$/;"	m	struct:trapframe
s3	kernel/proc.h	/^  uint64 s3;$/;"	m	struct:context
s4	kernel/proc.h	/^  \/* 192 *\/ uint64 s4;$/;"	m	struct:trapframe
s4	kernel/proc.h	/^  uint64 s4;$/;"	m	struct:context
s5	kernel/proc.h	/^  \/* 200 *\/ uint64 s5;$/;"	m	struct:trapframe
s5	kernel/proc.h	/^  uint64 s5;$/;"	m	struct:context
s6	kernel/proc.h	/^  \/* 208 *\/ uint64 s6;$/;"	m	struct:trapframe
s6	kernel/proc.h	/^  uint64 s6;$/;"	m	struct:context
s7	kernel/proc.h	/^  \/* 216 *\/ uint64 s7;$/;"	m	struct:trapframe
s7	kernel/proc.h	/^  uint64 s7;$/;"	m	struct:context
s8	kernel/proc.h	/^  \/* 224 *\/ uint64 s8;$/;"	m	struct:trapframe
s8	kernel/proc.h	/^  uint64 s8;$/;"	m	struct:context
s9	kernel/proc.h	/^  \/* 232 *\/ uint64 s9;$/;"	m	struct:trapframe
s9	kernel/proc.h	/^  uint64 s9;$/;"	m	struct:context
safestrcpy	kernel/string.c	/^safestrcpy(char *s, const char *t, int n)$/;"	f
sb	kernel/fs.c	/^struct superblock sb; $/;"	v	typeref:struct:superblock
sb	mkfs/mkfs.c	/^struct superblock sb;$/;"	v	typeref:struct:superblock
sbrk	user/cat.asm	/^sbrk:$/;"	l
sbrk	user/echo.asm	/^sbrk:$/;"	l
sbrk	user/forktest.asm	/^sbrk:$/;"	l
sbrk	user/grep.asm	/^sbrk:$/;"	l
sbrk	user/grind.asm	/^sbrk:$/;"	l
sbrk	user/init.asm	/^sbrk:$/;"	l
sbrk	user/kill.asm	/^sbrk:$/;"	l
sbrk	user/ln.asm	/^sbrk:$/;"	l
sbrk	user/ls.asm	/^sbrk:$/;"	l
sbrk	user/matmul.asm	/^sbrk:$/;"	l
sbrk	user/mkdir.asm	/^sbrk:$/;"	l
sbrk	user/rm.asm	/^sbrk:$/;"	l
sbrk	user/sh.asm	/^sbrk:$/;"	l
sbrk	user/stressfs.asm	/^sbrk:$/;"	l
sbrk	user/usertests.asm	/^sbrk:$/;"	l
sbrk	user/usys.S	/^sbrk:$/;"	l
sbrk	user/wc.asm	/^sbrk:$/;"	l
sbrk	user/zombie.asm	/^sbrk:$/;"	l
sbrk8000	user/usertests.c	/^sbrk8000(char *s)$/;"	f
sbrkarg	user/usertests.c	/^sbrkarg(char *s)$/;"	f
sbrkbasic	user/usertests.c	/^sbrkbasic(char *s)$/;"	f
sbrkbugs	user/usertests.c	/^sbrkbugs(char *s)$/;"	f
sbrkfail	user/usertests.c	/^sbrkfail(char *s)$/;"	f
sbrklast	user/usertests.c	/^sbrklast(char *s)$/;"	f
sbrkmuch	user/usertests.c	/^sbrkmuch(char *s)$/;"	f
sched	kernel/proc.c	/^sched(void)$/;"	f
scheduler	kernel/proc.c	/^scheduler(void)$/;"	f
sector	kernel/virtio.h	/^  uint64 sector;$/;"	m	struct:virtio_blk_req
setkilled	kernel/proc.c	/^setkilled(struct proc *p)$/;"	f
sfence_vma	kernel/riscv.h	/^sfence_vma()$/;"	f
sharedfd	user/usertests.c	/^sharedfd(char *s)$/;"	f
shentsize	kernel/elf.h	/^  ushort shentsize;$/;"	m	struct:elfhdr
shnum	kernel/elf.h	/^  ushort shnum;$/;"	m	struct:elfhdr
shoff	kernel/elf.h	/^  uint64 shoff;$/;"	m	struct:elfhdr
shstrndx	kernel/elf.h	/^  ushort shstrndx;$/;"	m	struct:elfhdr
size	kernel/file.h	/^  uint size;$/;"	m	struct:inode
size	kernel/fs.h	/^  uint size;            \/\/ Size of file (bytes)$/;"	m	struct:dinode
size	kernel/fs.h	/^  uint size;         \/\/ Size of file system image (blocks)$/;"	m	struct:superblock
size	kernel/log.c	/^  int size;$/;"	m	struct:log	file:
size	kernel/stat.h	/^  uint64 size; \/\/ Size of file in bytes$/;"	m	struct:stat
size	user/umalloc.c	/^    uint size;$/;"	m	struct:header::__anon1	file:
skipelem	kernel/fs.c	/^skipelem(char *path, char *name)$/;"	f	file:
sleep	kernel/proc.c	/^sleep(void *chan, struct spinlock *lk)$/;"	f
sleep	user/cat.asm	/^sleep:$/;"	l
sleep	user/echo.asm	/^sleep:$/;"	l
sleep	user/forktest.asm	/^sleep:$/;"	l
sleep	user/grep.asm	/^sleep:$/;"	l
sleep	user/grind.asm	/^sleep:$/;"	l
sleep	user/init.asm	/^sleep:$/;"	l
sleep	user/kill.asm	/^sleep:$/;"	l
sleep	user/ln.asm	/^sleep:$/;"	l
sleep	user/ls.asm	/^sleep:$/;"	l
sleep	user/matmul.asm	/^sleep:$/;"	l
sleep	user/mkdir.asm	/^sleep:$/;"	l
sleep	user/rm.asm	/^sleep:$/;"	l
sleep	user/sh.asm	/^sleep:$/;"	l
sleep	user/stressfs.asm	/^sleep:$/;"	l
sleep	user/usertests.asm	/^sleep:$/;"	l
sleep	user/usys.S	/^sleep:$/;"	l
sleep	user/wc.asm	/^sleep:$/;"	l
sleep	user/zombie.asm	/^sleep:$/;"	l
sleeplock	kernel/sleeplock.h	/^struct sleeplock {$/;"	s
slowtests	user/usertests.c	/^struct test slowtests[] = {$/;"	v	typeref:struct:test
sp	kernel/kernel.asm	/^  sp = sz;$/;"	d
sp	kernel/proc.h	/^  \/*  48 *\/ uint64 sp;$/;"	m	struct:trapframe
sp	kernel/proc.h	/^  uint64 sp;$/;"	m	struct:context
spin	kernel/entry.S	/^spin:$/;"	l
spinlock	kernel/spinlock.h	/^struct spinlock {$/;"	s
src	user/cat.asm	/^  src = vsrc;$/;"	d
src	user/echo.asm	/^  src = vsrc;$/;"	d
src	user/forktest.asm	/^  src = vsrc;$/;"	d
src	user/grep.asm	/^  src = vsrc;$/;"	d
src	user/grind.asm	/^  src = vsrc;$/;"	d
src	user/init.asm	/^  src = vsrc;$/;"	d
src	user/kill.asm	/^  src = vsrc;$/;"	d
src	user/ln.asm	/^  src = vsrc;$/;"	d
src	user/ls.asm	/^  src = vsrc;$/;"	d
src	user/matmul.asm	/^  src = vsrc;$/;"	d
src	user/mkdir.asm	/^  src = vsrc;$/;"	d
src	user/rm.asm	/^  src = vsrc;$/;"	d
src	user/sh.asm	/^  src = vsrc;$/;"	d
src	user/stressfs.asm	/^  src = vsrc;$/;"	d
src	user/usertests.asm	/^  src = vsrc;$/;"	d
src	user/wc.asm	/^  src = vsrc;$/;"	d
src	user/zombie.asm	/^  src = vsrc;$/;"	d
srcva	kernel/kernel.asm	/^    srcva = va0 + PGSIZE;$/;"	d
stack0	kernel/start.c	/^__attribute__ ((aligned (16))) char stack0[4096 * NCPU];$/;"	v
stackbase	kernel/kernel.asm	/^  stackbase = sp - USERSTACK*PGSIZE;$/;"	d
stacktest	user/usertests.c	/^stacktest(char *s)$/;"	f
start	kernel/log.c	/^  int start;$/;"	m	struct:log	file:
start	kernel/start.c	/^start()$/;"	f
start	user/initcode.S	/^start:$/;"	l
start	user/initcode.asm	/^start:$/;"	l
start	user/ulib.c	/^start()$/;"	f
started	kernel/kernel.asm	/^    started = 1;$/;"	d
started	kernel/main.c	/^volatile static int started = 0;$/;"	v	file:
stat	kernel/stat.h	/^struct stat {$/;"	s
stat	mkfs/mkfs.c	8;"	d	file:
stat	user/ulib.c	/^stat(const char *n, struct stat *st)$/;"	f
state	kernel/kernel.asm	/^      state = "???";$/;"	d
state	kernel/kernel.asm	/^      state = states[p->state];$/;"	d
state	kernel/proc.h	/^  enum procstate state;        \/\/ Process state$/;"	m	struct:proc	typeref:enum:proc::procstate
state	user/cat.asm	/^        state = '%';$/;"	d
state	user/cat.asm	/^      state = 0;$/;"	d
state	user/cat.asm	/^  state = 0;$/;"	d
state	user/echo.asm	/^        state = '%';$/;"	d
state	user/echo.asm	/^      state = 0;$/;"	d
state	user/echo.asm	/^  state = 0;$/;"	d
state	user/grep.asm	/^        state = '%';$/;"	d
state	user/grep.asm	/^      state = 0;$/;"	d
state	user/grep.asm	/^  state = 0;$/;"	d
state	user/grind.asm	/^        state = '%';$/;"	d
state	user/grind.asm	/^      state = 0;$/;"	d
state	user/grind.asm	/^  state = 0;$/;"	d
state	user/init.asm	/^        state = '%';$/;"	d
state	user/init.asm	/^      state = 0;$/;"	d
state	user/init.asm	/^  state = 0;$/;"	d
state	user/kill.asm	/^        state = '%';$/;"	d
state	user/kill.asm	/^      state = 0;$/;"	d
state	user/kill.asm	/^  state = 0;$/;"	d
state	user/ln.asm	/^        state = '%';$/;"	d
state	user/ln.asm	/^      state = 0;$/;"	d
state	user/ln.asm	/^  state = 0;$/;"	d
state	user/ls.asm	/^        state = '%';$/;"	d
state	user/ls.asm	/^      state = 0;$/;"	d
state	user/ls.asm	/^  state = 0;$/;"	d
state	user/matmul.asm	/^        state = '%';$/;"	d
state	user/matmul.asm	/^      state = 0;$/;"	d
state	user/matmul.asm	/^  state = 0;$/;"	d
state	user/mkdir.asm	/^        state = '%';$/;"	d
state	user/mkdir.asm	/^      state = 0;$/;"	d
state	user/mkdir.asm	/^  state = 0;$/;"	d
state	user/rm.asm	/^        state = '%';$/;"	d
state	user/rm.asm	/^      state = 0;$/;"	d
state	user/rm.asm	/^  state = 0;$/;"	d
state	user/sh.asm	/^        state = '%';$/;"	d
state	user/sh.asm	/^      state = 0;$/;"	d
state	user/sh.asm	/^  state = 0;$/;"	d
state	user/stressfs.asm	/^        state = '%';$/;"	d
state	user/stressfs.asm	/^      state = 0;$/;"	d
state	user/stressfs.asm	/^  state = 0;$/;"	d
state	user/usertests.asm	/^        state = '%';$/;"	d
state	user/usertests.asm	/^      state = 0;$/;"	d
state	user/usertests.asm	/^  state = 0;$/;"	d
state	user/wc.asm	/^        state = '%';$/;"	d
state	user/wc.asm	/^      state = 0;$/;"	d
state	user/wc.asm	/^  state = 0;$/;"	d
state	user/zombie.asm	/^        state = '%';$/;"	d
state	user/zombie.asm	/^      state = 0;$/;"	d
state	user/zombie.asm	/^  state = 0;$/;"	d
stati	kernel/fs.c	/^stati(struct inode *ip, struct stat *st)$/;"	f
static	kernel/kernel.asm	/^static char digits[] = "0123456789abcdef";$/;"	l
static	kernel/kernel.asm	/^static inline uint64$/;"	l
static	kernel/kernel.asm	/^static inline void $/;"	l
static	kernel/kernel.asm	/^static inline void$/;"	l
static	kernel/kernel.asm	/^static int loadseg(pde_t *, uint64, struct inode *, uint, uint);$/;"	l
static	kernel/kernel.asm	/^static int$/;"	l
static	kernel/kernel.asm	/^static struct inode*$/;"	t
static	kernel/kernel.asm	/^static uint$/;"	l
static	kernel/kernel.asm	/^static uint64$/;"	l
static	kernel/kernel.asm	/^static void$/;"	l
static	user/cat.asm	/^static Header *freep;$/;"	l
static	user/cat.asm	/^static Header base;$/;"	l
static	user/cat.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/cat.asm	/^static void$/;"	l
static	user/echo.asm	/^static Header *freep;$/;"	l
static	user/echo.asm	/^static Header base;$/;"	l
static	user/echo.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/echo.asm	/^static void$/;"	l
static	user/grep.asm	/^static Header *freep;$/;"	l
static	user/grep.asm	/^static Header base;$/;"	l
static	user/grep.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grep.asm	/^static void$/;"	l
static	user/grind.asm	/^static Header *freep;$/;"	l
static	user/grind.asm	/^static Header base;$/;"	l
static	user/grind.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/grind.asm	/^static void$/;"	l
static	user/init.asm	/^static Header *freep;$/;"	l
static	user/init.asm	/^static Header base;$/;"	l
static	user/init.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/init.asm	/^static void$/;"	l
static	user/kill.asm	/^static Header *freep;$/;"	l
static	user/kill.asm	/^static Header base;$/;"	l
static	user/kill.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/kill.asm	/^static void$/;"	l
static	user/ln.asm	/^static Header *freep;$/;"	l
static	user/ln.asm	/^static Header base;$/;"	l
static	user/ln.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ln.asm	/^static void$/;"	l
static	user/ls.asm	/^static Header *freep;$/;"	l
static	user/ls.asm	/^static Header base;$/;"	l
static	user/ls.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/ls.asm	/^static void$/;"	l
static	user/matmul.asm	/^static Header *freep;$/;"	l
static	user/matmul.asm	/^static Header base;$/;"	l
static	user/matmul.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/matmul.asm	/^static void$/;"	l
static	user/mkdir.asm	/^static Header *freep;$/;"	l
static	user/mkdir.asm	/^static Header base;$/;"	l
static	user/mkdir.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/mkdir.asm	/^static void$/;"	l
static	user/rm.asm	/^static Header *freep;$/;"	l
static	user/rm.asm	/^static Header base;$/;"	l
static	user/rm.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/rm.asm	/^static void$/;"	l
static	user/sh.asm	/^static Header *freep;$/;"	l
static	user/sh.asm	/^static Header base;$/;"	l
static	user/sh.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/sh.asm	/^static void$/;"	l
static	user/stressfs.asm	/^static Header *freep;$/;"	l
static	user/stressfs.asm	/^static Header base;$/;"	l
static	user/stressfs.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/stressfs.asm	/^static void$/;"	l
static	user/usertests.asm	/^static Header *freep;$/;"	l
static	user/usertests.asm	/^static Header base;$/;"	l
static	user/usertests.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/usertests.asm	/^static inline uint64$/;"	l
static	user/usertests.asm	/^static void$/;"	l
static	user/wc.asm	/^static Header *freep;$/;"	l
static	user/wc.asm	/^static Header base;$/;"	l
static	user/wc.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/wc.asm	/^static void$/;"	l
static	user/zombie.asm	/^static Header *freep;$/;"	l
static	user/zombie.asm	/^static Header base;$/;"	l
static	user/zombie.asm	/^static char digits[] = "0123456789ABCDEF";$/;"	l
static	user/zombie.asm	/^static void$/;"	l
static_assert	mkfs/mkfs.c	15;"	d	file:
status	kernel/kernel.asm	/^  status = *R(VIRTIO_MMIO_STATUS);$/;"	d
status	kernel/virtio_disk.c	/^    char status;$/;"	m	struct:disk::__anon2	file:
strchr	user/ulib.c	/^strchr(const char *s, char c)$/;"	f
strcmp	user/ulib.c	/^strcmp(const char *p, const char *q)$/;"	f
strcpy	user/ulib.c	/^strcpy(char *s, const char *t)$/;"	f
strlen	kernel/string.c	/^strlen(const char *s)$/;"	f
strlen	user/ulib.c	/^strlen(const char *s)$/;"	f
strncmp	kernel/string.c	/^strncmp(const char *p, const char *q, uint n)$/;"	f
strncpy	kernel/string.c	/^strncpy(char *s, const char *t, int n)$/;"	f
struct	kernel/kernel.asm	/^  struct proc *p = c->proc;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p = myproc();$/;"	l
struct	kernel/kernel.asm	/^  struct proc *p;$/;"	l
struct	kernel/kernel.asm	/^  struct proc *pr = myproc();$/;"	l
subdir	user/usertests.c	/^subdir(char *s)$/;"	f
superblock	kernel/fs.h	/^struct superblock {$/;"	s
swtch	kernel/swtch.S	/^swtch:$/;"	l
symbols	user/sh.c	/^char symbols[] = "<|>&;()";$/;"	v
sys_chdir	kernel/sysfile.c	/^sys_chdir(void)$/;"	f
sys_close	kernel/sysfile.c	/^sys_close(void)$/;"	f
sys_dup	kernel/sysfile.c	/^sys_dup(void)$/;"	f
sys_exec	kernel/sysfile.c	/^sys_exec(void)$/;"	f
sys_exit	kernel/sysproc.c	/^sys_exit(void)$/;"	f
sys_fork	kernel/sysproc.c	/^sys_fork(void)$/;"	f
sys_fstat	kernel/sysfile.c	/^sys_fstat(void)$/;"	f
sys_getpid	kernel/sysproc.c	/^sys_getpid(void)$/;"	f
sys_kill	kernel/sysproc.c	/^sys_kill(void)$/;"	f
sys_link	kernel/sysfile.c	/^sys_link(void)$/;"	f
sys_mkdir	kernel/sysfile.c	/^sys_mkdir(void)$/;"	f
sys_mknod	kernel/sysfile.c	/^sys_mknod(void)$/;"	f
sys_open	kernel/sysfile.c	/^sys_open(void)$/;"	f
sys_pipe	kernel/sysfile.c	/^sys_pipe(void)$/;"	f
sys_read	kernel/sysfile.c	/^sys_read(void)$/;"	f
sys_sbrk	kernel/sysproc.c	/^sys_sbrk(void)$/;"	f
sys_sleep	kernel/sysproc.c	/^sys_sleep(void)$/;"	f
sys_unlink	kernel/sysfile.c	/^sys_unlink(void)$/;"	f
sys_uptime	kernel/sysproc.c	/^sys_uptime(void)$/;"	f
sys_wait	kernel/sysproc.c	/^sys_wait(void)$/;"	f
sys_write	kernel/sysfile.c	/^sys_write(void)$/;"	f
syscall	kernel/syscall.c	/^syscall(void)$/;"	f
syscalls	kernel/syscall.c	/^static uint64 (*syscalls[])(void) = {$/;"	v	file:
sz	kernel/kernel.asm	/^    sz = uvmdealloc(p->pagetable, sz, sz + n);$/;"	d
sz	kernel/kernel.asm	/^  sz = PGROUNDUP(sz);$/;"	d
sz	kernel/kernel.asm	/^  sz = p->sz;$/;"	d
sz	kernel/kernel.asm	/^  sz = sz1;$/;"	d
sz	kernel/proc.h	/^  uint64 sz;                   \/\/ Size of process memory (bytes)$/;"	m	struct:proc
t0	kernel/proc.h	/^  \/*  72 *\/ uint64 t0;$/;"	m	struct:trapframe
t1	kernel/proc.h	/^  \/*  80 *\/ uint64 t1;$/;"	m	struct:trapframe
t2	kernel/proc.h	/^  \/*  88 *\/ uint64 t2;$/;"	m	struct:trapframe
t3	kernel/proc.h	/^  \/* 256 *\/ uint64 t3;$/;"	m	struct:trapframe
t4	kernel/proc.h	/^  \/* 264 *\/ uint64 t4;$/;"	m	struct:trapframe
t5	kernel/proc.h	/^  \/* 272 *\/ uint64 t5;$/;"	m	struct:trapframe
t6	kernel/proc.h	/^  \/* 280 *\/ uint64 t6;$/;"	m	struct:trapframe
target	kernel/kernel.asm	/^  target = n;$/;"	d
test	user/usertests.c	/^struct test {$/;"	s	file:
ticks	kernel/trap.c	/^uint ticks;$/;"	v
ticks0	kernel/kernel.asm	/^  ticks0 = ticks;$/;"	d
tickslock	kernel/trap.c	/^struct spinlock tickslock;$/;"	v	typeref:struct:spinlock
timerinit	kernel/start.c	/^timerinit()$/;"	f
tok	user/sh.asm	/^    tok = gettoken(ps, es, 0, 0);$/;"	d
top	user/usertests.asm	/^  top = (uint64) sbrk(0);$/;"	d
tot	kernel/kernel.asm	/^      tot = -1;$/;"	d
total	user/usertests.asm	/^    total = 0;$/;"	d
total	user/usertests.asm	/^  total = 0;$/;"	d
tp	kernel/proc.h	/^  \/*  64 *\/ uint64 tp;$/;"	m	struct:trapframe
trampoline	kernel/trampoline.S	/^trampoline:$/;"	l
trapframe	kernel/proc.h	/^  struct trapframe *trapframe; \/\/ data page for trampoline.S$/;"	m	struct:proc	typeref:struct:proc::trapframe
trapframe	kernel/proc.h	/^struct trapframe {$/;"	s
trapinit	kernel/trap.c	/^trapinit(void)$/;"	f
trapinithart	kernel/trap.c	/^trapinithart(void)$/;"	f
truncate1	user/usertests.c	/^truncate1(char *s)$/;"	f
truncate2	user/usertests.c	/^truncate2(char *s)$/;"	f
truncate3	user/usertests.c	/^truncate3(char *s)$/;"	f
twochildren	user/usertests.c	/^twochildren(char *s)$/;"	f
type	kernel/elf.h	/^  uint32 type;$/;"	m	struct:proghdr
type	kernel/elf.h	/^  ushort type;$/;"	m	struct:elfhdr
type	kernel/file.h	/^  enum { FD_NONE, FD_PIPE, FD_INODE, FD_DEVICE } type;$/;"	m	struct:file	typeref:enum:file::__anon6
type	kernel/file.h	/^  short type;         \/\/ copy of disk inode$/;"	m	struct:inode
type	kernel/fs.h	/^  short type;           \/\/ File type$/;"	m	struct:dinode
type	kernel/stat.h	/^  short type;  \/\/ Type of file$/;"	m	struct:stat
type	kernel/virtio.h	/^  uint32 type; \/\/ VIRTIO_BLK_T_IN or ..._OUT$/;"	m	struct:virtio_blk_req
type	user/sh.c	/^  int type;$/;"	m	struct:backcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:cmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:execcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:listcmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:pipecmd	file:
type	user/sh.c	/^  int type;$/;"	m	struct:redircmd	file:
uart_tx_buf	kernel/uart.c	/^char uart_tx_buf[UART_TX_BUF_SIZE];$/;"	v
uart_tx_lock	kernel/uart.c	/^struct spinlock uart_tx_lock;$/;"	v	typeref:struct:spinlock
uart_tx_r	kernel/uart.c	/^uint64 uart_tx_r; \/\/ read next from uart_tx_buf[uart_tx_r % UART_TX_BUF_SIZE]$/;"	v
uart_tx_w	kernel/uart.c	/^uint64 uart_tx_w; \/\/ write next to uart_tx_buf[uart_tx_w % UART_TX_BUF_SIZE]$/;"	v
uartgetc	kernel/uart.c	/^uartgetc(void)$/;"	f
uartinit	kernel/uart.c	/^uartinit(void)$/;"	f
uartintr	kernel/uart.c	/^uartintr(void)$/;"	f
uartputc	kernel/uart.c	/^uartputc(int c)$/;"	f
uartputc_sync	kernel/uart.c	/^uartputc_sync(int c)$/;"	f
uartstart	kernel/uart.c	/^uartstart()$/;"	f
uchar	kernel/types.h	/^typedef unsigned char  uchar;$/;"	t
uint	kernel/types.h	/^typedef unsigned int   uint;$/;"	t
uint	user/cat.asm	/^uint$/;"	l
uint	user/echo.asm	/^uint$/;"	l
uint	user/forktest.asm	/^uint$/;"	l
uint	user/grep.asm	/^uint$/;"	l
uint	user/grind.asm	/^uint$/;"	l
uint	user/init.asm	/^uint$/;"	l
uint	user/kill.asm	/^uint$/;"	l
uint	user/ln.asm	/^uint$/;"	l
uint	user/ls.asm	/^uint$/;"	l
uint	user/matmul.asm	/^uint$/;"	l
uint	user/mkdir.asm	/^uint$/;"	l
uint	user/rm.asm	/^uint$/;"	l
uint	user/sh.asm	/^uint$/;"	l
uint	user/stressfs.asm	/^uint$/;"	l
uint	user/usertests.asm	/^uint$/;"	l
uint	user/wc.asm	/^uint$/;"	l
uint	user/zombie.asm	/^uint$/;"	l
uint16	kernel/types.h	/^typedef unsigned short uint16;$/;"	t
uint32	kernel/types.h	/^typedef unsigned int  uint32;$/;"	t
uint64	kernel/kernel.asm	/^uint64$/;"	l
uint64	kernel/types.h	/^typedef unsigned long uint64;$/;"	t
uint8	kernel/types.h	/^typedef unsigned char uint8;$/;"	t
uninit	user/usertests.c	/^char uninit[10000];$/;"	v
unlink	user/cat.asm	/^unlink:$/;"	l
unlink	user/echo.asm	/^unlink:$/;"	l
unlink	user/forktest.asm	/^unlink:$/;"	l
unlink	user/grep.asm	/^unlink:$/;"	l
unlink	user/grind.asm	/^unlink:$/;"	l
unlink	user/init.asm	/^unlink:$/;"	l
unlink	user/kill.asm	/^unlink:$/;"	l
unlink	user/ln.asm	/^unlink:$/;"	l
unlink	user/ls.asm	/^unlink:$/;"	l
unlink	user/matmul.asm	/^unlink:$/;"	l
unlink	user/mkdir.asm	/^unlink:$/;"	l
unlink	user/rm.asm	/^unlink:$/;"	l
unlink	user/sh.asm	/^unlink:$/;"	l
unlink	user/stressfs.asm	/^unlink:$/;"	l
unlink	user/usertests.asm	/^unlink:$/;"	l
unlink	user/usys.S	/^unlink:$/;"	l
unlink	user/wc.asm	/^unlink:$/;"	l
unlink	user/zombie.asm	/^unlink:$/;"	l
unlinkread	user/usertests.c	/^unlinkread(char *s)$/;"	f
unsigned	user/grind.asm	/^unsigned long rand_next = 1;$/;"	l
unused	kernel/virtio.h	/^  uint16 unused;$/;"	m	struct:virtq_avail
uptime	user/cat.asm	/^uptime:$/;"	l
uptime	user/echo.asm	/^uptime:$/;"	l
uptime	user/forktest.asm	/^uptime:$/;"	l
uptime	user/grep.asm	/^uptime:$/;"	l
uptime	user/grind.asm	/^uptime:$/;"	l
uptime	user/init.asm	/^uptime:$/;"	l
uptime	user/kill.asm	/^uptime:$/;"	l
uptime	user/ln.asm	/^uptime:$/;"	l
uptime	user/ls.asm	/^uptime:$/;"	l
uptime	user/matmul.asm	/^uptime:$/;"	l
uptime	user/mkdir.asm	/^uptime:$/;"	l
uptime	user/rm.asm	/^uptime:$/;"	l
uptime	user/sh.asm	/^uptime:$/;"	l
uptime	user/stressfs.asm	/^uptime:$/;"	l
uptime	user/usertests.asm	/^uptime:$/;"	l
uptime	user/usys.S	/^uptime:$/;"	l
uptime	user/wc.asm	/^uptime:$/;"	l
uptime	user/zombie.asm	/^uptime:$/;"	l
used	kernel/virtio_disk.c	/^  struct virtq_used *used;$/;"	m	struct:disk	typeref:struct:disk::virtq_used	file:
used_idx	kernel/virtio_disk.c	/^  uint16 used_idx; \/\/ we've looked this far in used[2..NUM].$/;"	m	struct:disk	file:
userinit	kernel/proc.c	/^userinit(void)$/;"	f
userret	kernel/trampoline.S	/^userret:$/;"	l
usertrap	kernel/trap.c	/^usertrap(void)$/;"	f
usertrapret	kernel/trap.c	/^usertrapret(void)$/;"	f
uservec	kernel/trampoline.S	/^uservec:    $/;"	l
ushort	kernel/types.h	/^typedef unsigned short ushort;$/;"	t
uvmalloc	kernel/vm.c	/^uvmalloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz, int xperm)$/;"	f
uvmclear	kernel/vm.c	/^uvmclear(pagetable_t pagetable, uint64 va)$/;"	f
uvmcopy	kernel/vm.c	/^uvmcopy(pagetable_t old, pagetable_t new, uint64 sz)$/;"	f
uvmcreate	kernel/vm.c	/^uvmcreate()$/;"	f
uvmdealloc	kernel/vm.c	/^uvmdealloc(pagetable_t pagetable, uint64 oldsz, uint64 newsz)$/;"	f
uvmfirst	kernel/vm.c	/^uvmfirst(pagetable_t pagetable, uchar *src, uint sz)$/;"	f
uvmfree	kernel/vm.c	/^uvmfree(pagetable_t pagetable, uint64 sz)$/;"	f
uvmunmap	kernel/vm.c	/^uvmunmap(pagetable_t pagetable, uint64 va, uint64 npages, int do_free)$/;"	f
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(dstva);$/;"	d
va0	kernel/kernel.asm	/^    va0 = PGROUNDDOWN(srcva);$/;"	d
vaddr	kernel/elf.h	/^  uint64 vaddr;$/;"	m	struct:proghdr
valid	kernel/buf.h	/^  int valid;   \/\/ has data been read from disk?$/;"	m	struct:buf
valid	kernel/file.h	/^  int valid;          \/\/ inode has been read from disk?$/;"	m	struct:inode
validatetest	user/usertests.c	/^validatetest(char *s)$/;"	f
vdisk_lock	kernel/virtio_disk.c	/^  struct spinlock vdisk_lock;$/;"	m	struct:disk	typeref:struct:disk::spinlock	file:
version	kernel/elf.h	/^  uint version;$/;"	m	struct:elfhdr
virtio_blk_req	kernel/virtio.h	/^struct virtio_blk_req {$/;"	s
virtio_disk_init	kernel/virtio_disk.c	/^virtio_disk_init(void)$/;"	f
virtio_disk_intr	kernel/virtio_disk.c	/^virtio_disk_intr()$/;"	f
virtio_disk_rw	kernel/virtio_disk.c	/^virtio_disk_rw(struct buf *b, int write)$/;"	f
virtq_avail	kernel/virtio.h	/^struct virtq_avail {$/;"	s
virtq_desc	kernel/virtio.h	/^struct virtq_desc {$/;"	s
virtq_used	kernel/virtio.h	/^struct virtq_used {$/;"	s
virtq_used_elem	kernel/virtio.h	/^struct virtq_used_elem {$/;"	s
void	kernel/kernel.asm	/^void *$/;"	l
void	kernel/kernel.asm	/^void uartstart();$/;"	l
void	kernel/kernel.asm	/^void$/;"	l
void	user/cat.asm	/^void *$/;"	l
void	user/cat.asm	/^void$/;"	l
void	user/echo.asm	/^void *$/;"	l
void	user/echo.asm	/^void$/;"	l
void	user/forktest.asm	/^void *$/;"	l
void	user/forktest.asm	/^void$/;"	l
void	user/grep.asm	/^void *$/;"	l
void	user/grep.asm	/^void$/;"	l
void	user/grind.asm	/^void *$/;"	l
void	user/grind.asm	/^void$/;"	l
void	user/init.asm	/^void *$/;"	l
void	user/init.asm	/^void$/;"	l
void	user/kill.asm	/^void *$/;"	l
void	user/kill.asm	/^void$/;"	l
void	user/ln.asm	/^void *$/;"	l
void	user/ln.asm	/^void$/;"	l
void	user/ls.asm	/^void *$/;"	l
void	user/ls.asm	/^void$/;"	l
void	user/matmul.asm	/^void *$/;"	l
void	user/matmul.asm	/^void$/;"	l
void	user/mkdir.asm	/^void *$/;"	l
void	user/mkdir.asm	/^void$/;"	l
void	user/rm.asm	/^void *$/;"	l
void	user/rm.asm	/^void$/;"	l
void	user/sh.asm	/^void *$/;"	l
void	user/sh.asm	/^void$/;"	l
void	user/stressfs.asm	/^void *$/;"	l
void	user/stressfs.asm	/^void$/;"	l
void	user/usertests.asm	/^void *$/;"	l
void	user/usertests.asm	/^void$/;"	l
void	user/wc.asm	/^void *$/;"	l
void	user/wc.asm	/^void$/;"	l
void	user/zombie.asm	/^void *$/;"	l
void	user/zombie.asm	/^void$/;"	l
volatile	kernel/kernel.asm	/^volatile static int started = 0;$/;"	l
vprintf	user/printf.c	/^vprintf(int fd, const char *fmt, va_list ap)$/;"	f
w	kernel/console.c	/^  uint w;  \/\/ Write index$/;"	m	struct:__anon3	file:
w_mcounteren	kernel/riscv.h	/^w_mcounteren(uint64 x)$/;"	f
w_medeleg	kernel/riscv.h	/^w_medeleg(uint64 x)$/;"	f
w_menvcfg	kernel/riscv.h	/^w_menvcfg(uint64 x)$/;"	f
w_mepc	kernel/riscv.h	/^w_mepc(uint64 x)$/;"	f
w_mideleg	kernel/riscv.h	/^w_mideleg(uint64 x)$/;"	f
w_mie	kernel/riscv.h	/^w_mie(uint64 x)$/;"	f
w_mstatus	kernel/riscv.h	/^w_mstatus(uint64 x)$/;"	f
w_pmpaddr0	kernel/riscv.h	/^w_pmpaddr0(uint64 x)$/;"	f
w_pmpcfg0	kernel/riscv.h	/^w_pmpcfg0(uint64 x)$/;"	f
w_satp	kernel/riscv.h	/^w_satp(uint64 x)$/;"	f
w_sepc	kernel/riscv.h	/^w_sepc(uint64 x)$/;"	f
w_sie	kernel/riscv.h	/^w_sie(uint64 x)$/;"	f
w_sip	kernel/riscv.h	/^w_sip(uint64 x)$/;"	f
w_sstatus	kernel/riscv.h	/^w_sstatus(uint64 x)$/;"	f
w_stimecmp	kernel/riscv.h	/^w_stimecmp(uint64 x)$/;"	f
w_stvec	kernel/riscv.h	/^w_stvec(uint64 x)$/;"	f
w_tp	kernel/riscv.h	/^w_tp(uint64 x)$/;"	f
wait	kernel/proc.c	/^wait(uint64 addr)$/;"	f
wait	user/cat.asm	/^wait:$/;"	l
wait	user/echo.asm	/^wait:$/;"	l
wait	user/forktest.asm	/^wait:$/;"	l
wait	user/grep.asm	/^wait:$/;"	l
wait	user/grind.asm	/^wait:$/;"	l
wait	user/init.asm	/^wait:$/;"	l
wait	user/kill.asm	/^wait:$/;"	l
wait	user/ln.asm	/^wait:$/;"	l
wait	user/ls.asm	/^wait:$/;"	l
wait	user/matmul.asm	/^wait:$/;"	l
wait	user/mkdir.asm	/^wait:$/;"	l
wait	user/rm.asm	/^wait:$/;"	l
wait	user/sh.asm	/^wait:$/;"	l
wait	user/stressfs.asm	/^wait:$/;"	l
wait	user/usertests.asm	/^wait:$/;"	l
wait	user/usys.S	/^wait:$/;"	l
wait	user/wc.asm	/^wait:$/;"	l
wait	user/zombie.asm	/^wait:$/;"	l
wait_lock	kernel/proc.c	/^struct spinlock wait_lock;$/;"	v	typeref:struct:spinlock
wakeup	kernel/proc.c	/^wakeup(void *chan)$/;"	f
walk	kernel/vm.c	/^walk(pagetable_t pagetable, uint64 va, int alloc)$/;"	f
walkaddr	kernel/vm.c	/^walkaddr(pagetable_t pagetable, uint64 va)$/;"	f
wc	user/wc.c	/^wc(int fd, char *name)$/;"	f
whitespace	user/sh.c	/^char whitespace[] = " \\t\\r\\n\\v";$/;"	v
winode	mkfs/mkfs.c	/^winode(uint inum, struct dinode *ip)$/;"	f
wpid	user/init.asm	/^      wpid = wait((int *) 0);$/;"	d
writable	kernel/file.h	/^  char writable;$/;"	m	struct:file
write	kernel/file.h	/^  int (*write)(int, uint64, int);$/;"	m	struct:devsw
write	user/cat.asm	/^write:$/;"	l
write	user/echo.asm	/^write:$/;"	l
write	user/forktest.asm	/^write:$/;"	l
write	user/grep.asm	/^write:$/;"	l
write	user/grind.asm	/^write:$/;"	l
write	user/init.asm	/^write:$/;"	l
write	user/kill.asm	/^write:$/;"	l
write	user/ln.asm	/^write:$/;"	l
write	user/ls.asm	/^write:$/;"	l
write	user/matmul.asm	/^write:$/;"	l
write	user/mkdir.asm	/^write:$/;"	l
write	user/rm.asm	/^write:$/;"	l
write	user/sh.asm	/^write:$/;"	l
write	user/stressfs.asm	/^write:$/;"	l
write	user/usertests.asm	/^write:$/;"	l
write	user/usys.S	/^write:$/;"	l
write	user/wc.asm	/^write:$/;"	l
write	user/zombie.asm	/^write:$/;"	l
write_head	kernel/log.c	/^write_head(void)$/;"	f	file:
write_log	kernel/log.c	/^write_log(void)$/;"	f	file:
writebig	user/usertests.c	/^writebig(char *s)$/;"	f
writei	kernel/fs.c	/^writei(struct inode *ip, int user_src, uint64 src, uint off, uint n)$/;"	f
writeopen	kernel/pipe.c	/^  int writeopen;  \/\/ write fd is still open$/;"	m	struct:pipe	file:
writetest	user/usertests.c	/^writetest(char *s)$/;"	f
wsect	mkfs/mkfs.c	/^wsect(uint sec, void *buf)$/;"	f
x	kernel/kernel.asm	/^    x = -xx;$/;"	d
x	kernel/kernel.asm	/^    x = xx;$/;"	d
x	user/cat.asm	/^    x = -xx;$/;"	d
x	user/cat.asm	/^    x = xx;$/;"	d
x	user/echo.asm	/^    x = -xx;$/;"	d
x	user/echo.asm	/^    x = xx;$/;"	d
x	user/grep.asm	/^    x = -xx;$/;"	d
x	user/grep.asm	/^    x = xx;$/;"	d
x	user/grind.asm	/^    x = (*ctx % 0x7ffffffe) + 1;$/;"	d
x	user/grind.asm	/^    x = -xx;$/;"	d
x	user/grind.asm	/^    x = 16807 * lo - 2836 * hi;$/;"	d
x	user/grind.asm	/^    x = xx;$/;"	d
x	user/init.asm	/^    x = -xx;$/;"	d
x	user/init.asm	/^    x = xx;$/;"	d
x	user/kill.asm	/^    x = -xx;$/;"	d
x	user/kill.asm	/^    x = xx;$/;"	d
x	user/ln.asm	/^    x = -xx;$/;"	d
x	user/ln.asm	/^    x = xx;$/;"	d
x	user/ls.asm	/^    x = -xx;$/;"	d
x	user/ls.asm	/^    x = xx;$/;"	d
x	user/matmul.asm	/^    x = -xx;$/;"	d
x	user/matmul.asm	/^    x = xx;$/;"	d
x	user/mkdir.asm	/^    x = -xx;$/;"	d
x	user/mkdir.asm	/^    x = xx;$/;"	d
x	user/rm.asm	/^    x = -xx;$/;"	d
x	user/rm.asm	/^    x = xx;$/;"	d
x	user/sh.asm	/^    x = -xx;$/;"	d
x	user/sh.asm	/^    x = xx;$/;"	d
x	user/stressfs.asm	/^    x = -xx;$/;"	d
x	user/stressfs.asm	/^    x = xx;$/;"	d
x	user/umalloc.c	/^  Align x;$/;"	m	union:header	file:
x	user/usertests.asm	/^    x = -xx;$/;"	d
x	user/usertests.asm	/^    x = x * 1103515245 + 12345;$/;"	d
x	user/usertests.asm	/^    x = xx;$/;"	d
x	user/wc.asm	/^    x = -xx;$/;"	d
x	user/wc.asm	/^    x = xx;$/;"	d
x	user/zombie.asm	/^    x = -xx;$/;"	d
x	user/zombie.asm	/^    x = xx;$/;"	d
xint	mkfs/mkfs.c	/^xint(uint x)$/;"	f
xshort	mkfs/mkfs.c	/^xshort(ushort x)$/;"	f
xstate	kernel/proc.h	/^  int xstate;                  \/\/ Exit status to be returned to parent's wait$/;"	m	struct:proc
xticks	kernel/kernel.asm	/^  xticks = ticks;$/;"	d
yield	kernel/proc.c	/^yield(void)$/;"	f
zeroes	mkfs/mkfs.c	/^char zeroes[BSIZE];$/;"	v
